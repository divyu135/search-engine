Computing - Wikipedia Computing From Wikipedia, the free encyclopedia Jump to navigation Jump to search Branch of knowledge Computer simulation, one of the main cross-computing methodologies.[1] Computing is any goal-oriented activity requiring, benefiting from, or creating computing machinery. It includes study of algorithmic processes and development of both hardware and software. It has scientific, engineering, mathematical, technological and social aspects. Major computing fields include computer engineering, computer science, cybersecurity, data science, information systems, information technology and software engineering.[2] ENIAC, an early Turing complete vacuum tube programmable computer. The Raspberry Pi, a modern single-board computer developed for promotion of teaching basic computer science & engineering in schools and in developing countries.[3][4] Contents 1 Definitions 2 History 3 Computer 3.1 Computer hardware 3.2 Computer software 3.2.1 System software 3.2.2 Application software 3.3 Computer network 3.3.1 Internet 3.4 Computer programming 3.4.1 Computer programmer 3.5 Computer industry 3.5.1 Software industry 4 Sub-disciplines of computing 4.1 Computer engineering 4.2 Software engineering 4.3 Computer science 4.4 Cybersecurity 4.5 Data science 4.6 Information systems 4.7 Information technology 5 Research and emerging technologies 5.1 Cloud Computing 5.2 Quantum Computing 6 See also 7 References 8 External links Definitions[edit] The ACM Computing Curricula 2005[5] and 2020[2] defined "computing" as follows: "In a general way, we can define computing to mean any goal-oriented activity requiring, benefiting from, or creating computers. Thus, computing includes designing and building hardware and software systems for a wide range of purposes; processing, structuring, and managing various kinds of information; doing scientific studies using computers; making computer systems behave intelligently; creating and using communications and entertainment media; finding and gathering information relevant to any particular purpose, and so on. The list is virtually endless, and the possibilities are vast." ACM also defines seven sub-disciplines of the computing field:[2] Computer engineering. Computer science. Cybersecurity. Data science. Information systems. Information technology. Software engineering. However, Computing Curricula 2005[5] also recognizes that the meaning of "computing" depends on the context: Computing also has other meanings that are more specific, based on the context in which the term is used. For example, an information systems specialist will view computing somewhat differently from a software engineer. Regardless of the context, doing computing well can be complicated and difficult. Because society needs people to do computing well, we must think of computing not only as a profession but also as a discipline. The Antikythera mechanism, dating between 150 and 100 BC, was an early analog computer. The term "computing" has sometimes been narrowly defined, as in a 1989 ACM report on Computing as a Discipline:[6] The discipline of computing is the systematic study of algorithmic processes that describe and transform information: their theory, analysis, design, efficiency, implementation, and application. The fundamental question underlying all computing is "What can be (efficiently) automated?" The term "computing" is also synonymous with counting and calculating. In earlier times, it was used in reference to the action performed by mechanical computing machines, and before that, to human computers.[7] History[edit] Main articles: History of computing and Timeline of computing The history of computing is longer than the history of computing hardware and modern computing technology and includes the history of methods intended for pen and paper or for chalk and slate, with or without the aid of tables. Computing is intimately tied to the representation of numbers. But long before abstractions like the number arose, there were mathematical concepts to serve the purposes of civilization.[clarification needed] These concepts include one-to-one correspondence (the basis of counting), comparison to a standard (used for measurement), and the 3-4-5 right triangle (a device for assuring a right angle). The earliest known tool for use in computation was the abacus, and it was thought to have been invented in Babylon circa 2400 BC. Its original style of usage was by lines drawn in sand with pebbles. Abaci, of a more modern design, are still used as calculation tools today. This was the first known calculation aid – preceding Greek methods by 2,000 years[citation needed]. The first recorded idea of using digital electronics for computing was the 1931 paper "The Use of Thyratrons for High Speed Automatic Counting of Physical Phenomena" by C. E. Wynn-Williams.[8] Claude Shannon's 1938 paper "A Symbolic Analysis of Relay and Switching Circuits" then introduced the idea of using electronics for Boolean algebraic operations. The concept of a field-effect transistor was proposed by Julius Edgar Lilienfeld in 1925. John Bardeen and Walter Brattain, while working under William Shockley at Bell Labs, built the first working transistor, the point-contact transistor, in 1947.[9][10] In 1953, the University of Manchester built the first transistorized computer, called the Transistor Computer.[11] However, early junction transistors were relatively bulky devices that were difficult to manufacture on a mass-production basis, which limited them to a number of specialised applications.[12] The metal–oxide–silicon field-effect transistor (MOSFET, or MOS transistor) was invented by Mohamed Atalla and Dawon Kahng at Bell Labs in 1959.[13][14] It was the first truly compact transistor that could be miniaturised and mass-produced for a wide range of uses.[12] The MOSFET made it possible to build high-density integrated circuit chips,[15][16] leading to what is known as the computer revolution[17] or microcomputer revolution.[18] Computer[edit] Main articles: Computer, Outline of computers, and Glossary of computer terms A computer is a machine that manipulates data according to a set of instructions called a computer program. The program has an executable form that the computer can use directly to execute the instructions. The same program in its human-readable source code form, enables a programmer to study and develop a sequence of steps known as an algorithm. Because the instructions can be carried out in different types of computers, a single set of source instructions converts to machine instructions according to the CPU type. The execution process carries out the instructions in a computer program. Instructions express the computations performed by the computer. They trigger sequences of simple actions on the executing machine. Those actions produce effects according to the semantics of the instructions. Computer hardware[edit] Computer hardware includes the physical parts of a computer, including central processing unit, memory and Input/output. Important topics in the field of computer hardware are computational logic and computer architecture. Computer software[edit] Computer software, or just "software", is a collection of computer programs and related data that provides the instructions for telling a computer what to do and how to do it. Software refers to one or more computer programs and data held in the storage of the computer for some purposes. In other words, software is a set of programs, procedures, algorithms and its documentation concerned with the operation of a data processing system. Program software performs the function of the program it implements, either by directly providing instructions to the computer hardware or by serving as input to another piece of software. The term was coined to contrast with the old term hardware (meaning physical devices). In contrast to hardware, software is intangible.[19] Software is also sometimes used in a more narrow sense, meaning application software only. System software[edit] Main article: System software System software, or systems software, is computer software designed to operate and control the computer hardware, and to provide a platform for running application software. System software includes operating systems, utility software, device drivers, window systems, and firmware. Frequently used development tools such as compilers, linkers, and debuggers[20] are classified as system software. Application software[edit] Main article: Application software Application software, also known as an "application" or an "app", is computer software designed to help the user to perform specific tasks. Examples include enterprise software, accounting software, office suites, graphics software and media players. Many application programs deal principally with documents. Apps may be bundled with the computer and its system software, or may be published separately. Some users are satisfied with the bundled apps and need never install additional applications. Application software is contrasted with system software and middleware, which manage and integrate a computer's capabilities, but typically do not directly apply them in the performance of tasks that benefit the user. The system software serves the application, which in turn serves the user. Application software applies the power of a particular computing platform or system software to a particular purpose. Some apps such as Microsoft Office are available in versions for several different platforms; others have narrower requirements and are thus called, for example, a Geography application for Windows or an Android application for education or Linux gaming. Sometimes a new and popular application arises that only runs on one platform, increasing the desirability of that platform. This is called a killer application. Computer network[edit] Main article: Computer network A computer network, often simply referred to as a network, is a collection of hardware components and computers interconnected by communication channels that allow sharing of resources and information.[21] Where at least one process in one device is able to send/receive data to/from at least one process residing in a remote device, then the two devices are said to be in a network. Networks may be classified according to a wide variety of characteristics such as the medium used to transport the data, communications protocol used, scale, topology, and organizational scope. Communications protocols define the rules and data formats for exchanging information in a computer network, and provide the basis for network programming. Well-known communications protocols include Ethernet, a hardware and Link Layer standard that is ubiquitous in local area networks, and the Internet Protocol Suite, which defines a set of protocols for internetworking, i.e. for data communication between multiple networks, as well as host-to-host data transfer, and application-specific data transmission formats. Computer networking is sometimes considered a sub-discipline of electrical engineering, telecommunications, computer science, information technology or computer engineering, since it relies upon the theoretical and practical application of these disciplines. Internet[edit] Main article: Internet The Internet is a global system of interconnected computer networks that use the standard Internet protocol suite (TCP/IP) to serve billions of users that consists of millions of private, public, academic, business, and government networks, of local to global scope, that are linked by a broad array of electronic, wireless and optical networking technologies. The Internet carries an extensive range of information resources and services, such as the inter-linked hypertext documents of the World Wide Web and the infrastructure to support email. Computer programming[edit] Main articles: Computer programming and Software engineering Computer programming in general is the process of writing, testing, debugging, and maintaining the source code and documentation of computer programs. This source code is written in a programming language, which is an artificial language often more restrictive or demanding than natural languages, but easily translated by the computer. The purpose of programming is to invoke the desired behavior (customization) from the machine. The process of writing high quality source code requires knowledge of both the application's domain and the computer science domain. The highest-quality software is thus developed by a team of various domain experts, each person a specialist in some area of development. But the term programmer may apply to a range of program quality, from hacker to open source contributor to professional. And a single programmer could do most or all of the computer programming needed to generate the proof of concept to launch a new "killer" application. Computer programmer[edit] Main articles: Programmer, Software engineer, and Software developer A programmer, computer programmer, or coder is a person who writes computer software. The term computer programmer can refer to a specialist in one area of computer programming or to a generalist who writes code for many kinds of software. One who practices or professes a formal approach to programming may also be known as a programmer analyst. A programmer's primary computer language (C, C++, Java, Lisp, Python, etc.) is often prefixed to the above titles, and those who work in a web environment often prefix their titles with web. The term programmer can be used to refer to a software developer, software engineer, computer scientist, or software analyst. However, members of these professions typically[22] possess other software engineering skills, beyond programming. Computer industry[edit] Main article: Computer industry The computer industry is made up of all of the businesses involved in developing computer software, designing computer hardware and computer networking infrastructures, the manufacture of computer components and the provision of information technology services including system administration and maintenance. Software industry[edit] Main article: Software industry The software industry includes businesses engaged in development, maintenance and publication of software. The industry also includes software services, such as training, documentation, and consulting. Sub-disciplines of computing[edit] Computer engineering[edit] Main article: Computer engineering Computer engineering is a discipline that integrates several fields of electrical engineering and computer science required to develop computer hardware and software.[23] Computer engineers usually have training in electronic engineering (or electrical engineering), software design, and hardware-software integration instead of only software engineering or electronic engineering. Computer engineers are involved in many hardware and software aspects of computing, from the design of individual microprocessors, personal computers, and supercomputers, to circuit design. This field of engineering not only focuses on the design of hardware within its own domain, but as well the interactions between hardware and the world around it.[24] Software engineering[edit] Main article: Software engineering Software engineering (SE) is the application of a systematic, disciplined, quantifiable approach to the design, development, operation, and maintenance of software, and the study of these approaches; that is, the application of engineering to software.[25][26][27] In layman's terms, it is the act of using insights to conceive, model and scale a solution to a problem. The first reference to the term is the 1968 NATO Software Engineering Conference and was meant to provoke thought regarding the perceived "software crisis" at the time.[28][29][30] Software development, a much used and more generic term, does not necessarily subsume the engineering paradigm. The generally accepted concepts of Software Engineering as an engineering discipline have been specified in the Guide to the Software Engineering Body of Knowledge (SWEBOK). The SWEBOK has become an internationally accepted standard ISO/IEC TR 19759:2015.[31] Computer science[edit] Main articles: Computer science and Computer scientist Computer science or computing science (abbreviated CS or Comp Sci) is the scientific and practical approach to computation and its applications. A computer scientist specializes in the theory of computation and the design of computational systems.[32] Its subfields can be divided into practical techniques for its implementation and application in computer systems and purely theoretical areas. Some, such as computational complexity theory, which studies fundamental properties of computational problems, are highly abstract, while others, such as computer graphics, emphasize real-world applications. Still others focus on the challenges in implementing computations. For example, programming language theory studies approaches to description of computations, while the study of computer programming itself investigates various aspects of the use of programming languages and complex systems, and human–computer interaction focuses on the challenges in making computers and computations useful, usable, and universally accessible to humans. Cybersecurity[edit] Main article: Computer security Data science[edit] Main article: Data Science Information systems[edit] Main article: Information systems "Information systems (IS)" is the study of complementary networks of hardware and software (see information technology) that people and organizations use to collect, filter, process, create, and distribute data.[33][34][35][36][37] The ACM's Computing Careers website says "A majority of IS [degree] programs are located in business schools; however, they may have different names such as management information systems, computer information systems, or business information systems. All IS degrees combine business and computing topics, but the emphasis between technical and organizational issues varies among programs. For example, programs differ substantially in the amount of programming required."[38] The study bridges business and computer science using the theoretical foundations of information and computation to study various business models and related algorithmic processes within a computer science discipline.[39][40][41][42][43][44][45][46][47][48] The field of Computer Information System(s) (CIS) studies computers and algorithmic processes, including their principles, their software and hardware designs, their applications, and their impact on society[49][50][51] while IS emphasizes functionality over design.[52] Information technology[edit] Main article: Information technology Information technology (IT) is the application of computers and telecommunications equipment to store, retrieve, transmit and manipulate data,[53] often in the context of a business or other enterprise.[54] The term is commonly used as a synonym for computers and computer networks, but it also encompasses other information distribution technologies such as television and telephones. Several industries are associated with information technology, such as computer hardware, software, electronics, semiconductors, internet, telecom equipment, e-commerce and computer services.[55][56] Research and emerging technologies[edit] Further information: List of unsolved problems in computer science DNA-based computing and quantum computing are areas of active research in both hardware and software (such as the development of quantum algorithms). Potential infrastructure for future technologies includes DNA origami on photolithography[57] and quantum antennae for transferring information between ion traps.[58] By 2011, researchers had entangled 14 qubits.[59][60] Fast digital circuits (including those based on Josephson junctions and rapid single flux quantum technology) are becoming more nearly realizable with the discovery of nanoscale superconductors.[61] Fiber-optic and photonic (optical) devices, which already have been used to transport data over long distances, have started being used by data centers, side by side with CPU and semiconductor memory components. This allows the separation of RAM from CPU by optical interconnects.[62] IBM has created an integrated circuit with both electronic and optical information processing in one chip. This is denoted "CMOS-integrated nanophotonics" or (CINP).[63] One benefit of optical interconnects is that motherboards which formerly required a certain kind of system on a chip (SoC) can now move formerly dedicated memory and network controllers off the motherboards, spreading the controllers out onto the rack. This allows standardization of backplane interconnects and motherboards for multiple types of SoCs, which allows more timely upgrades of CPUs.[64] Another field of research is spintronics. Spintronics can provide computing power and storage, without heat buildup.[65] Some research is being done on hybrid chips, which combine photonics and spintronics.[66][67] There is also research ongoing on combining plasmonics, photonics, and electronics.[68] Cloud Computing[edit] Cloud computing is a model that allows for the use of computing resources, such as servers or applications, without the need for much interaction between the owner of these resources and the user using them. It is typically offered as a service, making it another example of Software as a Service, Platforms as a Service, and Infrastructure as a Service depending on the functionality offered. Key characteristics include on-demand access, broad network access, and the capability of rapid scaling.[69] It allows individual users or small business to benefit from economies of scale. One area of interest in this field is its potential to support energy efficiency. Allowing thousands of instances of computation to occur on one single machine instead of thousands of individual machines could help save energy. It could also ease the transition to more renewable energy, since it would suffice to power one server farm with a set of solar panels or wind turbines rather than millions of peoples' homes.[70] With centralized computing, the field poses several challenges, especially in security and privacy. Current legislation does not sufficiently protect users from companies mishandling their data on the company servers. This suggests potential for further legislative regulations on cloud computing and tech companies.[71] Quantum Computing[edit] Quantum computing is an area of research that brings together the disciplines of computer science, information theory, and quantum physics. The idea of information being a basic part of physics is relatively new, but there seems to be a strong tie between information theory and quantum mechanics.[72] Whereas traditional computing operates on a binary system of ones and zeros, quantum computing uses qubits. Qubits are capable of being in a superposition, which means that they are in both states, one and zero, simultaneously. This means the qubit is not somewhere between 1 and 0, but actually the value of the qubit will change depending on when you measure it. This trait of qubits is called quantum entanglement and is the core idea of quantum computing and is what allows quantum computers to do the large scale equations they are used for.[73] Quantum computing is often used for scientific research where a normal computer does not have nearly enough computational power to do the calculations necessary. A good example would be molecular modeling. Large molecules are far too complex for modern computers to calculate what happens to them during a reaction, but the power of quantum computers could open the doors to further understanding these molecules. See also[edit] Index of history of computing articles List of computer term etymologies Lehmer sieve Scientific computing Electronic data processing Creative computing References[edit] ^ "Computing Classification System". dl.acm.org. ^ a b c "Computing Curriculum 2020" (PDF). ^ Cellan-Jones, Rory (5 May 2011). "A£15 computer to inspire young programmers". BBC News. ^ Price, Peter (3 June 2011). "Can a £15 computer solve the programming gap?". BBC Click. Retrieved 2 July 2011. ^ a b The Joint Task Force for Computing Curricula 2005. "Computing Curricula 2005: The Overview Report" (PDF). Archived from the original (PDF) on 2014-10-21. ^ Peter J. Denning; et al. (January 1989). "Computing as a Discipline" (PDF). Communications of the ACM. Association for Computing Machinery. 32: 9–23. doi:10.1145/63238.63239. S2CID 723103. Archived from the original (PDF) on 2011-09-28. Retrieved 2012-11-30. ^ "The History of Computing". mason.gmu.edu. Retrieved 2019-04-12. ^ Wynn-Williams, C. E. (July 2, 1931), "The Use of Thyratrons for High Speed Automatic Counting of Physical Phenomena", Proceedings of the Royal Society A, 132 (819): 295–310, Bibcode:1931RSPSA.132..295W, doi:10.1098/rspa.1931.0102 ^ Lee, Thomas H. (2003). The Design of CMOS Radio-Frequency Integrated Circuits (PDF). Cambridge University Press. ISBN 9781139643771. ^ Puers, Robert; Baldi, Livio; Voorde, Marcel Van de; Nooten, Sebastiaan E. van (2017). Nanoelectronics: Materials, Devices, Applications, 2 Volumes. John Wiley & Sons. p. 14. ISBN 9783527340538. ^ Lavington, Simon (1998), A History of Manchester Computers (2 ed.), Swindon: The British Computer Society, pp. 34–35 ^ a b Moskowitz, Sanford L. (2016). Advanced Materials Innovation: Managing Global Technology in the 21st century. John Wiley & Sons. pp. 165–167. ISBN 9780470508923. ^ "1960 - Metal Oxide Semiconductor (MOS) Transistor Demonstrated". The Silicon Engine. Computer History Museum. ^ Lojek, Bo (2007). History of Semiconductor Engineering. Springer Science & Business Media. pp. 321–3. ISBN 9783540342588. ^ "Who Invented the Transistor?". Computer History Museum. 4 December 2013. Retrieved 20 July 2019. ^ Hittinger, William C. (1973). "Metal-Oxide-Semiconductor Technology". Scientific American. 229 (2): 48–59. Bibcode:1973SciAm.229b..48H. doi:10.1038/scientificamerican0873-48. ISSN 0036-8733. JSTOR 24923169. ^ Fossum, Jerry G.; Trivedi, Vishal P. (2013). Fundamentals of Ultra-Thin-Body MOSFETs and FinFETs. Cambridge University Press. p. vii. ISBN 9781107434493. ^ Malmstadt, Howard V.; Enke, Christie G.; Crouch, Stanley R. (1994). Making the Right Connections: Microcomputers and Electronic Instrumentation. American Chemical Society. p. 389. ISBN 9780841228610. The relative simplicity and low power requirements of MOSFETs have fostered today's microcomputer revolution. ^ "Wordreference.com: WordNet 2.0". Princeton University, Princeton, NJ. Retrieved 2007-08-19. ^ Rouse, Margaret (March 2019). "system software". WhatIs.com. TechTarget. ^ "Computer network definition". Archived from the original on 2012-01-21. Retrieved 2011-11-12. ^ "5 Skills Developers Need Beyond Writing Code". 23 January 2019. ^ IEEE Computer Society; ACM (12 December 2004). Computer Engineering 2004: Curriculum Guidelines for Undergraduate Degree Programs in Computer Engineering (PDF). p. iii. Retrieved 2012-12-17. Computer System engineering has traditionally been viewed as a combination ofboth electronic engineering (EE) and computer science (CS). ^ Trinity College Dublin. "What is Computer System Engineering". Retrieved 2006-04-21. , "Computer engineers need not only to understand how computer systems themselves work, but also how they integrate into the larger picture. Consider the car. A modern car contains many separate computer systems for controlling such things as the engine timing, the brakes and the air bags. To be able to design and implement such a car, the computer engineer needs a broad theoretical understanding of all these various subsystems & how they interact. ^ Abran, Alain; Moore, James W.; Bourque, Pierre; Dupuis, Robert; Tripp, Leonard L. (2004). Guide to the Software Engineering Body of Knowledge. IEEE. p. 1. ISBN 978-0-7695-2330-9. ^ ACM (2006). "Computing Degrees & Careers". ACM. Archived from the original on 2011-06-17. Retrieved 2010-11-23. ^ Laplante, Phillip (2007). What Every Engineer Should Know about Software Engineering. Boca Raton: CRC. ISBN 978-0-8493-7228-5. Retrieved 2011-01-21. ^ Sommerville, Ian (2008). Software Engineering (7 ed.). Pearson Education. p. 26. ISBN 978-81-7758-530-8. Retrieved 10 January 2013. ^ Peter, Naur; Randell, Brian (7–11 October 1968). Software Engineering: Report of a conference sponsored by the NATO Science Committee (PDF). Garmisch, Germany: Scientific Affairs Division, NATO. Retrieved 2008-12-26. ^ Randell, Brian (10 August 2001). "The 1968/69 NATO Software Engineering Reports". Brian Randell's University Homepage. The School of the Computer Sciences, Newcastle University. Retrieved 2008-10-11. The idea for the first NATO Software Engineering Conference, and in particular that of adopting the then practically unknown term "software engineering" as its (deliberately provocative) title, I believe came originally from Professor Fritz Bauer. ^ "Software Engineering -- Guide to the software engineering body of knowledge (SWEBOK)". International Organization for Standardization. ISO/IEC TR 19759:2015. Retrieved 21 May 2019. ^ "WordNet Search - 3.1". Wordnetweb.princeton.edu. Retrieved 2012-05-14. ^ "Definition of Application Landscape". Software Engineering for Business Information Systems (sebis). Jan 21, 2009. Archived from the original on March 5, 2011. Retrieved January 14, 2011. ^ Archibald, J.A. (May 1975). "Computer Science education for majors of other disciplines". AFIPS Joint Computer Conferences: 903–906. Computer science spreads out over several related disciplines, and shares with these disciplines certain sub-disciplines that traditionally have been located exclusively in the more conventional disciplines ^ Denning, Peter (July 1999). "COMPUTER SCIENCE: THE DISCIPLINE". Encyclopaedia of Computer Science (2000 Edition). The Domain of Computer Science: Even though computer science addresses both human-made and natural information processes, the main effort in the discipline has been directed toward human-made processes, especially information processing systems and machines ^ Coy, Wolfgang (June 2004). "Between the disciplines". ACM SIGCSE Bulletin. 36 (2): 7–10. doi:10.1145/1024338.1024340. ISSN 0097-8418. S2CID 10389644. Computer science may be in the core of these processes. The actual question is not to ignore disciplinary boundaries with its methodological differences but to open the disciplines for collaborative work. We must learn to build bridges, not to start in the gap between disciplines ^ Jessup, Leonard M.; Valacich, Joseph S. (2008). Information Systems Today (3rd ed.). Pearson Publishing. pp. –, 416. ^ "Computing Degrees & Careers " Information Systems". Association for Computing Machinery. Archived from the original on 6 July 2018. Retrieved 6 July 2018. ^ Hoganson, Ken (December 2001). "Alternative curriculum models for integrating computer science and information systems analysis, recommendations, pitfalls, opportunities, accreditations, and trends". Journal of Computing Sciences in Colleges. 17 (2): 313–325. ISSN 1937-4771. Information Systems grew out of the need to bridge the gap between business management and computer science ... ^ Davis, Timothy; Geist, Robert; Matzko, Sarah; Westall, James (March 2004). "τ'εχνη: A First Step". Technical Symposium on Computer Science Education: 125–129. ISBN 1-58113-798-2. In 1999, Clemson University established a (graduate) degree program that bridges the arts and the sciences... All students in the program are required to complete graduate level work in both the arts and computer science ^ Hoganson, Ken (December 2001). "Alternative curriculum models for integrating computer science and information systems analysis, recommendations, pitfalls, opportunities, accreditations, and trends". Journal of Computing Sciences in Colleges. 17 (2): 313–325. ISSN 1937-4771. The field of information systems as a separate discipline is relatively new and is undergoing continuous change as technology evolves and the field matures ^ Khazanchi, Deepak; Bjorn Erik Munkvold (Summer 2000). "Is information system a science? an inquiry into the nature of the information systems discipline". ACM SIGMIS Database. 31 (3): 24–42. doi:10.1145/381823.381834. ISSN 0095-0033. S2CID 52847480. From this we have concluded that IS is a science, i.e., a scientific discipline in contrast to purportedly non-scientific fields ^ Denning, Peter (June 2007). "An interview with Peter Denning on the great principles of computing". Ubiquity. 2007 (June): 1. People from other fields are saying they have discovered information processes in their deepest structures and that collaboration with computing is essential to them. ^ "Computer science is the study of information". New Jersey Institute of Technology: Gutenberg Information Technologies. Archived from the original on May 29, 2009. ^ Computer Science Department, College of Saint Benedict. "Computer science is the study of computation". Saint John's University. Archived from the original on 2007-02-03. Retrieved 2013-06-24. ^ "Computer Science is the study of all aspects of computer systems, from the theoretical foundations to the very practical aspects of managing large software projects". Massey University. Archived from the original on 2006-06-19. ^ Kelly, Sue; Gibson, Nicola; Holland, Christopher; Light, Ben (July 1999). "Focus Issue on Legacy Information Systems and Business Process Engineering: a Business Perspective of Legacy Information Systems". Communications of the AIS. 2 (7): 1–27. ^ Pearson Custom Publishing & West Chester University (2009). Custom Program for Computer Information Systems (CSC 110). Pearson Custom Publishing. p. 694. ^ Polack, Jennifer (December 2009). "Planning a CIS Education Within a CS Framework". Journal of Computing Sciences in Colleges. 25 (2): 100–106. ISSN 1937-4771. ^ Hayes, Helen; Onkar Sharma (February 2003). "A decade of experience with a common first year program for computer science, information systems and information technology majors". Journal of Computing Sciences in Colleges. 18 (3): 217–227. ISSN 1937-4771. In 1988, a degree program in Computer Information Systems (CIS) was launched with the objective of providing an option for students who were less inclined to become programmers and were more interested in learning to design, develop, and implement Information Systems, and solve business problems using the systems approach ^ CSTA Committee; Allen Tucker; et al. (2006). A Model Curriculum for K-12 Computer Science (Final Report). Association for Computing Machinery, Inc. pp. 0, 2. ^ Freeman, Peter; Hart, David (August 2004). "A Science of Design for Software-Intensive Systems". Communications of the ACM. 47 (8): 19–21. doi:10.1145/1012037.1012054. ISSN 0001-0782. S2CID 14331332. Computer science and engineering needs an intellectually rigorous, analytical, teachable design process to ensure development of systems we all can live with ... Though the other components' connections to the software and their role in the overall design of the system are critical, the core consideration for a software-intensive system is the software itself, and other approaches to systematizing design have yet to solve the "software problem"—which won't be solved until software design is understood scientifically. ^ Daintith, John, ed. (2009), "IT", A Dictionary of Physics, Oxford University Press, ISBN 9780199233991, retrieved 1 August 2012 (subscription required) ^ "Free on-line dictionary of computing (FOLDOC)". Archived from the original on 15 April 2013. Retrieved 9 Feb 2013. ^ Chandler, Daniel; Munday, Rod, "Information technology", A Dictionary of Media and Communication (first ed.), Oxford University Press, retrieved 1 August 2012 (subscription required) ^ On the later more broad application of the term IT, Keary comments- "In its original application 'information technology' was appropriate to describe the convergence of technologies with application in the broad field of data storage, retrieval, processing, and dissemination. This useful conceptual term has since been converted to what purports to be concrete use, but without the reinforcement of definition...the term IT lacks substance when applied to the name of any function, discipline, or position." Anthony Ralston (2000). Encyclopedia of computer science. Nature Pub. Group. ISBN 978-1-56159-248-7. Retrieved 12 May 2013. . ^ Kershner, Ryan J.; Bozano, Luisa D.; Micheel, Christine M.; Hung, Albert M.; Fornof, Ann R.; Cha, Jennifer N.; Rettner, Charles T.; Bersani, Marco; Frommer, Jane; Rothemund, Paul W. K.; Wallraff, Gregory M. (2009). "Placement and orientation of individual DNA shapes on lithographically patterned surfaces". Nature Nanotechnology. 4 (9): 557–561. Bibcode:2009NatNa...4..557K. CiteSeerX 10.1.1.212.9767. doi:10.1038/nnano.2009.220. PMID 19734926. supplementary information: DNA origami on photolithography ^ Harlander, M. (2011). "Trapped-ion antennae for the transmission of quantum information". Nature. 471 (7337): 200–203. arXiv:1011.3639. Bibcode:2011Natur.471..200H. doi:10.1038/nature09800. PMID 21346764. S2CID 4388493. Lay summary. ^ Monz, Thomas (2011). "14-Qubit Entanglement: Creation and Coherence". Physical Review Letters. 106 (13): 130506. arXiv:1009.6126. Bibcode:2011PhRvL.106m0506M. doi:10.1103/PhysRevLett.106.130506. PMID 21517367. S2CID 8155660. ^ "World record: Calculations with 14 quantum bits". ^ Saw-Wai Hla et al., Nature Nanotechnology March 31, 2010 "World's smallest superconductor discovered" Archived 2010-05-28 at the Wayback Machine. Four pairs of certain molecules have been shown to form a nanoscale superconductor, at a dimension of 0.87 nanometers. Access date 2010-03-31 ^ Tom Simonite, "Computing at the speed of light", Technology Review Wed., August 4, 2010 MIT ^ Sebastian Anthony (Dec 10,2012), "IBM creates first commercially viable silicon nanophotonic chip", accessdate=2012-12-10 ^ Open Compute: Does the data center have an open future? accessdate=2013-08-11 ^ "Putting electronics in a spin". 2007-08-08. Retrieved 2020-11-23. ^ "Merging spintronics with photonics" (PDF). Archived from the original (PDF) on 2019-09-06. Retrieved 2019-09-06. ^ Lalieu, M. L. M.; Lavrijsen, R.; Koopmans, B. (2019-01-10). "Integrating all-optical switching with spintronics". Nature Communications. 10 (1): 110. arXiv:1809.02347. Bibcode:2019NatCo..10..110L. doi:10.1038/s41467-018-08062-4. ISSN 2041-1723. PMC 6328538. PMID 30631067. ^ Farmakidis, Nikolaos; Youngblood, Nathan; Li, Xuan; Tan, James; Swett, Jacob L.; Cheng, Zengguang; Wright, C. David; Pernice, Wolfram H. P.; Bhaskaran, Harish (2019-11-01). "Plasmonic nanogap enhanced phase-change devices with dual electrical-optical functionality". Science Advances. 5 (11): eaaw2687. arXiv:1811.07651. Bibcode:2019SciA....5.2687F. doi:10.1126/sciadv.aaw2687. ISSN 2375-2548. PMC 6884412. PMID 31819898. ^ "The NIST Definition of Cloud Computing" (PDF). U.S. Department of Commerce. September 2011. ^ Berl, A.; Gelenbe, E.; Girolamo, M. Di; Giuliani, G.; Meer, H. De; Dang, M. Q.; Pentikousis, K. (September 2010). "Energy-Efficient Cloud Computing". The Computer Journal. 53 (7): 1045–1051. doi:10.1093/comjnl/bxp080. ISSN 1460-2067. ^ Kaufman, L. M. (July 2009). "Data Security in the World of Cloud Computing". IEEE Security Privacy. 7 (4): 61–64. doi:10.1109/MSP.2009.87. ISSN 1558-4046. S2CID 16233643. ^ Steane, Andrew (1998-02-01). "Quantum computing". Reports on Progress in Physics. 61 (2): 117–173. arXiv:quant-ph/9708022. Bibcode:1998RPPh...61..117S. doi:10.1088/0034-4885/61/2/002. ISSN 0034-4885. S2CID 119473861. ^ Horodecki, Ryszard; Horodecki, Paweł; Horodecki, Michał; Horodecki, Karol (2009-06-17). "Quantum entanglement". Reviews of Modern Physics. 81 (2): 865–942. arXiv:quant-ph/0702225. Bibcode:2009RvMP...81..865H. doi:10.1103/RevModPhys.81.865. S2CID 59577352. External links[edit] Computingat Wikipedia's sister projects Definitions from Wiktionary Media from Wikimedia Commons Textbooks from Wikibooks Resources from Wikiversity FOLDOC: the Free On-Line Dictionary Of Computing v t e Computer science Note: This template roughly follows the 2012 ACM Computing Classification System. Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip (SoCs) Energy consumption (Green computing) Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Real-time computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domain-specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Control variable Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Open-source model Theory of computation Model of computation Formal language Automata theory Computability theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Human–computer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi-task learning Cross-validation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing E-commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Outline WikiProject Commons Retrieved from "https://en.wikipedia.org/w/index.php?title=Computing&oldid=991119429" Categories: Computing Hidden categories: Pages containing links to subscription-only content Webarchive template wayback links Articles with short description Short description is different from Wikidata Wikipedia articles needing clarification from June 2019 All articles with unsourced statements Articles with unsourced statements from March 2018 Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikinews Languages العربية বাংলা Bân-lâm-gú Basa Banyumasan Български Bosanski Català Čeština Cymraeg Dansk Deutsch Español Esperanto فارسی Gaeilge Gàidhlig Galego 한국어 Հայերեն हिन्दी Bahasa Indonesia Italiano עברית Jawa ქართული Kiswahili Latina Latviešu Magyar മലയാളം Bahasa Melayu Mirandés Nāhuatl Nederlands नेपाली 日本語 Novial Oʻzbekcha/ўзбекча Polski Русский Scots සිංහල Slovenčina Српски / srpski Srpskohrvatski / српскохрватски Tagalog தமிழ் ไทย Тоҷикӣ Українська اردو Tiếng Việt 吴语 ייִדיש Yorùbá 粵語 中文 Edit links This page was last edited on 28 November 2020, at 10:35 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement