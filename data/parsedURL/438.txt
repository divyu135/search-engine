NetBSD - Wikipedia NetBSD From Wikipedia, the free encyclopedia Jump to navigation Jump to search Open-source Unix-like operating system NetBSD NetBSD 7.0 running Xfce, Firefox and LibreOffice Developer The NetBSD Foundation OS family Unix-like Working state Current Source model Open source Initial release 19 April 1993; 27 years ago (1993-04-19) Latest release 9.1 / 18 October 2020; 48 days ago (2020-10-18)[1] Latest preview 9.99.x [2] / Daily builds Repository cvsweb.netbsd.org Package manager pkgsrc Platforms Alpha, ARM, PA-RISC, 68k, MIPS, PowerPC, SH3, SPARC, RISC-V, VAX, x86 Kernel type Monolithic with dynamically loadable modules, rump kernel Userland BSD Default user interface Unix shell License 2-clause BSD license Official website netbsd.org NetBSD is a free and open-source Unix-like operating system based on the Berkeley Software Distribution (BSD). It was the first open-source BSD descendant officially released after 386BSD was forked.[3][4] It continues to be actively developed and is available for many platforms, including servers, desktops, handheld devices,[4] and embedded systems.[5][6] The NetBSD project focuses on code clarity, careful design, and portability across many computer architectures. Its source code is publicly available and permissively licensed.[7][8] Contents 1 History 2 Features 2.1 Portability 2.2 Portable build framework 2.3 The pkgsrc packages collection 2.4 Symmetric multiprocessing 2.5 Security 2.6 Virtualization 2.7 Storage 2.8 Compatibility with other operating systems 2.9 Kernel scripting 2.10 Sensors 3 Uses 4 Licensing 5 Releases 6 Logo 7 The NetBSD Foundation 8 Hosting 9 See also 10 References 11 External links History[edit] NetBSD was originally derived from the 4.3BSD-Reno release of the Berkeley Software Distribution from the Computer Systems Research Group of the University of California, Berkeley, via their Net/2 source code release and the 386BSD project.[4] The NetBSD project began as a result of frustration within the 386BSD developer community with the pace and direction of the operating system's development.[9] The four founders of the NetBSD project, Chris Demetriou, Theo de Raadt, Adam Glass, and Charles Hannum, felt that a more open development model would benefit the project: one centered on portable, clean, correct code. They aimed to produce a unified, multi-platform, production-quality, BSD-based operating system. The name "NetBSD" was chosen based on the importance and growth of networks such as the Internet at that time, and the distributed, collaborative nature of its development.[10] The NetBSD source code repository was established on 21 March 1993 and the first official release, NetBSD 0.8, was made on 19 April 1993.[11] This was derived from 386BSD 0.1 plus the version 0.2.2 unofficial patchkit, with several programs from the Net/2 release missing from 386BSD re-integrated, and various other improvements.[11][12] The first multi-platform release, NetBSD 1.0, was made in October 1994, and being updated with 4.4BSD-Lite sources, it was free of all legally encumbered 4.3BSD Net/2 code.[13] Also in 1994, for disputed reasons, one of the founders, Theo de Raadt, was removed from the project. He later founded a new project, OpenBSD, from a forked version of NetBSD 1.0 near the end of 1995.[14]In 1998, NetBSD 1.3 introduced the pkgsrc packages collection.[15] Until 2004, NetBSD 1.x releases were made at roughly annual intervals, with minor "patch" releases in between. From release 2.0 onwards, NetBSD uses semantic versioning, and each major NetBSD release corresponds to an incremented major version number, i.e. the major releases following 2.0 are 3.0, 4.0 and so on. The previous minor releases are now divided into two categories: x.y "stable" maintenance releases and x.y.z releases containing only security and critical fixes.[16] Features[edit] NetBSD/amd64 startup in console mode NetBSD/amd64 console login and welcome message Portability[edit] See also: busdma As the project's motto ("Of course it runs NetBSD" ) suggests, NetBSD has been ported to a large number of 32- and 64-bit architectures. These range from VAX minicomputers to Pocket PC PDAs. As of 2019, NetBSD supports 59 hardware platforms (across 16 different instruction sets). The kernel and userland for these platforms are all built from a central unified source-code tree managed by CVS. Currently, unlike other kernels such as Î¼Clinux, the NetBSD kernel requires the presence of an MMU in any given target architecture. NetBSD's portability is aided by the use of hardware abstraction layer interfaces for low-level hardware access such as bus input/output or DMA. Using this portability layer, device drivers can be split into "machine-independent" and "machine-dependent" components. This makes a single driver easily usable on several platforms by hiding hardware access details, and reduces the work to port it to a new system.[17] This permits a particular device driver for a PCI card to work without modifications, whether it is in a PCI slot on an IA-32, Alpha, PowerPC, SPARC, or other architecture with a PCI bus. Also, a single driver for a specific device can operate via several different buses, like ISA, PCI, or PC Card. In comparison, Linux device driver code often must be reworked for each new architecture. As a consequence, in porting efforts by NetBSD and Linux developers, NetBSD has taken much less time to port to new hardware.[18][better source needed] This platform independence aids the development of embedded systems, particularly since NetBSD 1.6, when the entire toolchain of compilers, assemblers, linkers, and other tools fully support cross-compiling. In 2005, as a demonstration of NetBSD's portability and suitability for embedded applications, Technologic Systems, a vendor of embedded systems hardware, designed and demonstrated a NetBSD-powered kitchen toaster.[19] Commercial ports to embedded platforms, including the AMD Geode LX800, Freescale PowerQUICC processors, Marvell Orion, AMCC 405 family of PowerPC processors, Intel XScale IOP and IXP series, were available from and supported by Wasabi Systems. Portable build framework[edit] The NetBSD cross-compiling framework (also known as "build.sh"[20]) lets a developer build a complete NetBSD system for an architecture from a more powerful system of different architecture (cross-compiling), including on a different operating system (the framework supports most POSIX-compliant systems). Several embedded systems using NetBSD have required no additional software development other than toolchain and target rehost.[18] The pkgsrc packages collection[edit] Main article: pkgsrc NetBSD features pkgsrc (short for "package source"), a framework for building and managing third-party application software packages. The pkgsrc collection consists of more than 20,000 packages as of October 2019[update].[21] Building and installing packages such as KDE, GNOME, the Apache HTTP Server or Perl is performed through the use of a system of makefiles. This can automatically fetch the source code, unpack, patch, configure, build and install the package such that it can be removed again later. An alternative to compiling from source is to use a precompiled binary package. In either case, any prerequisites/dependencies will be installed automatically by the package system, without need for manual intervention. pkgsrc supports not only NetBSD, but also several other BSD variants like FreeBSD and Darwin/Mac OS X, and other Unix-like operating systems such as Linux, Solaris, IRIX, and others, as well as Interix. pkgsrc was previously adopted as the official package management system for DragonFly BSD.[22] Symmetric multiprocessing[edit] NetBSD has supported SMP since the NetBSD 2.0 release in 2004,[23] which was initially implemented using the giant lock approach. During the development cycle of the NetBSD 5 release, major work was done to improve SMP support; most of the kernel subsystems were modified to use the fine-grained locking approach. New synchronization primitives were implemented and scheduler activations was replaced with a 1:1 threading model in February 2007.[24] A scalable M2 thread scheduler was implemented, though the old 4.4BSD scheduler still remains the default but was modified to scale with SMP. Threaded software interrupts were implemented to improve synchronization. The virtual memory system, memory allocator and trap handling were made MP safe. The file system framework, including the VFS and major file systems were modified to be MP safe. Since April 2008 the only subsystems running with a giant lock are the network protocols and most device drivers. Security[edit] NetBSD provides various features in the security area.[25] The Kernel Authorization framework[26] (or Kauth) is a subsystem managing all authorization requests inside the kernel, and used as system-wide security policy. It allows external modules to plug-in the authorization process. NetBSD also incorporates exploit mitigation features, ASLR,[27] KASLR, restricted mprotect() and Segvguard from the PaX project, and GCC Stack Smashing Protection (SSP, or also known as ProPolice, enabled by default since NetBSD 6.0) compiler extensions. Verified Executables (or Veriexec) is an in-kernel file integrity subsystem in NetBSD. It allows the user to set digital fingerprints (hashes) of files, and take a number of different actions if files do not match their fingerprints. For example, one can allow Perl to run only scripts that match their fingerprints.[28] The cryptographic device driver (CGD) allows using disks or partitions (including CDs and DVDs) for encrypted storage.[29] Virtualization[edit] The Xen virtual-machine monitor has been supported in NetBSD since release 3.0. The use of Xen requires a special pre-kernel boot environment that loads a Xen-specialized kernel as the "host OS" (Dom0). Any number of "guest OSes" (DomU) virtualized computers, with or without specific Xen/DomU support, can be run in parallel with the appropriate hardware resources. The need for a third-party boot manager, such as GRUB, was eliminated with NetBSD 5's Xen-compatible boot manager.[30] NetBSD 6 as a Dom0 has been benchmarked comparably to Linux, with better performance than Linux in some tests.[31] As of NetBSD 9.0, accelerated virtualization is provided through the native hypervisor NVMM (NetBSD Virtual Machine Monitor).[32]It provides a virtualization API, libnvmm, that can be leveraged by emulators such as QEMU. A unique property of NVMM is that the kernel never accesses guest VM memory, only creating it.[33]HAXM provides an alternative solution for acceleration in QEMU for Intel CPUs only, similar to Linux's KVM.[34] NetBSD 5.0 introduced the rump kernel, an architecture to run drivers in user-space by emulating kernel-space calls. This anykernel architecture allows adding support of NetBSD drivers to other kernel architectures, ranging from exokernels to monolithic kernels.[35] Storage[edit] NetBSD includes many enterprise features like iSCSI, a journaling filesystem, logical volume management and the ZFS filesystem. The bio(4) interface for vendor-agnostic RAID volume management through bioctl has been available in NetBSD since 2007.[36] The WAPBL journaling filesystem, an extension of the BSD FFS filesystem, was contributed by Wasabi Systems in 2008.[37] The NetBSD Logical Volume Manager is based on a BSD reimplementation of a device-mapper driver and a port of the Linux Logical Volume Manager tools. It was mostly written during the Google Summer of Code 2008.[38] The ZFS filesystem developed by Sun Microsystems was imported into the NetBSD base system in 2009. Currently,[when?] the NetBSD ZFS port is based on ZFS version 22. The CHFS Flash memory filesystem was imported into NetBSD in November 2011. CHFS is a file system developed at the Department of Software Engineering, University of Szeged, Hungary, and is the first open source Flash-specific file system written for NetBSD. Compatibility with other operating systems[edit] At the source code level, NetBSD is very nearly entirely compliant with POSIX.1 (IEEE 1003.1-1990) standard and mostly compliant with POSIX.2 (IEEE 1003.2-1992). NetBSD provides system call-level binary compatibility on the appropriate processor architectures with its previous releases, but also with several other UNIX-derived and UNIX-like operating systems, including Linux, and other 4.3BSD derivatives like SunOS 4. This allows NetBSD users to run many applications that are only distributed in binary form for other operating systems, usually with no significant loss of performance.[39] A variety of "foreign" disk filesystem formats are also supported in NetBSD, including ZFS, FAT, NTFS, Linux ext2fs, Apple HFS and OS X UFS, RISC OS FileCore/ADFS, AmigaOS Fast File System, IRIX EFS, Version 7 Unix File System, and many more through PUFFS. Kernel scripting[edit] Kernel-space scripting with the Lua programming language is a relatively new feature in NetBSD; it is available as of NetBSD 7.0.[40] The Lua language (i.e., its interpreter and standard libraries) was initially ported to the NetBSD kernel during Google Summer of Code 2010 and has undergone several improvements since then. There are two main differences between user and kernel space Lua: kernel Lua does not support floating-point numbers; as such, only Lua integers are available. It also does not have full support to user space libraries that rely on the operating system (e.g., io and os). Sensors[edit] Main article: envsys NetBSD has featured a native hardware monitoring framework since 1999/2000, and in 2003, it served as the inspiration behind the OpenBSD's sysctl hw.sensors framework when some NetBSD drivers were being ported to OpenBSD.[41] As of March 2019[update], NetBSD had close to 85 device drivers exporting data through the API of the envsys framework. Since the 2007 revision, serialisation of data between the kernel and userland is done through XML property lists with the help of NetBSD's proplib(3). Uses[edit] NetBSD was used in NASA's SAMS-II Project of measuring the microgravity environment on the International Space Station, and for investigations of TCP for use in satellite networks. NetBSD's clean design, high performance, scalability, and support for many architectures has led to its use in embedded devices and servers, especially in networking applications.[42] A commercial real-time operating system, QNX, uses a network stack based on NetBSD code,[43][44] and provides various drivers ported from NetBSD.[42] Dell Force10 uses NetBSD as the underlying operating system that powers FTOS (the Force10 Operating System), which is used in high scalability switch/routers.[45] Force10 also made a donation to the NetBSD Foundation in 2007 to help further research and the open development community.[46] Wasabi Systems provides a commercial Wasabi Certified BSD product based on NetBSD with proprietary enterprise features and extensions, which are focused on embedded, server and storage applications.[47] NetBSD was used in NASA's SAMS-II Project of measuring the microgravity environment on the International Space Station,[48][49] and for investigations of TCP for use in satellite networks.[50][51] In 2004, SUNET used NetBSD to set the Internet2 Land Speed Record. NetBSD was chosen "due to the scalability of the TCP code".[52] NetBSD is also used in Apple's AirPort Extreme and Time Capsule products,[53][54] instead of their own OS X (most of whose Unix-level userland code is derived from FreeBSD code but some is derived from NetBSD code[55][56]). The operating system of the T-Mobile Sidekick LX 2009 smartphone is based on NetBSD.[57] The Minix operating system uses a mostly NetBSD userland as well as its pkgsrc packages infrastructure since version 3.2.[58] Parts of macOS were originally taken from NetBSD, such as the userspace command line tools. This was because they were already ported to PowerPC systems. Licensing[edit] All of the NetBSD kernel and most of the core userland source code is released under the terms of the BSD License (two, three, and four-clause variants). This essentially allows everyone to use, modify, redistribute or sell it as they wish, as long as they do not remove the copyright notice and license text (the four-clause variants also include terms relating to publicity material). Thus, the development of products based on NetBSD is possible without having to make modifications to the source code public. In contrast, the GPL, which does not apply to NetBSD, stipulates that changes to source code of a product must be released to the product recipient when products derived from those changes are released. On 20 June 2008, the NetBSD Foundation announced a transition to the two clause BSD license, citing concerns with UCB support of clause 3 and industry applicability of clause 4.[59] NetBSD also includes the GNU development tools and other packages, which are covered by the GPL and other open source licenses. As with other BSD projects, NetBSD separates those in its base source tree to make it easier to remove code that is under more restrictive licenses.[60] As for packages, the installed software licenses may be controlled by modifying the list of allowed licenses in the pkgsrc configuration file (mk.conf). Releases[edit] The following table lists major NetBSD releases and their notable features in reverse chronological order. Minor and patch releases are not included. Legend: Old version, not maintained Older version, still maintained Current stable version Latest preview version Future release Major releases Release date Notable features and changes Current stable version: 9.0[61][62] 14 February 2020 Support for AArch64 (64-bit ARMv8-A) machines, including SBSA/SBBR, big.LITTLE, compatibility with 32-bit binaries, and up to 256 CPUs Enhanced support for ARMv7-A, including UEFI bootloader, big.LITTLE, kernel mode setting for Allwinner and other SoCs, and device tree support Updated DRM to Linux 4.4, support for Intel graphics up to and including Kaby Lake Hardware accelerated virtualization for QEMU via NVMM (NetBSD Virtual Machine Monitor) Improvements in the NPF firewall, updated ZFS, new and reworked drivers Support for various new kernel and userland code sanitizers, and kernel ASLR. Audited network stack. Removal of various old and unmaintained components, such as ISDN support Older version, yet still maintained: 8.0[63] 17 July 2018 Audio system reworked with an in-kernel mixer USB stack reworked with support for USB 3 host controllers and data rates PaX ASLR enabled by default on supported architectures Hardened memory layout with fewer writable pages and PaX MPROTECT (W^X) enforced by default on supported architectures Support for reproducible builds, and userland built with position-independent code by default Meltdown and Spectre vulnerability mitigations for Intel and AMD CPUs Added a UEFI bootloader, NVMe driver, nouveau driver for Nvidia GPUs, support for more ARM boards including the Raspberry Pi 3 Old version, no longer maintained: 7.0[64][65] 8 October 2015 Add accelerated support for modern Intel and Radeon devices on x86 through a port of the Linux 3.15 DRM/KMS code. Lua kernel scripting blacklistd, a daemon that integrates with packet filters to dynamically protect network daemons from network break-in attempts. NPF improvements such as JIT compilation and dynamic rules. Multiprocessor ARM support Support for many new ARM boards: Raspberry Pi 2 ODROID-C1 BeagleBoard, BeagleBone, BeagleBone Black Allwinner A20, A31: (Cubieboard2, Cubietruck, Banana Pi, etc.) Freescale i.MX50, i.MX51: (Kobo Touch, Netwalker) Xilinx Zynq: (Parallella, ZedBoard) Add support for Lemote Yeeloong Notebooks. Old version, no longer maintained: 6.0[66] 17 October 2012 Support for thread-local storage, Logical Volume Manager functionality Rewritten disk quota subsystem New subsystems to handle flash devices and NAND controllers An experimental CHFS file system designed for flash devices Support for the Multiprotocol Label Switching protocol. Introduce NetBSD Packet Filter (NPF) â a new packet filter, designed with multi-core systems in mind, which can do TCP/IP traffic filtering, stateful inspection, and Network Address Translation SMP support for Xen domU kernels, initial suspend/resume support for Xen domU, PCI pass-through support for Xen3, and addition of the balloon driver Major rework of MIPS port adding support for Symmetric multiprocessing and 64-bit (O32, N32, N64 ABIs are supported) processors, DSP v2 ASE extension, various NetLogic/RMI processor models, Loongson family processors, and new SoC boards Improved SMP on PowerPC port and added support for Book E Freescale MPC85xx (e500 core) processors ARM has gained support for Cortex-A8 processors, various new SoCs, and initial support for Raspberry Pi To address the year 2038 problem, time t was extended to 64-bit type on all NetBSD ports. apropos rewritten to implement full text search for man pages Access to driver-internal limit values added to sysmon_envsys(9),[66] freshly utilised by new drivers like aibs(4)[67] Old version, no longer maintained: 5.0[68][69][70] 29 April 2009 Rewritten threading subsystem based on a 1:1 model and rewritten scheduler implementation.[68] Support for kernel preemption, POSIX real-time scheduling extensions, processor-sets, and dynamic CPU sets for thread affinity Added jemalloc memory allocator. A metadata journaling for FFS, known as WAPBL (Write Ahead Physical Block Logging) Rewritten Loadable kernel module framework, which will replace old LKMs. Use of X.Org rather than XFree86 by default for i386 and amd64 ports, and introduction of drm(4)/DRI for 3D hardware acceleration. Preliminary support for using Clang instead of GCC as the system compiler.[71] Added support for ASLR in the kernel and dynamic linker. Rewritten envsys framework (envsys2); addition of 8 new Hardware Monitoring sensor drivers; new IÂ²C attachment of the lm(4) driver; additional hardware support in several sensor drivers[68] Old version, no longer maintained: 4.0 19 December 2007 Added support for slab allocator, bioctl,[36] iSCSI target, CARP, tmpfs, Explicit Congestion Notification, Xen 3, the Kernel Authorization framework, Veriexec and other security extensions, property list exchange between kernel/userland through ioctl with proplib(3), and a Bluetooth protocol suite.[72] Old version, no longer maintained: 3.0 23 December 2005 Support for Xen 2.0 Support for filesystems > 2 terabytes added. Pluggable Authentication Modules added. OpenBSD Packet Filter was integrated as an alternative to IPFilter. UFS directory hash support.[73] Old version, no longer maintained: 2.0 9 December 2004 Addition of native POSIX threads and SMP support on i386 and other platforms. AMD64 architecture added. Support for UFS2 and SMBFS, addition of kqueue.[74] Old version, no longer maintained: 1.6 14 September 2002 Unified Buffer Cache (UBC) was introduced, which unifies the filesystem and virtual memory caches of file data. Zero-copy support for TCP and UDP transmit path. Ten new platforms supported. New implementation of cross-building (build.sh) infrastructure. Added support for multibyte LC_CTYPE locales.[75][76] Old version, no longer maintained: 1.5 6 December 2000 IPv6 and IPsec were added to the network stack. OpenSSL and OpenSSH imported. New implementation of rc.d system start-up mechanism. Start of migration to ELF-format binaries. A ktruss utility for kernel tracing was added. Six new platforms supported, including sparc64. Added FFS soft updates and support for NTFS.[77] Old version, no longer maintained: 1.4 12 May 1999 UVM, a rewritten virtual memory subsystem, was introduced. Added RAIDframe, a software RAID implementation, and imported IPFilter. Completion of the integration of all remaining 4.4BSD Lite-2 kernel improvements. Ports to Power Macintosh and NeXTcube/station systems added. Added full USB support.[78] Old version, no longer maintained: 1.3 9 March 1998 XFree86 source tree was made a supported part of the distribution. Support for ISA Plug and Play, PCMCIA, ATAPI and APM added. ext2fs and FAT32 filesystems added. The pkgsrc packages collection system was introduced.[79] Old version, no longer maintained: 1.2 4 October 1996 Support for NFSv3, SCSI scanner and medium changer devices added. NTP phase-locked loop added in kernel. Ports for ARM and Sharp X68k systems added.[80] Old version, no longer maintained: 1.1 26 November 1995 Ports for DEC Alpha, Atari TT/Falcon030 and MVME68k systems added. Binary emulation facility added. Generic audio subsystem introduced.[81] Old version, no longer maintained: 1.0 26 October 1994 The first multi-platform release, supporting the PC, HP 9000 Series 300, Amiga, 68k Macintosh, Sun-4c series and the PC532. The legally encumbered Net/2-derived source code was replaced with equivalent code from 4.4BSD-lite, in accordance with the USL v BSDi lawsuit settlement. Addition of shared libraries and Kerberos 5.[82] Old version, no longer maintained: 0.9 20 August 1993 Contained many enhancements and bug fixes. This was still a PC-platform-only release, although by this time, work was underway to add support for other architectures. Support for loadable kernel modules (LKM).[83] Old version, no longer maintained: 0.8 20 April 1993 The first official release, derived from 386BSD 0.1 plus the version 0.2.2 unofficial patchkit, with several programs from the Net/2 release missing from 386BSD re-integrated, and various other improvements.[84] Logo[edit] The NetBSD "flag" logo, designed by Grant Bissett, was introduced in 2004 and is an abstraction of their older logo,[85] designed by Shawn Mueller in 1994. Mueller's version was based on the famous World War II photograph Raising the Flag on Iwo Jima.[86] The NetBSD Foundation[edit] The NetBSD Foundation is the legal entity that owns the intellectual property and trademarks associated with NetBSD,[87] and on 22 January 2004, became a 501(c)3 tax-exempt non-profit organization. The members of the foundation are developers who have CVS commit access.[88] The NetBSD Foundation has a Board of Directors, elected by the voting of members for two years.[89] Hosting[edit] Hosting for the project is provided primarily by Columbia University, and Western Washington University, fronted by a CDN provided by Fastly. Mirrors for the project are spread around the world and provided by volunteers and supporters of the project. See also[edit] Free and open-source software portal Comparison of operating systems Comparison of operating system kernels References[edit] ^ "Announcing NetBSD 9.1". ^ Daily Release Engineering Builds ^ "Twenty Years of Berkeley Unix: From AT&T-Owned to Freely Redistributable". Open Sources: Voices from the Open Source Revolution. O'Reilly Media. January 1999. ISBN 1-56592-582-3. ^ a b c "About NetBSD". Retrieved 7 June 2014. NetBSD is a fork of the 386/BSD branch of the Berkeley Software Distribution (or BSD) operating system. ^ "Get to know NetBSD: An operating system that travels". ibm.org. ^ Ganssle, Jack G; Noergaard, Tammy; Eady, Fred; Edwards, Lewin; Katz, David J (14 September 2007). Embedded Hardware. ISBN 978-0-7506-8584-9. pp. 291â292. ^ "NetBSD features list". The NetBSD Foundation, Inc. Retrieved 7 June 2014. NetBSD focuses on clean design and well architected solutions. ^ Love, Robert (2005). "Chapter 19". Linux Kernel development (2. ed.). Sams Publishing. ISBN 0-672-32720-1. Retrieved 7 June 2014. Some examples of highly portable operating systems are Minix, NetBSD, and many research systems. ^ "The History of the NetBSD Project". www.netbsd.org. The NetBSD Foundation. Retrieved 29 November 2009. ^ "INSTALLATION NOTES for NetBSD 0.8". NetBSD. 20 April 1993. Archived from the original on 17 January 2020. Retrieved 20 October 2020. ^ a b Chris G. Demetriou (19 April 1993). "So you say you want an interim release of 386bsd?". Newsgroup: comp.os.386bsd.announce. Usenet: 1qvpc9$1e8@agate.berkeley.edu. Retrieved 12 May 2010. ^ "Information about NetBSD 0.8". ^ "Information about NetBSD 1.0". ^ De Raadt, Theo (29 March 2009). "Archive of the mail conversation leading to Theo de Raadt's departure". Retrieved 15 January 2010. ^ "Platforms supported by pkgsrc". www.netbsd.org. The NetBSD Foundation. Retrieved 10 January 2010. ^ "NetBSD release glossary and graphs". The NetBSD Project. 13 January 2010. Retrieved 15 January 2010. ^ "Portability and supported hardware platforms". www.netbsd.org. The NetBSD Foundation. Retrieved 29 November 2009. ^ a b "BSD or Linux: Which Unix is better for embedded applications?" (PDF). Wasabi Systems Inc. 2003. Archived from the original (PDF) on 30 December 2006. Retrieved 11 June 2007. ^ "Technologic Systems Designs NetBSD Controlled Toaster" (Press release). August 2005. Retrieved 11 June 2007. ^ The NetBSD Foundation (10 January 2010). "Chapter 31. Crosscompiling NetBSD with build.sh". The NetBSD Guide. Retrieved 15 January 2010. ^ Klausner, Thomas (3 October 2019). "The pkgsrc-2019Q3 Release". tech-pkg (Mailing list). ^ Dillon, Matthew (31 August 2005). "PKGSRC will be officially supported as of the next release". DragonFly users (Mailing list). Archived from the original on 20 January 2008. Retrieved 15 January 2010. ^ "NetBSD 2.0 release notes". ^ "Significant changes from NetBSD 4.0 to 5.0". 23 December 2009. Retrieved 15 January 2010. ^ "NetBSD security(8) manual page". ^ "kauth(9)". NetBSD Manual Pages. 10 August 2009. Retrieved 15 January 2010. ^ "NetBSD paxctl(8) manual page". ^ "Chapter 19. NetBSD Veriexec subsystem". ^ "Chapter 14. The cryptographic device driver (CGD)". ^ "boot(8)". NetBSD Manual Pages. 4 September 2009. Retrieved 15 January 2010. ^ Matthew, Cherry G.; MonnÃ©, Roger Pau (August 2012). "(Free and Net) BSD Xen Roadmap". Retrieved 29 December 2012. ^ "NetBSD Virtual Machine Monitor". m00nbsd.net. ^ "Re: What is the difference between nvmm-netbsd and kvm-linux?". marc.info. ^ "The hardware-assisted virtualization challenge". NetBSD Blog. ^ "The Anykernel and Rump Kernels". ^ a b "bioctl(8) â RAID management interface". BSD Cross Reference. NetBSD. Lay summary. ^ Burge, Simon (2 March 2008). "Patches for journalling support". tech-kern@NetBSD.org (Mailing list). Retrieved 15 January 2010. ^ Hamsik, Adam (29 August 2008). "HEADS UP NetBSD lvm support". tech-kern@NetBSD.org (Mailing list). Retrieved 15 January 2010. ^ "NetBSD Binary Emulation". 13 January 2010. Retrieved 15 January 2010. ^ "Scriptable Operating Systems with Lua" (PDF). ^ Constantine A. Murenin (21 May 2010). "6. Evolution of the Framework; 7.1. NetBSD envsys / sysmon". OpenBSD Hardware Sensors â Environmental Monitoring and Fan Control (MMath thesis). University of Waterloo: UWSpace. hdl:10012/5234. Document ID: ab71498b6b1a60ï¬817b29d56997a418. ^ a b "Foundry27: Project Networking â Driver wiki page". QNX Software Systems. Retrieved 27 December 2011. ^ "Third Party Open Source License Terms Guide". QNX Software Systems. Retrieved 27 December 2011. ^ "Core Networking 6.4: Neutrino's Next Gen Networking Stack and Foundry27" (PDF). QNX Software Systems. (registration required) ^ "Force10 Networks uses NetBSD to build software scalability into operating system". Dell (Press release). 13 February 2007. Archived from the original on 15 November 2011. Retrieved 27 December 2011. ^ "Force10 Networks introduces unified operating system across product portfolio to lower total cost of owning and operating networks". Dell (Press release). 28 January 2008. Archived from the original on 15 November 2011. Retrieved 27 December 2011. ^ "Wasabi Systems". Retrieved 16 February 2018. ^ Duc, Hiep Nguyen (21 June 2016). "NetBSD Introduction by Siju Oommen George - BSD MAG". BSD MAG. Retrieved 9 November 2017. ^ Rivett, Mary (12 April 1997). "Re: NetBSD/i386 and single board computers". port-i386 (Mailing list). ^ Duc, Hiep Nguyen (21 June 2016). "NetBSD Introduction by Siju Oommen George - BSD MAG". BSD MAG. Retrieved 9 November 2017. ^ Kruse, Hans; Allman, Mark; Griner, Jim & Tran, Diepchi (5 March 1998). "HTTP Page Transfer Rates over Geo-Stationary Satellite Links" (PDF). Archived from the original (PDF) on 20 July 2009. Retrieved 27 December 2011. ^ Josefsson, BÃ¶rje (14 April 2004). "SUNET Internet2 Land Speed Record: 69.073 Pbmps". SUNET. Retrieved 27 December 2011. ^ "How to jailbreak an Apple Time Capsule?". superuser.com. Retrieved 27 December 2009. ^ Fleishman, Glenn (16 February 2007). "AirPort Extreme: Apple Breaks 90 Mbps". wifinetnews.com. Retrieved 28 December 2009. ^ "Myths about FreeBSD". Retrieved 7 June 2014. The two operating systems do share a lot of code, for example most userland utilities and the C library on OS X are derived from FreeBSD versions. ^ "Overview of OS X". Apple Inc. 11 June 2012. ^ "Sidekick LX 2009 / Blade Will Run NetBSD". www.hiptop3.com. 30 January 2009. Archived from the original on 17 March 2009. Retrieved 5 February 2009. ^ "Minix Gets a NetBSD Code Infusion". pcworld.com. 29 February 2012. Retrieved 4 July 2012. ^ "NetBSD Licensing and Redistribution" (Press release). June 2008. Retrieved 20 June 2008. ^ "Distro description". Licensing Section: Free Penguin. Retrieved 7 June 2014. NetBSD separates those in its base source tree, in order to make removal of code under more restrictive licenses easier. ^ [1] ^ https://blog.netbsd.org/tnf/entry/netbsd_9_0_available ^ "Announcing NetBSD 8.0". NetBSD. 17 July 2017. ^ "Announcing NetBSD 7.0". ^ DistroWatch Weekly, Issue 638, 30 November 2015 ^ a b "Announcing NetBSD 6.0". ^ "aibs â ASUSTeK AI Booster ACPI ATK0110 voltage, temperature and fan sensor". ^ a b c "Announcing NetBSD 5.0". ^ Distributions [LWN.net] ^ DistroWatch Weekly, Issue 386, 3 January 2011 ^ Sonnenberger, JÃ¶rg (19 January 2012). "Status of NetBSD and LLVM". Archived from the original on 9 April 2014. Retrieved 26 March 2015. ^ "Announcing NetBSD 4.0". ^ "Announcing NetBSD 3.0". ^ "Announcing NetBSD 2.0". ^ "Announcing NetBSD 1.6". ^ OS Review: NetBSD 1.6.2 on SPARC64, OSNews ^ "Announcing NetBSD 1.5". ^ "NetBSD 1.4 Release Announcement". ^ "Information about NetBSD 1.3". ^ "Information about NetBSD 1.2". ^ "Information about NetBSD 1.1". ^ "NetBSD 1.0 release announcement". ^ "NetBSD 0.9 available for anon-ftp..." ^ "Installation notes for NetBSD 0.8". ^ Old NetBSD logo ^ "NetBSD logo design competition". ^ The NetBSD Foundation, Inc. ^ "NetBSD Developers". 7 January 2010. Retrieved 15 January 2010. ^ "Bylaws of The NetBSD Foundation, Constitution of The NetBSD Foundation". p. Section 5.4. Retrieved 7 June 2014. Each Director shall serve for two years Negus, Christopher; Caen, Francois (April 2008). BSD UNIX Toolbox: 1000+ Commands for FreeBSD, OpenBSD and NetBSD (First ed.). Wiley. p. 309. ISBN 978-0-470-38725-2. Lavigne, Dru (24 May 2004). BSD Hacks (First ed.). O'Reilly Media. p. 448. ISBN 0-596-00679-9. External links[edit] Wikimedia Commons has media related to NetBSD. Official website v t e The NetBSD Project Operating system NetBSD Related projects pkgsrc ATF netpgp pcc tnftp tcsh Notable subsystems Veriexec busdma DTrace envsys LKM Rump kernel File systems and storage bioctl CHFS disklabel fdisk LVM2 PUFFS tmpfs UFS WAPBL ZFS Firewalls and networking 802.11 drivers ALTQ Bluetooth BPF IPFilter NPF PF CARP pfsync v t e Berkeley Software Distribution People Bob Fabry Keith Bostic Marshall Kirk McKusick Michael J. Karels Bill Joy Samuel Leffler Jordan Hubbard Theo de Raadt Poul-Henning Kamp Matthew Dillon Ozalp Babaoglu Lynne and William Jolitz Derivatives Active FreeBSD OpenBSD NetBSD DragonFly BSD Junos OS Darwin PS3/PS4/PS Vita operating system Full list Discontinued 386BSD BSD/OS SunOS TrueOS Ultrix Companies Sleepycat Software Walnut Creek CDROM Berkeley Software Design iXsystems Other topics Comparison History Licensing BSD Daemon Computer Systems Research Group Category Commons v t e Unix and Unix-like operating systems and compatibility layers Operating systems BSD 386BSD FreeBSD NetBSD OpenBSD DragonFly BSD NeXTSTEP Darwin macOS iOS watchOS tvOS audioOS iPadOS SunOS Ultrix Coherent GNU Linux Android Chrome OS LynxOS MINIX QNX BlackBerry 10 Research Unix System V A/UX AIX HP-UX illumos IRIX OpenServer Solaris Tru64 UNIX UnixWare Xenix more... Compatibility layers Eunice Interix MachTen Microsoft POSIX subsystem MKS Toolkit P.I.P.S. UNIX System Services UserLAnd Technologies Windows Services for UNIX Windows Subsystem for Linux Italics indicate discontinued branches. Category Commons Book Retrieved from "https://en.wikipedia.org/w/index.php?title=NetBSD&oldid=992419934" Categories: NetBSD ARM operating systems Lightweight Unix-like systems PowerPC operating systems Software using the BSD license 1993 software Hidden categories: Articles with short description Short description matches Wikidata Use dmy dates from August 2012 All articles lacking reliable references Articles lacking reliable references from May 2014 Articles containing potentially dated statements from 2019 All articles containing potentially dated statements All articles with vague or ambiguous time Vague or ambiguous time from August 2018 Articles containing potentially dated statements from March 2019 Commons category link from Wikidata Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons Languages Ø§ÙØ¹Ø±Ø¨ÙØ© ÐÐµÐ»Ð°ÑÑÑÐºÐ°Ñ ÐÐµÐ»Ð°ÑÑÑÐºÐ°Ñ (ÑÐ°ÑÐ°ÑÐºÐµÐ²ÑÑÐ°)â ÐÑÐ»Ð³Ð°ÑÑÐºÐ¸ Bosanski CatalÃ  ÄeÅ¡tina Dansk Deutsch Eesti ÎÎ»Î»Î·Î½Î¹ÎºÎ¬ EspaÃ±ol Euskara ÙØ§Ø±Ø³Û FranÃ§ais Galego íêµ­ì´ Hrvatski Bahasa Indonesia Italiano ×¢××¨××ª á¥áá áá£áá LietuviÅ³ Magyar Bahasa Melayu Nederlands æ¥æ¬èª Norsk bokmÃ¥l Polski PortuguÃªs RomÃ¢nÄ Ð ÑÑÑÐºÐ¸Ð¹ Simple English SlovenÄina SlovenÅ¡Äina Ð¡ÑÐ¿ÑÐºÐ¸ / srpski Srpskohrvatski / ÑÑÐ¿ÑÐºÐ¾ÑÑÐ²Ð°ÑÑÐºÐ¸ Suomi Svenska à¹à¸à¸¢ TÃ¼rkÃ§e Ð£ÐºÑÐ°ÑÐ½ÑÑÐºÐ° ä¸­æ Edit links This page was last edited on 5 December 2020, at 04:43 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. WikipediaÂ® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement