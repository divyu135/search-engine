EBCDIC - Wikipedia EBCDIC From Wikipedia, the free encyclopedia Jump to navigation Jump to search An eight-bit character encoding system invented by IBM This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. Find sources: "EBCDIC" – news · newspapers · books · scholar · JSTOR (January 2019) (Learn how and when to remove this template message) EBCDIC encoding family Classification 8-bit basic Latin encodings (non‑ASCII) Preceded by BCD v t e Extended Binary Coded Decimal Interchange Code[1] (EBCDIC;[1] /ˈɛbsɪdɪk/) is an eight-bit character encoding used mainly on IBM mainframe and IBM midrange computer operating systems. It descended from the code used with punched cards and the corresponding six-bit binary-coded decimal code used with most of IBM's computer peripherals of the late 1950s and early 1960s.[2] It is supported by various non-IBM platforms, such as Fujitsu-Siemens' BS2000/OSD, OS-IV, MSP, and MSP-EX, the SDS Sigma series, Unisys VS/9, Burroughs MCP and ICL VME. Contents 1 History 2 Compatibility with ASCII 3 Code page layout 4 Definitions of non-ASCII EBCDIC controls 5 Code pages with Latin-1 character sets 6 Criticism and humor 7 See also 8 References 9 External links History[edit] Punched card with the Hollerith encoding of the 1964 EBCDIC character set. Contrast at top enhanced to show the printed characters. EBCDIC was devised in 1963 and 1964 by IBM and was announced with the release of the IBM System/360 line of mainframe computers. It is an eight-bit character encoding, developed separately from the seven-bit ASCII encoding scheme. It was created to extend the existing Binary-Coded Decimal (BCD) Interchange Code, or BCDIC, which itself was devised as an efficient means of encoding the two zone and number punches on punched cards into six bits. The distinct encoding of 's' and 'S' (using position 2 instead of 1) was maintained from punched cards where it was desirable not to have hole punches too close to each other to ensure the integrity of the physical card.[citation needed] While IBM was a chief proponent of the ASCII standardization committee,[3] the company did not have time to prepare ASCII peripherals (such as card punch machines) to ship with its System/360 computers, so the company settled on EBCDIC.[2] The System/360 became wildly successful, together with clones such as RCA Spectra 70, ICL System 4, and Fujitsu FACOM, thus so did EBCDIC. All IBM mainframe and midrange peripherals and operating systems use EBCDIC as their inherent encoding[4] (with toleration for ASCII, for example, ISPF in z/OS can browse and edit both EBCDIC and ASCII encoded files). Software and many hardware peripherals can translate to and from encodings, and modern mainframes (such as IBM Z) include processor instructions, at the hardware level, to accelerate translation between character sets. There is an EBCDIC-oriented Unicode Transformation Format called UTF-EBCDIC proposed by the Unicode consortium, designed to allow easy updating of EBCDIC software to handle Unicode, but not intended to be used in open interchange environments. Even on systems with extensive EBCDIC support, it has not been popular. For example, z/OS supports Unicode (preferring UTF-16 specifically), but z/OS only has limited support for UTF-EBCDIC. IBM AIX running on the RS/6000 and its descendants including the IBM Power Systems, Linux running on IBM Z, and operating systems running on the IBM PC and its descendants use ASCII, as did AIX/370 and AIX/390 running on System/370 and System/390 mainframes. Compatibility with ASCII[edit] This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. Find sources: "EBCDIC" – news · newspapers · books · scholar · JSTOR (January 2019) (Learn how and when to remove this template message) There were numerous difficulties to writing software that would work in both ASCII and EBCDIC. The gaps between letters made simple code that worked in ASCII fail on EBCDIC. For example for (c = 'A'; c <= 'Z'; ++c) putchar(c); would print the alphabet from A to Z if ASCII is used, but print 41 characters (including a number of unassigned ones) in EBCDIC. Fixing this required complicating the code with function calls which was greatly resisted by programmers. Sorting EBCDIC put lowercase letters before uppercase letters and letters before numbers, exactly the opposite of ASCII. Programming languages and file formats and network protocols designed for ASCII quickly made use of available punctuation marks (such as the curly braces { and }) that did not exist in EBCDIC, making translation to EBCDIC systems difficult. Conversely EBCDIC had a few characters such as ¢ (US cent) that got used on IBM systems and could not be translated to ASCII. The most common newline convention used with EBCDIC is to use a NEL (NEXT LINE) code between lines. Converters to other encodings often replace NEL with LF or CR/LF, even if there is a NEL in the target encoding. This causes the LF and NEL to translate to the same character and be unable to be distinguished. If seven-bit ASCII was used, there was an "unused" high bit in 8-bit bytes, and many pieces of software stored other information there. Software would also pack the seven bits and discard the eighth, such as packing five seven-bit ASCII characters in a 36-bit word.[5] On the PDP-11 bytes with the high bit set were treated as negative numbers, behavior that was copied to C, causing unexpected problems if the high bit was set. These all made it difficult to switch from ASCII to the 8-bit EBCDIC (it also made it difficult to switch to (8-bit) extended ASCII encodings). Code page layout[edit] Further information: EBCDIC code pages There are hundreds of EBCDIC code pages based on the original EBCDIC character encoding; there are a variety of EBCDIC code pages intended for use in different parts of the world, including code pages for non-Latin scripts such as Chinese, Japanese (e.g., EBCDIC 930, JEF, and KEIS), Korean, and Greek (EBCDIC 875). There is also a huge number of variations with the letters swapped around for no discernible reason. The table below shows the "invariant subset"[6] of EBCDIC, which are characters that should have the same assignments on all EBCDIC code pages. It also shows (in gray) missing ASCII and EBCDIC punctuation, located where they are in code page 037 (one of the code page variants of EBCDIC). Unassigned codes are typically filled with international or region-specific characters in the various EBCDIC code page variants, but the characters in gray are often moved around or swapped as well. In each cell the first row is an abbreviation for a control code or the character itself; and the second row is the Unicode code (blank for controls that don't exist in Unicode). EBCDIC _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 _A _B _C _D _E _F 0_ NUL 0000 SOH 0001 STX 0002 ETX 0003 SEL HT 0009 RNL DEL 007F GE SPS RPT VT 000B FF 000C CR 000D SO 000E SI 000F 1_ DLE 0010 DC1 0011 DC2 0012 DC3 0013 res/enp NL 0085 BS 0008 POC CAN 0018 EM 0019 UBS CU1 IFS 001C IGS 001D IRS 001E ius/ itb 001F 2_ DS SOS FS WUS byp/inp LF 000A ETB 0017 ESC 001B SA SFE sm/sw CSP MFA ENQ 0005 ACK 0006 BEL 0007 3_ SYN 0016 IR PP TRN NBS EOT 0004 SBS IT RFF CU3 DC4 0014 NAK 0015 SUB 001A 4_ SP 0020 ¢ 00A2 . 002E < 003C ( 0028 + 002B | 007C 5_ & 0026 ! 0021 $ 0024 * 002A ) 0029 ; 003B ¬ 00AC 6_ - 002D / 002F ¦ 00A6 , 002C % 0025 _ 005F > 003E ? 003F 7_ ` 0060 : 003A # 0023 @ 0040 ' 0027 = 003D " 0022 8_ a 0061 b 0062 c 0063 d 0064 e 0065 f 0066 g 0067 h 0068 i 0069 ± 00B1 9_ j 006A k 006B l 006C m 006D n 006E o 006F p 0070 q 0071 r 0072 A_ ~ 007E s 0073 t 0074 u 0075 v 0076 w 0077 x 0078 y 0079 z 007A B_ ^ 005E [ 005B ] 005D C_ { 007B A 0041 B 0042 C 0043 D 0044 E 0045 F 0046 G 0047 H 0048 I 0049 D_ } 007D J 004A K 004B L 004C M 004D N 004E O 004F P 0050 Q 0051 R 0052 E_ \ 005C S 0053 T 0054 U 0055 V 0056 W 0057 X 0058 Y 0059 Z 005A F_ 0 0030 1 0031 2 0032 3 0033 4 0034 5 0035 6 0036 7 0037 8 0038 9 0039 EO Letter  Number  Punctuation  Symbol  Other  Undefined Definitions of non-ASCII EBCDIC controls[edit] Following are the definitions of EBCDIC control characters which either don't map onto the ASCII control characters, or have additional uses. When mapped to Unicode, these are mostly mapped to C1 control character codepoints in a manner specified by IBM's Character Data Representation Architecture (CDRA).[7][8] Although the default mapping of New Line (NL) corresponds to the ISO/IEC 6429 Next Line (NEL) character (the behaviour of which is also specified, but not required, in Unicode Annex 14),[9] most of these C1-mapped controls match neither those in the ISO/IEC 6429 C1 set, nor those in other registered C1 control sets such as ISO 6630.[10] Although this effectively makes the non-ASCII EBCDIC controls a unique C1 control set, they are not among the C1 control sets registered in the ISO-IR registry,[11] meaning that they do not have an assigned control set designation sequence (as specified by ISO/IEC 2022, and optionally permitted in ISO/IEC 10646 (Unicode)).[12] Besides U+0085 (Next Line), the Unicode Standard does not prescribe an interpretation of C1 control characters, leaving their interpretation to higher level protocols (it suggests, but does not require, their ISO/IEC 6429 interpretations in the absence of use for other purposes),[13] so this mapping is permissible in, but not specified by, Unicode. Mnemonic EBCDIC CDRA pairing[7][8] Name Description[14] SEL 04 009C Select Device control character taking a single-byte parameter. RNL 06 0086 Required New Line Line-break resetting Indent Tab mode GE 08 0097 Graphic Escape Non-locking shift that changes the interpretation of the following character (see e.g. Code page 310). Compare ISO/IEC 6429's SS2 (008E). SPS 09 008D Superscript Begin superscript or undo subscript. Compare ISO/IEC 6429's PLU (008C). RPT 0A 008E Repeat Switch to an operation mode repeating a print buffer RES/ENP 14 009D Restore, Enable Presentation Resume output (after BYP/INP) NL 15 0085 (000A) New Line Line break. Default mapping (0085) matches ISO/IEC 6429's NEL. Mappings sometimes swapped with Line Feed (EBCDIC 0x25) in accordance with UNIX line breaking convention.[7] POC 17 0087 Program Operator Communication Followed by two one-byte operators that identify the specific function, for example a light or function key. Contrast with ISO/IEC 6429's CSI (009B), OSC (009D) and APC (009F). UBS 1A 0092 Unit Backspace A fractional backspace. CU1 1B 008F Customer Use One Not used by IBM; for customer use. IUS/ITB 1F 001F Interchange Unit Separator, Intermediate Transmission Block Either used as an information separator to terminate a block called a "unit" (as in ASCII; see also IR), or used as a transmission control code to delimit the end of an intermediate block. DS 20 0080 Digit Select Used by S/360 CPU edit (ED) instruction SOS 21 0081 Start of Significance Used by S/360 CPU edit (ED) instruction. (Note: different from ISO/IEC 6429's SOS.) FS 22 0082 Field Separator Used by S/360 CPU edit (ED) instruction. (Note: (Interchange) File Separator, as abbreviated FS in ASCII, is at 0x1C and abbreviated IFS.)[14] WUS 23 0083 Word Underscore Underscores the immediately preceding word. Contrast with ISO/IEC 6429's SGR. BYP/INP 24 0084 Bypass, Inhibit Presentation De-activates output, i.e. ignores all graphical characters and control characters besides transmission control codes and RES/ENP, until the next RES/ENP. SA 28 0088 Set Attribute Marks the beginning of a fixed-length device specific control sequence. Deprecated in favour of CSP. SFE 29 0089 Start Field Extended Marks the beginning of a variable-length device specific control sequence. Deprecated in favour of CSP. SM/SW 2A 008A Set Mode, Switch Device specific control that sets a mode of operation, such as a buffer switch. CSP 2B 008B Control Sequence Prefix Marks the beginning of a variable-length device specific control sequence. Followed by a class byte specifying a category of control function, a count byte giving the sequence length (including count and type bytes, but not the class byte or initial CSP), a type byte identifying a control function within that category, and zero or more parameter bytes. Contrast with ISO/IEC 6429's DCS (0090) and CSI (009B). MFA 2C 008C Modify Field Attribute Marks the beginning of a variable-length device specific control sequence. Deprecated in favour of CSP. 30 0090 (reserved) Reserved for future use by IBM 31 0091 (reserved) Reserved for future use by IBM IR 33 0093 Index Return Either move to start of next line (see also NL), or terminate an information unit (see also IUS/ITB). PP 34 0094 Presentation Position Followed by two one-byte parameters (firstly function, secondly number of either column or line) to set the current position. Contrast with ISO/IEC 6429's CUP and HVP. TRN 35 0095 Transparent Followed by one byte parameter that indicates the number of bytes of transparent data that follow. NBS 36 0096 Numeric Backspace Move backwards the width of one digit. SBS 38 0098 Subscript Begin subscript or undo superscript. Compare ISO/IEC 6429's PLD (008B). IT 39 0099 Indent Tab Indents the current and all following lines, until RNL or RFF is encountered. RFF 3A 009A Required Form Feed Page-break resetting Indent Tab mode. CU3 3B 009B Customer Use Two Not used by IBM; for customer use. 3E 009E (reserved) Reserved for future use by IBM EO FF 009F Eight Ones All ones character used as filler Code pages with Latin-1 character sets[edit] The following code pages have the full Latin-1 character set (ISO/IEC 8859-1). The first column gives the original code page number. The second column gives the number of the code page updated with the euro sign (€) replacing the universal currency sign (¤) (or in the case of EBCDIC 924, with the set changed to match ISO 8859-15) CCSID Euro update Countries 037 1140 Australia, Brazil, Canada, New Zealand, Portugal, South Africa, USA 273 1141 Austria, Germany 277 1142 Denmark, Norway 278 1143 Finland, Sweden 280 1144 Italy 284 1145 Latin America, Spain 285 1146 Ireland, United Kingdom 297 1147 France 500 1148 International 871 1149 Iceland 1047 924 Open Systems (MVS C compiler) Criticism and humor[edit] Open-source software advocate and software developer Eric S. Raymond writes in his Jargon File that EBCDIC was loathed by hackers, by which he meant[15] members of a subculture of enthusiastic programmers. The Jargon File 4.4.7 gives the following definition:[16] EBCDIC: /eb´s@·dik/, /eb´see`dik/, /eb´k@·dik/, n.[abbreviation, Extended Binary Coded Decimal Interchange Code] An alleged character set used on IBM dinosaurs. It exists in at least six mutually incompatible versions, all featuring such delights as non-contiguous letter sequences and the absence of several ASCII punctuation characters fairly important for modern computer languages (exactly which characters are absent varies according to which version of EBCDIC you're looking at). IBM adapted EBCDIC from punched card code in the early 1960s and promulgated it as a customer-control tactic (see connector conspiracy), spurning the already established ASCII standard. Today, IBM claims to be an open-systems company, but IBM's own description of the EBCDIC variants and how to convert between them is still internally classified top-secret, burn-before-reading. Hackers blanch at the very name of EBCDIC and consider it a manifestation of purest evil. — The Jargon file 4.4.7 EBCDIC design was also the source of many jokes. One such joke[citation needed] went: Professor: "So the American government went to IBM to come up with an encryption standard, and they came up with—" Student: "EBCDIC!" References to the EBCDIC character set are made in the classic Infocom adventure game series Zork. In the "Machine Room" in Zork II, EBCDIC is used to imply an incomprehensible language: This is a large room full of assorted heavy machinery, whirring noisily. The room smells of burned resistors. Along one wall are three buttons which are, respectively, round, triangular, and square. Naturally, above these buttons are instructions written in EBCDIC... See also[edit] UTF-EBCDIC References[edit] ^ a b Mackenzie, Charles E. (1980). Coded Character Sets, History and Development. The Systems Programming Series (1 ed.). Addison-Wesley Publishing Company, Inc. ISBN 0-201-14460-3. LCCN 77-90165. ISBN 978-0-201-14460-4. Retrieved 2016-05-22. [1] ^ a b Bemer, Bob. "EBCDIC and the P-Bit (The Biggest Computer Goof Ever) - Computer History Vignettes". Archived from the original on 2018-05-13. Retrieved 2013-07-02. ...but their printers and punches were not ready to handle ASCII, and IBM just HAD to announce. ^ "X3.4-1963". 1963. p. 4. Archived from the original on 2016-08-12. (NB. IBM had four staff members on the final 21-member ASA X3.2 sub-committee.) ^ IBMnt (2008). "IBM confirms the use of EBCDIC in their mainframes as a default practice". Archived from the original on 2013-01-03. Retrieved 2008-06-16. ^ PDP-10 Reference Handbook, Book 2: Assembling the Source Program (PDF). Digital Equipment Corporation. p. 221. ^ IBM Knowledge Center Invariant character set ^ a b c Umamaheswaran, V.S. (1999-11-08). "3.3 Step 2: Byte Conversion". UTF-EBCDIC. Unicode Consortium. Unicode Technical Report #16. The 64 control characters...the ASCII DELETE character (U+007F)...are mapped respecting EBCDIC conventions, as defined in IBM Character Data Representation Architecture, CDRA, with one exception -- the pairing of EBCDIC Line Feed and New Line control characters are swapped from their CDRA default pairings to ISO/IEC 6429 Line Feed (U+000A) and Next Line (U+0085) control characters ^ a b Steele, Shawn (1996-04-24). cp037_IBMUSCanada to Unicode table. Microsoft/Unicode Consortium. ^ Heninger, Andy (2019-02-15). "NL: Next Line (A) (Non-tailorable)". Unicode Line Breaking Algorithm. Revision 43. Unicode Consortium. Unicode Standard Annex #14. ^ ISO/TC 46 (1986-02-01). Additional Control Functions for Bibliographic Use according to International Standard ISO 6630 (PDF). ITSCJ/IPSJ. ISO-IR-124. ^ ISO/IEC International Register of Coded Character Sets To Be Used With Escape Sequences (PDF), ITSCJ/IPSJ, ISO-IR ^ ISO/IEC JTC 1/SC 2 (2017). "12.4: Identification of control function set". Information technology — Universal Coded Character Set (UCS) (5th ed.). ISO. pp. 19–20. ISO/IEC 10646. For other C0 or C1 sets, the final octet F shall be obtained from the International Register of Coded Character Sets....If such an escape sequence appears within a code unit sequence conforming to this International Standard, it shall be padded in accordance with Clause 11. ^ Unicode Consortium (2019). "23.1: Control Codes" (PDF). The Unicode Standard (12.0.0 ed.). pp. 868–870. ISBN 978-1-936213-22-1. ^ a b "Appendix G-1. EBCDIC control character definitions". Character Data Representation Architecture. IBM Corporation. Archived from the original on 2018-09-11. ^ Raymond, Eric S. (1997). "The New Hacker's Dictionary". p. 310. ^ "EBCDIC". Jargon File. Archived from the original on 2018-05-13. Retrieved 2018-05-13. External links[edit] Character Data Representation Architecture (CDRA) from IBM at the Wayback Machine (archived 2018-05-13). Contains IBM's official information on code pages and character sets. Code page 37 Code page 1047 F.0 Appendix F. Code Pages from AS/400 International Application Development V4R2 ICU Converter Explorer Contains more information about EBCDIC derived from IBM's CDRA, including DBCS EBCDIC (Double Byte Character Set EBCDIC) ICU Charset Mapping Tables Contains computer readable Unicode mapping tables for EBCDIC and many other character sets EBCDIC character list, including decimal and hex values, symbolic name, and character/function EBCDIC-code pages with Latin-1-charset (JavaScript) All EBCDIC code pages and 3270 graphics escape codes at the Wayback Machine (archived August 27, 2016) v t e Character encodings Early telecommunications Telegraph code Needle Morse Non-Latin Wabun/Kana Chinese Cyrillic Korean Baudot and Murray FIELDATA ASCII ISO/IEC 646 BCDIC 353 355 357 358 359 360 EBCDIC Teletex and Videotex/Teletext ISO/IEC 6937 / ITU T.51 ITU T.61 ITU T.101 World System Teletext background sets ISO/IEC 8859 Approved -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -13 -14 -15 -16 Abandoned -12 Adaptations ISO-IR-182 ISO-IR-200 ISO-IR-201 Proposed but not approved ISO-IR-111 ISO-IR-197 French/Dutch/Turkish draft Bibliographic use MARC-8 ANSEL CCCII/EACC ISO 5426 / 5426-2 / 5427 / 5428 / 6438 / 6861 / 6862 / 10585 / 10586 / 10754 / 11822 National standards ArmSCII BraSCII CNS 11643 ELOT 927 GOST 10859 GB 2312 GB 12052 GB 18030 HKSCS I.S. 434 ISCII JIS X 0201 JIS X 0208 JIS X 0212 JIS X 0213 KOI-7 KPS 9566 KS X 1001 KS X 1002 LST 1284 LST 1564 LST 1590-1 LST 1590-2 LST 1590-3 LST 1590-4 PASCII RUSCII SI 960 TIS-620 TSCII VISCII VSCII YUSCII ISO/IEC 2022 7-bit CN CN-EXT JP JP-EXT JP-1 JP-2 JP-3 KR ISO/IEC 4873 ISO/IEC 8859 ISO/IEC 10367 Extended Unix Code / EUC CN KR JP TW Mac OS code pages ("scripts") Armenian Arabic Barents Cyrillic Celtic CentEuro ChineseSimp / EUC-CN ChineseTrad / Big5 Croatian Cyrillic Devanagari Dingbats Farsi (Persian) Gaelic Georgian Greek Gujarati Gurmukhi Hebrew Iceland Inuit Japanese / ShiftJIS Keyboard Korean / EUC-KR Latin (Kermit) Maltese/Esperanto Ogham / I.S. 434 Roman Romanian Sámi Symbol Thai / TIS-620 Turkish Turkic Cyrillic Ukrainian VT100 DOS code pages 100 111 112 113 151 152 161 162 163 164 165 166 210 220 301 437 449 489 620 667 668 707 708 709 710 711 714 715 720 721 737 768 770 771 772 773 774 775 776 777 778 790 850 851 852 853 854 855/872 856 857 858 859 860 861 862 863 864 865 866/808 867 868 869 874/1161/1162 876 877 878 881 882 883 884 885 891 895 896 897 898 899 900 903 904 906 907 909 910 911 926 927 928 929 932 934 936 938 941 942 943 944 946 947 948 949 950/1370 951 966 991 1034 1039 1040 1041 1042 1043 1044 1046 1086 1088 1092 1093 1098 1108 1109 1114 1115 1116 1117 1118 1119 1125/848 1126 1127 1131/849 1139 1167 1168 1300 1351 1361 1362 1363 1372 1373 1374 1375 1380 1381 1385 1386 1391 1392 1393 1394 3012 3021 3843 3844 3845 3846 3847 3848 30000 30001 30002 30003 30004 30005 30006 30007 30008 30009 30010 30011 30012 30013 30014 30015 30016 30017 30018 30019 30020 30021 30022 30023 30024 30025 30026 30027 30028 30029 30030 30031 30032 30033 30034 30039 30040 58152 58210 58335 59234 59829 60258 60853 61282 62306 CS Indic CSX Indic CSX+ Indic CWI-2 Iran System Kamenický KOI8 Mazovia MIK IBM AIX code pages 367 371 806 813 819 895 896 912 913 914 915 916 919 920 921/901 922/902 923 952 953 954 955 956 957 958 959 960 961 963 964 965 970 971 1004 1006 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1029 1036 1089 1111 1124 1129/1163 1133 1350 1382 1383 IBM code pages for other vendors' encodings Apple Macintosh 1275 1280 1281 1282 1283 1284 1285 1286 Adobe 1038 1276 1277 DEC 1020 1021 1023 1090 1100 1101 1102 1103 1104 1105 1106 1107 1287 1288 HP 1050 1051 1052 1053 1054 1055 1056 1057 1058 Windows code pages CER-GS 874/1162 (TIS-620) 932/943 (Shift JIS) 936/1386 (GBK) 950/1370 (Big5) 949/1363 (EUC-KR) 1169 1174 Extended Latin-8 1200 (UTF-16LE) 1201 (UTF-16BE) 1250 1251 1252 1253 1254 1255 1256 1257 1258 1261 1270 54936 (GB18030) Armenian Cyrillic + Finnish Cyrillic + French Cyrillic + German Polytonic Greek 65001 (UTF-8) Microsoft code pages for other vendors' encodings Apple Macintosh 10000 10001 10002 10003 10004 10005 10006 10007 10008 10010 10017 10021 10029 10079 10081 10082 EBCDIC code pages 37 390 391 392 393 394 395 435 829 834 835 837 839 881 882 883 884 885 886 887 888 889 890 931 933/1364 935/1388 937/1371 939/1399 1001 1003 1005 1007 1024 1027 1028 1030 1031 1032 1033 1037 1068 1071 1073 1074 1075 1076 1077 1078 1080 1082 1083 1085 1087 1091 1136 1150 1151 1152 1278 1279 1303 1364 1376 1377 DEC terminals (VTx) Multinational (MCS) National Replacement (NRCS) French Canadian Swiss Spanish United Kingdom Dutch Finnish French Norwegian and Danish Swedish Norwegian and Danish (alternative) 8-bit Greek 8-bit Turkish 7-bit Hebrew 8-bit Hebrew Special Graphics Technical (TCS) Platform specific Acorn Adobe Standard Adobe Latin 1 Amstrad CPC Apple I Apple II Apple III ATASCII Atari ST BICS Casio calculators CDC Compucolor II CP/M+ DEC RADIX 50 DEC MCS/NRCS DG International ELWRO-Junior FIELDATA GEM GEOS GSM 03.38 HP Roman Extension HP Roman-8 HP Roman-9 HP FOCAL HP RPL IBM SQUOZE LICS LMBCS Mattel Aquarius Minitel MSX NEC APC NeXT OricSCII PCW PETSCII Sega SC-3000 Sharp calculators Sharp MZ Sinclair QL Teletext TI calculators TRS-80 Ventura International Ventura Symbol WISCII XCCS ZX80 ZX81 ZX Spectrum Unicode / ISO/IEC 10646 UTF-1 UTF-7 UTF-8 UTF-16 (UTF-16LE/UTF-16BE) / UCS-2 UTF-32 (UTF-32LE/UTF-32BE) / UCS-4 UTF-EBCDIC GB 18030 BOCU-1 CESU-8 SCSU TeX typesetting system Cork IL1 IL2 IL3 L7X LGR LY1 OML OMS OMX OT1 OT2 OT3 OT4 PL0 QX T2A T2B T2C T2D T3 T4 T5 TS1 TS3 U X2 Miscellaneous code pages ABICOMP APL 293 310 (Graphic Escape) 351 (GDDM) 907 (OEM) ISO-IR-68 ARIB STD-B24 HZ IEC-P27-1 INIS 7-bit 8-bit Cyrillic ISO-IR-169 ISO 2033 Johab Mojikyō SEASCII Stanford/ITS TACE16 TRON UTF-5 UTF-6 WTF-8 Control and nonprinting character sets Morse prosigns C0 and C1 control codes ISO/IEC 6429 / ANSI X3.64 / ECMA-48 / JIS X 0211 ISO 6630 DIN 31626 JIS X 0207 ITU T.101 C0 C1 EBCDIC control codes Unicode control, format and separator characters Whitespace characters Related topics Code page Windows code page CCSID Character encodings in HTML Charset detection Han unification Hardware Mojibake Character sets Retrieved from "https://en.wikipedia.org/w/index.php?title=EBCDIC&oldid=986421457" Categories: IBM mainframe operating systems EBCDIC code pages Hidden categories: Articles with short description Short description is different from Wikidata Articles needing additional references from January 2019 All articles needing additional references Use dmy dates from May 2019 All articles with unsourced statements Articles with unsourced statements from July 2020 Articles with unsourced statements from May 2018 Webarchive template wayback links Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages العربية বাংলা Bosanski Català Čeština Dansk Deutsch Español Esperanto Français Gaeilge 한국어 Hrvatski Bahasa Indonesia Italiano עברית Magyar Nederlands 日本語 Norsk bokmål Polski Português Русский Simple English Slovenčina Suomi Svenska ไทย Türkçe Українська اردو 中文 Edit links This page was last edited on 31 October 2020, at 19:16 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement