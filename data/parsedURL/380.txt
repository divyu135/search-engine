Logo (programming language) - Wikipedia Logo (programming language) From Wikipedia, the free encyclopedia Jump to navigation Jump to search Computer programming language Logo Example Logo output Paradigms Multi-paradigm: functional, educational, procedural, reflective Family Lisp Designed by Wally Feurzeig, Seymour Papert, Cynthia Solomon Developer Bolt, Beranek and Newman First appeared 1967; 53 years ago (1967) Typing discipline dynamic Major implementations UCBLogo, many others Dialects StarLogo, NetLogo and AppleLogo Influenced by Lisp Influenced AgentSheets, NetLogo, Smalltalk, Etoys, Scratch, Microsoft Small Basic, KTurtle, REBOL, Boxer Logo is an educational programming language, designed in 1967 by Wally Feurzeig, Seymour Papert, and Cynthia Solomon.[1] Logo is not an acronym: the name was coined by Feurzeig while he was at Bolt, Beranek and Newman,[2] and derives from the Greek logos, meaning word or thought. A general-purpose language, Logo is widely known for its use of turtle graphics, in which commands for movement and drawing produced line or vector graphics, either on screen or with a small robot termed a turtle. The language was conceived to teach concepts of programming related to Lisp and only later to enable what Papert called "body-syntonic reasoning", where students could understand, predict, and reason about the turtle's motion by imagining what they would do if they were the turtle. There are substantial differences among the many dialects of Logo, and the situation is confused by the regular appearance of turtle graphics programs that are named Logo. Logo is a multi-paradigm adaptation and dialect of Lisp, a functional programming language.[3] There is no standard Logo, but UCBLogo has the best facilities for handling lists, files, I/O, and recursion in scripts, and can be used to teach all computer science concepts, as UC Berkeley lecturer Brian Harvey did in his Computer Science Logo Style trilogy.[4] Logo is usually an interpreted language, although compiled Logo dialects (such as Lhogho and Liogo) have been developed. Logo is not case-sensitive but retains the case used for formatting purposes. Contents 1 History 2 Turtle and graphics 3 Implementations 3.1 ObjectLOGO 3.2 Lego Logo 3.3 Acornsoft Logo 4 Influence 5 See also 6 References 7 Further reading 8 External links History[edit] Logo was created in 1967 at Bolt, Beranek and Newman (BBN), a Cambridge, Massachusetts research firm, by Wally Feurzeig, Cynthia Solomon, and Seymour Papert.[5] Its intellectual roots are in artificial intelligence, mathematical logic and developmental psychology. The first four years of Logo research, development and teaching work was done at BBN. The first implementation of Logo, called Ghost, was written in LISP on a PDP-1. The goal was to create a mathematical land where children could play with words and sentences.[6] Modeled on LISP, the design goals of Logo included accessible power[clarification needed] and informative error messages. The use of virtual Turtles allowed for immediate visual feedback and debugging of graphic programming. The first working Logo turtle robot was created in 1969. A display turtle preceded the physical floor turtle. Modern Logo has not changed very much from the basic concepts predating the first turtle. The first turtle was a tethered floor roamer, not radio-controlled or wireless. At BBN Paul Wexelblat developed a turtle named Irving that had touch sensors and could move forwards, backwards, rotate, and ding its bell. The earliest year-long school users of Logo were in 1968–69 at Muzzey Jr. High in Lexington, Massachusetts. The virtual and physical turtles were first used by fifth-graders at the Bridge School in the same city in 1970–71. Turtle and graphics[edit] See also: Turtle graphics Logo's most-known feature is the turtle (derived originally from a robot of the same name),[5] an on-screen "cursor" that showed output from commands for movement and small retractable pen, together producing line graphics. It has traditionally been displayed either as a triangle or a turtle icon (though it can be represented by any icon). Turtle graphics were added to the Logo language by Seymour Papert in the late 1960s to support Papert's version of the turtle robot, a simple robot controlled from the user's workstation that is designed to carry out the drawing functions assigned to it using a small retractable pen set into or attached to the robot's body. As a practical matter, the use of turtle geometry instead of a more traditional model mimics the actual movement logic of the turtle robot. The turtle moves with commands that are relative to its own position, LEFT 90 means spin left by 90 degrees. Some Logo implementations, particularly those that allow the use of concurrency and multiple turtles, support collision detection and allow the user to redefine the appearance of the turtle cursor, essentially allowing the Logo turtles to function as sprites. Multiple turtles are supported by MSWLogo, as well as 3D graphics. Input from COM ports and LPT ports are also allowed by MSWLogo through windows GUI. Interrupts can be triggered via keyboard and mouse events. Simple GIF animations may also be produced on MSWLogo version 6.5 with the gifsave command. Turtle geometry is also sometimes used in environments other than Logo as an alternative to a strictly coordinate-addressed graphics system. For instance, the idea of turtle graphics is also useful in Lindenmayer system for generating fractals. Implementations[edit] Further information: UCBLogo "Apple Logo" redirects here. For the logo of Apple Inc., see Apple logo. IBM LCSI Logo welcome screen Source code and output in IBM LCSI Logo running in DOSBox Some modern derivatives of Logo allow thousands of independently moving turtles. There are two popular implementations: Massachusetts Institute of Technology's StarLogo and Northwestern University Center for Connected Learning's (CCL) NetLogo. They allow exploring emergent phenomena and come with many experiments in social studies, biology, physics, and other areas. NetLogo is widely used in agent-based simulation in the biological and social sciences. Although there is no agreed-upon standard, there is a broad consensus on core aspects of the language. In March 2020, there were counted 308 implementations and dialects of Logo, each with its own strengths.[7] Most of those 308 are no longer in wide use, but many are still under development. Commercial implementations widely used in schools include MicroWorlds Logo and Imagine Logo. Legacy and current implementations include: Apple Logo for the Apple II Plus and Apple Logo Writer for the Apple IIe, developed by Logo Computer Systems, Inc. (LCSI), were the most broadly used and prevalent early implementations of Logo that peaked in the early to mid-1980s. Aquarius LOGO was released in 1982 on cartridge by Mattel for the Aquarius home computer. Atari Logo was released on cartridge by Atari for the Atari 8-bit family. Color Logo was released in 1983 on cartridge (26-2722) and disk (26-2721) by Tandy for the TRS-80 Color Computer. Commodore Logo was released, with the subtitle "A Language for Learning", by Commodore Electronics. It was based on MIT Logo and enhanced by Terrapin, Inc. The Commodore 64 version (C64105) was released on diskette in 1983; the Plus/4 version (T263001) was released on cartridge in 1984.[8][9] ExperLogo was released in 1985 on floppy by Expertelligence Inc. for the Macintosh 128K. Hot-Logo was released in the mid-1980s by EPCOM for the MSX 8-bit computers with its own set of commands in Brazilian Portuguese. TI Logo (for the TI 99/4A computer) was used in primary schools, emphasizing Logo's usefulness in teaching computing fundamentals to novice programmers. IBM marketed their own version of Logo (P/N 6024076), developed jointly by Logo Computer Systems, Inc. (LCSI), for their then-new IBM PC. UCBLogo, also known as Berkeley Logo, is a free, cross-platform implementation of standard Logo last released in 2009. George Mills at MIT used UCBLogo as the basis for MSWLogo which is more refined and also free. Jim Muller wrote a book, The Great Logo Adventure, which was a complete Logo manual and which used MSWLogo as the demonstration language. It is now out of print, but Jim has released all the files in pdf format. (Check the Logo Foundation website for details.) MSWLogo has evolved into FMSLogo: An Educational Programming Environment. ObjectLOGO is a variant with object-oriented extensions. aUCBLogo a rewrite and enhancement of UCBLogo. Logo3D is a tridimensional version of Logo and can be found at Logo (programming language) on SourceForge.net. Dr. Logo was developed by Digital Research and distributed in computers including the IBM PCjr[10] and the Amstrad CPC.[11][12][13] Acornsoft Logo was released in 1985 for the BBC Micro and Acorn Electron. In February 1990, Electron User published Timothy Grantham's simple implementation of Logo for the Acorn Electron under the article "Talking Turtle".[14] LibreLogo is an extension to some versions of LibreOffice. Released in 2012, it is written in [[Python (programming language)|Python]. It allows vector graphics to be written in Writer. At least two web-based implementations using Berkeley Logo, HTML5, CSS3 and JQuery can be found. POOL is a dialect of Logo with object-oriented extensions, implemented in 2014. POOL programs are compiled and run in the graphical IDE on Microsoft Windows. A simplified, cross-platform environment is available for systems supporting .NET Framework. QLogo is an open-source and cross-platform rewrite of UCBLogo with nearly full UCB compatibility that uses hardware-accelerated graphics. ObjectLOGO[edit] ObjectLOGO is a variant of Logo with object-oriented programming extensions and lexical scoping. Version 2.7 was sold by Digitool, Inc.[15] It is no longer being developed or supported, and does not run on versions of the Mac operating system later than version 7.5.[16] Lego Logo[edit] Lego Logo is a version of Logo that can manipulate robotic Lego bricks attached to a computer.[17] It was implemented on the Apple II computing platform and was used in American and other grade schools in the late 1980s and early 1990s.[18] Lego Logo is a precursor to Scratch. Acornsoft Logo[edit] Acornsoft Logo is a commercial implementation of Logo for the 8-bit BBC Micro and Acorn Electron computers.[19] Acornsoft Logo was developed for Acorn Computers as a full implementation of Logo. It features multiple screen turtles and four-channel sound. It was provided on two 16kB ROMs, with utilities and drivers as accompanying software.[20] Influence[edit] Logo was a primary influence on the Smalltalk programming language. It is also the main influence on the Etoys educational programming environment and language, which is essentially a Logo variant written in Squeak (itself a variant of Smalltalk). Logo influenced the procedure/method model in AgentSheets and AgentCubes to program agents similar to the notion of a turtle in Logo. Logo provided the underlying language for Boxer. Boxer was developed at University of California, Berkeley and MIT and is based on a literacy model, making it easier to use for nontechnical people.[citation needed] KTurtle is a variation of Logo implemented at Qt for the KDE environment loosely based on Logo.[21] Two more results of Logo's influence are Kojo, a variant of Scala, and Scratch, a visual, drag-and-drop language which runs in a web browser. In 2015, Cubetto, an educational robotics system for children aged three years and older, was developed through crowd-sourced funding. Cubetto was influenced both by Logo and by Montessori. Cubetto features a small cubic Turtle that turns only through 90 degrees.[22] Cubetto has been described as an update of the button-box MIT Logo system TORTIS.[23] See also[edit] AgentCubes AgentSheets UCBLogo MSWLogo MicroWorlds StarLogo NetLogo LibreLogo, a turtle graphics language lacking full UCB compatibility References[edit] ^ Abelson, Hal; Goodman, Nat; Rudolph, Lee (December 1974). "Logo Manual". Artificial Intelligence Lab, Massachusetts Institute of Technology. Archived from the original on September 11, 2016. Retrieved August 28, 2016. ^ Goldenberg, E. Paul (August 1982). "Logo – A Cultural Glossary". Byte. p. 218. Retrieved 19 October 2013. ^ CSLS Vol 1, Preface .pxvi, Harvey 1997 ^ Computer Science Logo Style, Brian Harvey, MIT Press (3 volumes) ISBN 0-262-58148-5, ISBN 0-262-58149-3, ISBN 0-262-58150-7. Available online Archived 2013-07-04 at the Wayback Machine ^ a b "Logo Foundation". el.media.mit.edu. Archived from the original on 2011-07-21. Retrieved 2011-04-07. ^ "logothings". logothings.wikispaces.com. Archived from the original on 2011-12-07. ^ "The Logo Tree Project" (PDF). elica.net. Archived from the original (PDF) on 2009-03-06. Retrieved 2020-03-25. ^ Brain, Jim; Zimmerman, Bo (2017-10-30). "Canonical List of Commodore Products". Archived from the original on 2017-12-20. Retrieved 2017-12-03. ^ "Logo – Software Details". Plus/4 World. Archived from the original on 2017-12-04. Retrieved 2017-12-03. ^ "DRI ships 128K version of Dr. Logo" (PDF). Micro Notes - Technical information on Digital Research products. 2 (2). Pacific Grove, CA, USA: Digital Research, Inc. May 1984. p. 4. NWS-106-002. Archived (PDF) from the original on 2020-02-11. Retrieved 2020-02-11. […] Dr. Logo first appeared on the retail market in fall of 1983 for the IBM PC and climbed to the top of the Softsel Hot List. The retail release included SpeedStart CP/M, an abridged version of CP/M that boots automatically when the system is turned on. […] [1] ^ Digital Research's DR Logo ^ Amstrad CPC 6128 - Computing History ^ Manual Amstrad PCW 8256/8512 ^ Talking Turtle Archived 2017-03-28 at the Wayback Machine page 20 and 21 ^ Object Logo Archived 2008-04-30 at the Wayback Machine page on the Digitool website (accessed 4 March 2008) ^ Object Logo ordering page on the Digitool website (accessed 4 March 2008) ^ Behavior Construction Kits ^ Lego/LOGO Project Archived 2011-07-20 at the Wayback Machine at UCLS ^ Field, Graham (1985). LOGO on the BBC computer and Acorn Electron. Macmillan. ISBN 0-333-39566-2. ^ Radburn, Derek. "Four Logos for the BBC Micro". The Micro User Education Special. The Micro User. Retrieved February 20, 2012. ^ "The KDE Education Project – KTurtle". edu.kde.org. Archived from the original on 2006-08-27. ^ "Cubetto: A toy robot teaching kids code & computer programming". Primo Toys. Archived from the original on 2016-09-02. ^ "OZNAKI Project". harveycohen.net. Archived from the original on 2016-08-20. Further reading[edit] The Great Logo Adventure, Jim Muller, Doone Publications ISBN 0-9651934-6-2; now out of print; downloadable free of charge in pdf form from The MSWLogo website, along with the freeware MSWLogo program To Artificial Intelligence (1976) Early AI textbook where Logo is used extensively. (Using the Edinburgh University dialect, AI2LOGO) Turtle Geometry Abelson and diSessa Children Designers, Idit Harel Caperton, Ablex Publishing Corporation ISBN 0893917885. Available online Learning With Logo, Daniel Watt, McGraw Hill, ISBN 0-07-068570-3. Available Through Amazon Teaching With Logo: Building Blocks For Learning, Molly Watt and Daniel Watt, Addison Wesley (now Pearson) 1986, ISBN 0-201-08112-1 Available through Amazon External links[edit] Wikimedia Commons has media related to Logo (programming language). Wikibooks has a book on the topic of: Logo Programming Logo Interpreter papert: logo in your browser Online PHP-based Logo Interpreter MachineLab TurtleSphere (MaLT) Online LOGO Interprepter with 3D graphics using three.js javascript library. Vlad Tudor's Free Online Logo Interpreter using HTML5, CSS3 and JQuery TurtleAcademy (Learn Logo for free) XLogo4Schools is a revised version of XLogo XLogoOnline is a modern, browser-based programming environment for the primary school. The programming language is a subset of the XLogo dialect. In addition to the online version, offline versions are available for Windows, macOS and Linux. DR Logo at CPCWiki WIN-LOGO 3.0 of a German Author in English and German language POOL is a compiled LOGO dialect QLogo Digitool, producers of ObjectLOGO turtleSpaces is an OpenGL re-implementation and broad extension of Apple (LCSI) Logo II intended for making 3D models, animations and games. It is currently available for Windows, macOS and Linux. v t e Logo programming language Classic Acornsoft Logo Atari Logo MSWLogo FMSLogo UCBLogo MicroWorlds MicroWorlds JR Extensions Lego Logo StarLogo NetLogo With object extensions ObjectLOGO ExperLogo Other variants, extensions ARLOGO LibreLogo People Hal Abelson Denison Bollay Wally Feurzeig Brian Harvey Seymour Papert Mitchel Resnick Cynthia Solomon Category v t e Lisp programming language Features Automatic storage management Conditionals Dynamic typing Higher-order functions Linked lists M-expressions (deprecated) Read–eval–print loop Recursion S-expressions Self-hosting compiler Tree data structures Object systems Common Lisp Object System (CLOS) CommonLoops Flavors Implementations Technical standard(s) exists Common Lisp Allegro Common Lisp Armed Bear Common Lisp (ABCL) CLISP Clozure CL CMU Common Lisp (CMUCL) Corman Common Lisp Embeddable Common Lisp (ECL) GNU Common Lisp (GCL) LispWorks Macintosh Common Lisp Mocl Movitz Poplog Steel Bank Common Lisp (SBCL) Symbolics Common Lisp Scheme History Bigloo Chez Scheme Chicken Gambit Game Oriented Assembly Lisp (GOAL) Ikarus JScheme Kawa Larceny MIT/GNU Scheme MultiLisp Pocket Scheme Racket RScheme Scheme 48 SCM SIOD T TinyScheme ISLISP OpenLisp Nonstandard Logo MSWLogo NetLogo StarLogo UCBLogo Arc AutoLISP BBN LISP Clojure Dylan (Apple, history) Emacs Lisp EuLisp Franz Lisp, PC-LISP Hy Interlisp Knowledge Engineering Environment *Lisp LeLisp LFE Lisp Machine Lisp Maclisp MDL MLisp newLISP NIL PC-LISP Picolisp Portable Standard Lisp RPL S-1 Lisp SKILL Spice Lisp Zetalisp Operating system Common Lisp Interface Manager, McCLIM Genera Scsh Hardware Lisp machines TI Explorer Space-cadet keyboard Community of practice Technical standards Scheme Requests for Implementation Common Lisp HyperSpec X3J13 Education Books Common Lisp the Language How to Design Programs (HTDP) On Lisp Practical Common Lisp Structure and Interpretation of Computer Programs (SICP) Curriculum ProgramByDesign Organizations Business Apple Computer Bolt, Beranek and Newman Harlequin Lucid Inc. Symbolics Xanalys Education Massachusetts Institute of Technology (MIT) MIT Computer Science and Artificial Intelligence Laboratory (CSAIL) Stanford Artificial Intelligence Laboratory University of California, Berkeley People Edmund Berkeley Daniel G. Bobrow William Clinger R. Kent Dybvig Matthias Felleisen Robert Bruce Findler Matthew Flatt Phyllis Fox Paul Graham Richard Greenblatt Timothy P. Hart Louis Hodes Mike Levin David Luckham John McCarthy Robert Tappan Morris Joel Moses David Park Steve Russell Richard Stallman Common Lisp Scott Fahlman Richard P. Gabriel Philip Greenspun (10th rule) David A. Moon Kent Pitman Guy L. Steele Jr. Daniel Weinreb Scheme Shriram Krishnamurthi Guy L. Steele Jr. Gerald Jay Sussman Julie Sussman Logo Hal Abelson Denison Bollay Wally Feurzeig Brian Harvey Seymour Papert Mitchel Resnick Cynthia Solomon Category Category List Authority control GND: 4036214-0 LCCN: sh85078135 Retrieved from "https://en.wikipedia.org/w/index.php?title=Logo_(programming_language)&oldid=989631606" Categories: 1967 in robotics Dynamically typed programming languages Domain-specific programming languages Educational programming languages Free educational software Functional languages Lisp programming language family Logo programming language family Programming languages Programming languages created in 1967 Robot programming languages Hidden categories: Webarchive template wayback links Articles with short description Short description matches Wikidata Wikipedia articles needing clarification from March 2008 All articles with unsourced statements Articles with unsourced statements from September 2015 Commons category link from Wikidata Wikipedia articles with GND identifiers Wikipedia articles with LCCN identifiers Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons Languages العربية Aragonés Azərbaycanca Беларуская Български Bosanski Català Čeština Deutsch Eesti Ελληνικά Español Esperanto Euskara فارسی Français Galego 한국어 Հայերեն Hrvatski Bahasa Indonesia Íslenska Italiano עברית ಕನ್ನಡ Latviešu Magyar Nederlands 日本語 Polski Português Русский Simple English Slovenčina Slovenščina Српски / srpski Srpskohrvatski / српскохрватски Suomi Svenska தமிழ் ไทย Тоҷикӣ Türkçe Українська 中文 Edit links This page was last edited on 20 November 2020, at 03:06 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement