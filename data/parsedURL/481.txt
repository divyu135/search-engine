PDF - Wikipedia PDF From Wikipedia, the free encyclopedia (Redirected from Portable Document Format) Jump to navigation Jump to search Family of file formats used to present documents For other uses, see PDF (disambiguation). Portable Document Format Adobe PDF icon Filename extension .pdf[note 1] Internet media type application/pdf,[1] application/x-pdf application/x-bzpdf application/x-gzpdf Type code 'PDF '[1] (including a single space) Uniform Type Identifier (UTI) com.adobe.pdf Magic number %PDF Developed by Adobe Inc. (1993–2008) ISO (2008–) Initial release 15 June 1993; 27 years ago (1993-06-15) Latest release 2.0 Extended to PDF/A, PDF/E, PDF/UA, PDF/VT, PDF/X Standard ISO 32000-2 Open format? Yes Website www.iso.org/standard/63534.html The Portable Document Format (PDF) is a file format developed by Adobe in 1993 to present documents, including text formatting and images, in a manner independent of application software, hardware, and operating systems.[2][3] Based on the PostScript language, each PDF file encapsulates a complete description of a fixed-layout flat document, including the text, fonts, vector graphics, raster images and other information needed to display it. PDF was standardized as ISO 32000 in 2008, and no longer requires any royalties for its implementation.[4] PDF files may contain a variety of content besides flat text and graphics including logical structuring elements, interactive elements such as annotations and form-fields, layers, rich media (including video content), and three-dimensional objects using U3D or PRC, and various other data formats. The PDF specification also provides for encryption and digital signatures, file attachments, and metadata to enable workflows requiring these features. Contents 1 History and standardization 2 Technical foundations 2.1 PostScript 3 Technical overview 3.1 File structure 3.2 Imaging model 3.2.1 Vector graphics 3.2.2 Raster images 3.2.3 Text 3.2.3.1 Fonts 3.2.3.2 Standard Type 1 Fonts (Standard 14 Fonts) 3.2.3.3 Encodings 3.2.4 Transparency 3.3 Interactive elements 3.3.1 AcroForms 3.3.1.1 Forms Data Format (FDF) 3.3.1.2 XML Forms Data Format (XFDF) 3.3.2 Adobe XML Forms Architecture (XFA) 3.4 Logical structure and accessibility 3.5 Optional Content Groups (layers) 3.6 Security and signatures 3.6.1 Usage rights 3.6.2 Vulnerabilities 3.7 File attachments 3.8 Metadata 3.9 Usage restrictions and monitoring 3.10 Default display settings 4 Intellectual property 5 Technical issues 5.1 Accessibility 5.2 Viruses and exploits 6 Content 7 Software 7.1 Conversions 7.2 Annotation 7.3 Other 8 See also 9 Notes 10 References 11 Further reading 12 External links History and standardization[edit] Main article: History of the Portable Document Format (PDF) Adobe Systems made the PDF specification available free of charge in 1993. In the early years PDF was popular mainly in desktop publishing workflows, and competed with a variety of formats such as DjVu, Envoy, Common Ground Digital Paper, Farallon Replica and even Adobe's own PostScript format. PDF was a proprietary format controlled by Adobe until it was released as an open standard on July 1, 2008, and published by the International Organization for Standardization as ISO 32000-1:2008,[5][6] at which time control of the specification passed to an ISO Committee of volunteer industry experts. In 2008, Adobe published a Public Patent License to ISO 32000-1 granting royalty-free rights for all patents owned by Adobe that are necessary to make, use, sell, and distribute PDF-compliant implementations.[7] PDF 1.7, the sixth edition of the PDF specification that became ISO 32000-1, includes some proprietary technologies defined only by Adobe, such as Adobe XML Forms Architecture (XFA) and JavaScript extension for Acrobat, which are referenced by ISO 32000-1 as normative and indispensable for the full implementation of the ISO 32000-1 specification. These proprietary technologies are not standardized and their specification is published only on Adobe's website.[8][9][10][11][12] Many of them are also not supported by popular third-party implementations of PDF. On July 28, 2017, ISO 32000-2:2017 (PDF 2.0) was published.[13] ISO 32000-2 does not include any proprietary technologies as normative references.[14] Technical foundations[edit] The PDF combines three technologies: A subset of the PostScript page description programming language, for generating the layout and graphics. A font-embedding/replacement system to allow fonts to travel with the documents. A structured storage system to bundle these elements and any associated content into a single file, with data compression where appropriate. PostScript[edit] PostScript is a page description language run in an interpreter to generate an image, a process requiring many resources. It can handle graphics and standard features of programming languages such as if statements and loop commands. PDF is largely based on PostScript but simplified to remove flow control features like these, while graphics commands such as lineto remain. Often, the PostScript-like PDF code is generated from a source PostScript file. The graphics commands that are output by the PostScript code are collected and tokenized. Any files, graphics, or fonts to which the document refers also are collected. Then, everything is compressed to a single file. Therefore, the entire PostScript world (fonts, layout, measurements) remains intact. As a document format, PDF has several advantages over PostScript: PDF contains tokenized and interpreted results of the PostScript source code, for direct correspondence between changes to items in the PDF page description and changes to the resulting page appearance. PDF (from version 1.4) supports transparent graphics; PostScript does not. PostScript is an interpreted programming language with an implicit global state, so instructions accompanying the description of one page can affect the appearance of any following page. Therefore, all preceding pages in a PostScript document must be processed to determine the correct appearance of a given page, whereas each page in a PDF document is unaffected by the others. As a result, PDF viewers allow the user to quickly jump to the final pages of a long document, whereas a PostScript viewer needs to process all pages sequentially before being able to display the destination page (unless the optional PostScript Document Structuring Conventions have been carefully compiled and included). Technical overview[edit] File structure[edit] A PDF file contains 7-bit ASCII characters, except for certain elements that may have binary content.The file starts with a header containing a magic number (as a readable string) and the version of the format, for example %PDF-1.7. The format is a subset of a COS ("Carousel" Object Structure) format.[15] A COS tree file consists primarily of objects, of which there are eight types:[16] Boolean values, representing true or false Numbers Strings, enclosed within parentheses ((...)). Strings may contain 8-bit characters. Names, starting with a forward slash (/) Arrays, ordered collections of objects enclosed within square brackets ([...]) Dictionaries, collections of objects indexed by names enclosed within double angle brackets (<<...>>) Streams, usually containing large amounts of optionally compressed binary data, preceded by a dictionary and enclosed between the stream and endstream keywords. The null object Furthermore, there may be comments, introduced with the percent sign (%). Comments may contain 8-bit characters. Objects may be either direct (embedded in another object) or indirect. Indirect objects are numbered with an object number and a generation number and defined between the obj and endobj keywords if residing in the document root. Beginning with PDF version 1.5, indirect objects (except other streams) may also be located in special streams known as object streams (marked /Type /ObjStm). This technique enables non-stream objects to have standard stream filters applied to them, reduces the size of files that have large numbers of small indirect objects and is especially useful for Tagged PDF. Object streams do not support specifying an object's generation number (other than 0). An index table, also called the cross-reference table, is typically located near the end of the file and gives the byte offset of each indirect object from the start of the file.[17] This design allows for efficient random access to the objects in the file, and also allows for small changes to be made without rewriting the entire file (incremental update). Before PDF version 1.5, the table would always be in a special ASCII format, be marked with the xref keyword, and follow the main body composed of indirect objects. Version 1.5 introduced optional cross-reference streams, which have the form of a standard stream object, possibly with filters applied. Such a stream may be used instead of the ASCII cross-reference table and contains the offsets and other information in binary format. The format is flexible in that it allows for integer width specification (using the /W array), so that for example, a document not exceeding 64 KiB in size may dedicate only 2 bytes for object offsets. At the end of a PDF file is a footer containing: The startxref keyword followed by an offset to the start of the cross-reference table (starting with the xref keyword) or the cross-reference stream object, followed by The %%EOF end-of-file marker. If a cross-reference stream is not being used, the footer is preceded by the trailer keyword followed by a dictionary containing information that would otherwise be contained in the cross-reference stream object's dictionary: A reference to the root object of the tree structure, also known as the catalog (/Root) The count of indirect objects in the cross-reference table (/Size) Other optional information There are two layouts to the PDF files: non-linear (not "optimized") and linear ("optimized"). Non-linear PDF files can be smaller than their linear counterparts, though they are slower to access because portions of the data required to assemble pages of the document are scattered throughout the PDF file. Linear PDF files (also called "optimized" or "web optimized" PDF files) are constructed in a manner that enables them to be read in a Web browser plugin without waiting for the entire file to download, since they are generated in a linear (as in page order) fashion.[18] PDF files may be optimized using Adobe Acrobat software or QPDF. Imaging model[edit] The basic design of how graphics are represented in PDF is very similar to that of PostScript, except for the use of transparency, which was added in PDF 1.4. PDF graphics use a device-independent Cartesian coordinate system to describe the surface of a page. A PDF page description can use a matrix to scale, rotate, or skew graphical elements. A key concept in PDF is that of the graphics state, which is a collection of graphical parameters that may be changed, saved, and restored by a page description. PDF has (as of version 1.6) 24 graphics state properties, of which some of the most important are: The current transformation matrix (CTM), which determines the coordinate system The clipping path The color space The alpha constant, which is a key component of transparency Vector graphics[edit] As in PostScript, vector graphics in PDF are constructed with paths. Paths are usually composed of lines and cubic Bézier curves, but can also be constructed from the outlines of text. Unlike PostScript, PDF does not allow a single path to mix text outlines with lines and curves. Paths can be stroked, filled, clipping. Strokes and fills can use any color set in the graphics state, including patterns. PDF supports several types of patterns. The simplest is the tiling pattern in which a piece of artwork is specified to be drawn repeatedly. This may be a colored tiling pattern, with the colors specified in the pattern object, or an uncolored tiling pattern, which defers color specification to the time the pattern is drawn. Beginning with PDF 1.3 there is also a shading pattern, which draws continuously varying colors. There are seven types of shading patterns of which the simplest are the axial shade (Type 2) and radial shade (Type 3). Raster images[edit] Raster images in PDF (called Image XObjects) are represented by dictionaries with an associated stream. The dictionary describes the properties of the image, and the stream contains the image data. (Less commonly, a raster image may be embedded directly in a page description as an inline image.) Images are typically filtered for compression purposes. Image filters supported in PDF include the following general-purpose filters: ASCII85Decode, a filter used to put the stream into 7-bit ASCII, ASCIIHexDecode, similar to ASCII85Decode but less compact, FlateDecode, a commonly used filter based on the deflate algorithm defined in RFC 1951 (deflate is also used in the gzip, PNG, and zip file formats among others); introduced in PDF 1.2; it can use one of two groups of predictor functions for more compact zlib/deflate compression: Predictor 2 from the TIFF 6.0 specification and predictors (filters) from the PNG specification ( RFC 2083), LZWDecode, a filter based on LZW Compression; it can use one of two groups of predictor functions for more compact LZW compression: Predictor 2 from the TIFF 6.0 specification and predictors (filters) from the PNG specification, RunLengthDecode, a simple compression method for streams with repetitive data using the run-length encoding algorithm and the image-specific filters, DCTDecode, a lossy filter based on the JPEG standard, CCITTFaxDecode, a lossless bi-level (black/white) filter based on the Group 3 or Group 4 CCITT (ITU-T) fax compression standard defined in ITU-T T.4 and T.6, JBIG2Decode, a lossy or lossless bi-level (black/white) filter based on the JBIG2 standard, introduced in PDF 1.4, and JPXDecode, a lossy or lossless filter based on the JPEG 2000 standard, introduced in PDF 1.5. Normally all image content in a PDF is embedded in the file. But PDF allows image data to be stored in external files by the use of external streams or Alternate Images. Standardized subsets of PDF, including PDF/A and PDF/X, prohibit these features. Text[edit] Text in PDF is represented by text elements in page content streams. A text element specifies that characters should be drawn at certain positions. The characters are specified using the encoding of a selected font resource. Fonts[edit] A font object in PDF is a description of a digital typeface. It may either describe the characteristics of a typeface, or it may include an embedded font file. The latter case is called an embedded font while the former is called an unembedded font. The font files that may be embedded are based on widely used standard digital font formats: Type 1 (and its compressed variant CFF), TrueType, and (beginning with PDF 1.6) OpenType. Additionally PDF supports the Type 3 variant in which the components of the font are described by PDF graphic operators. Standard Type 1 Fonts (Standard 14 Fonts)[edit] Fourteen typefaces, known as the standard 14 fonts, have a special significance in PDF documents: Times (v3) (in regular, italic, bold, and bold italic) Courier (in regular, oblique, bold and bold oblique) Helvetica (v3) (in regular, oblique, bold and bold oblique) Symbol Zapf Dingbats These fonts are sometimes called the base fourteen fonts.[19] These fonts, or suitable substitute fonts with the same metrics, should be available in most PDF readers, but they are not guaranteed to be available in the reader, and may only display correctly if the system has them installed.[20] Fonts may be substituted if they are not embedded in a PDF. Encodings[edit] Within text strings, characters are shown using character codes (integers) that map to glyphs in the current font using an encoding. There are a number of predefined encodings, including WinAnsi, MacRoman, and many encodings for East Asian languages and a font can have its own built-in encoding. (Although the WinAnsi and MacRoman encodings are derived from the historical properties of the Windows and Macintosh operating systems, fonts using these encodings work equally well on any platform.) PDF can specify a predefined encoding to use, the font's built-in encoding or provide a lookup table of differences to a predefined or built-in encoding (not recommended with TrueType fonts).[21] The encoding mechanisms in PDF were designed for Type 1 fonts, and the rules for applying them to TrueType fonts are complex. For large fonts or fonts with non-standard glyphs, the special encodings Identity-H (for horizontal writing) and Identity-V (for vertical) are used. With such fonts, it is necessary to provide a ToUnicode table if semantic information about the characters is to be preserved. Transparency[edit] The original imaging model of PDF was, like PostScript's, opaque: each object drawn on the page completely replaced anything previously marked in the same location. In PDF 1.4 the imaging model was extended to allow transparency. When transparency is used, new objects interact with previously marked objects to produce blending effects. The addition of transparency to PDF was done by means of new extensions that were designed to be ignored in products written to PDF 1.3 and earlier specifications. As a result, files that use a small amount of transparency might view acceptably by older viewers, but files making extensive use of transparency could be viewed incorrectly by an older viewer without warning. The transparency extensions are based on the key concepts of transparency groups, blending modes, shape, and alpha. The model is closely aligned with the features of Adobe Illustrator version 9. The blend modes were based on those used by Adobe Photoshop at the time. When the PDF 1.4 specification was published, the formulas for calculating blend modes were kept secret by Adobe. They have since been published.[22] The concept of a transparency group in PDF specification is independent of existing notions of "group" or "layer" in applications such as Adobe Illustrator. Those groupings reflect logical relationships among objects that are meaningful when editing those objects, but they are not part of the imaging model. Interactive elements[edit] PDF files may contain interactive elements such as annotations, form fields, video, 3D and rich media. Rich Media PDF is a PDF file including interactive content that can be embedded or linked within the file. Interactive Forms is a mechanism to add forms to the PDF file format. PDF currently supports two different methods for integrating data and PDF forms. Both formats today coexist in the PDF specification:[23][24][25][26] AcroForms (also known as Acrobat forms), introduced in the PDF 1.2 format specification and included in all later PDF specifications. Adobe XML Forms Architecture (XFA) forms, introduced in the PDF 1.5 format specification. Adobe XFA Forms are not compatible with AcroForms.[27] XFA was deprecated from PDF with PDF 2.0. AcroForms[edit] AcroForms were introduced in the PDF 1.2 format. AcroForms permit using objects (e.g. text boxes, Radio buttons, etc.) and some code (e.g. JavaScript). Alongside the standard PDF action types, interactive forms (AcroForms) support submitting, resetting, and importing data. The "submit" action transmits the names and values of selected interactive form fields to a specified uniform resource locator (URL). Interactive form field names and values may be submitted in any of the following formats, (depending on the settings of the action's ExportFormat, SubmitPDF, and XFDF flags):[23] HTML Form format (HTML 4.01 Specification since PDF 1.5; HTML 2.0 since 1.2) Forms Data Format (FDF) XML Forms Data Format (XFDF) (external XML Forms Data Format Specification, Version 2.0; supported since PDF 1.5; it replaced the "XML" form submission format defined in PDF 1.4) PDF (the entire document can be submitted rather than individual fields and values, as was defined in PDF 1.4.) AcroForms can keep form field values in external stand-alone files containing key:value pairs. The external files may use Forms Data Format (FDF) and XML Forms Data Format (XFDF) files.[28][29][30] The usage rights (UR) signatures define rights for import form data files in FDF, XFDF and text (CSV/TSV) formats, and export form data files in FDF and XFDF formats.[23] Forms Data Format (FDF)[edit] Forms Data Format (FDF) Filename extension .fdf Internet media type application/vnd.fdf[31] Type code 'FDF' Developed by Adobe Systems Initial release 1996 (1996) (PDF 1.2) Extended from PDF Extended to XFDF Standard ISO 32000-2:2017 Open format? Yes The Forms Data Format (FDF) is based on PDF, it uses the same syntax and has essentially the same file structure, but is much simpler than PDF since the body of an FDF document consists of only one required object. Forms Data Format is defined in the PDF specification (since PDF 1.2). The Forms Data Format can be used when submitting form data to a server, receiving the response, and incorporating it into the interactive form. It can also be used to export form data to stand-alone files that can be imported back into the corresponding PDF interactive form. XML Forms Data Format (XFDF)[edit] XML Forms Data Format (XFDF) Filename extension .xfdf Internet media type application/vnd.adobe.xfdf[32] Type code 'XFDF' Developed by Adobe Systems Initial release July 2003 (2003-07) (referenced in PDF 1.5) Latest release 3.0 (August 2009; 11 years ago (2009-08)) Extended from PDF, FDF, XML Standard ISO 19444-1[33]) Website XFDF 3.0 specification XML Forms Data Format (XFDF) is the XML version of Forms Data Format, but the XFDF implements only a subset of FDF containing forms and annotations. Some entries in the FDF dictionary do not have XFDF equivalents – such as the Status, Encoding, JavaScript, Page's keys, EmbeddedFDFs, Differences, and Target. In addition, XFDF does not allow the spawning, or addition, of new pages based on the given data; as can be done when using an FDF file. The XFDF specification is referenced (but not included) in PDF 1.5 specification (and in later versions). It is described separately in XML Forms Data Format Specification.[29] The PDF 1.4 specification allowed form submissions in XML format, but this was replaced by submissions in XFDF format in the PDF 1.5 specification. XFDF conforms to the XML standard. As of August, 2019, XFDF 3.0 is an ISO/IEC standard under the formal name ISO 19444-1:2019 - Document management — XML Forms Data Format — Part 1: Use of ISO 32000-2 (XFDF 3.0).[34] This standard is a normative reference of ISO 32000-2. XFDF can be used in the same way as FDF; e.g., form data is submitted to a server, modifications are made, then sent back and the new form data is imported in an interactive form. It can also be used to export form data to stand-alone files that can be imported back into the corresponding PDF interactive form. Adobe XML Forms Architecture (XFA)[edit] Main article: XFA In PDF 1.5, Adobe Systems introduced a proprietary format for forms; Adobe XML Forms Architecture (XFA). Adobe XFA Forms are not compatible with ISO 32000's AcroForms feature, and most PDF processors do not handle XFA content. The XFA specification is referenced from ISO 32000-1/PDF 1.7 as an external proprietary specification, and was entirely deprecated from PDF with ISO 32000-2 (PDF 2.0). Logical structure and accessibility[edit] A "tagged" PDF (see clause 14.8 in ISO 32000) includes document structure and semantics information to enable reliable text extraction and accessibility. Technically speaking, tagged PDF is a stylized use of the format that builds on the logical structure framework introduced in PDF 1.3. Tagged PDF defines a set of standard structure types and attributes that allow page content (text, graphics, and images) to be extracted and reused for other purposes.[35] Tagged PDF is not required in situations where a PDF file is intended only for print. Since the feature is optional, and since the rules for Tagged PDF were relatively vague in ISO 32000-1, support for tagged PDF amongst consuming devices, including assistive technology (AT), is uneven at this time.[36] ISO 32000-2, however, includes an improved discussion of tagged PDF which is anticipated to facilitate further adoption. An ISO-standardized subset of PDF specifically targeted at accessibility; PDF/UA, was first published in 2012. Optional Content Groups (layers)[edit] With the introduction of PDF version, 1.5 (2003) came the concept of Layers. Layers, or as they are more formally known Optional Content Groups (OCGs), refer to sections of content in a PDF document that can be selectively viewed or hidden by document authors or consumers. This capability is useful in CAD drawings, layered artwork, maps, multi-language documents, etc.Basically, it consists of an Optional Content Properties Dictionary added to the document root. This dictionary contains an array of Optional Content Groups (OCGs), each describing a set of information and each of which may be individually displayed or suppressed, plus a set of Optional Content Configuration Dictionaries, which give the status (Displayed or Suppressed) of the given OCGs. Security and signatures[edit] A PDF file may be encrypted for security, or digitally signed for authentication. The standard security provided by Acrobat PDF consists of two different methods and two different passwords: a user password, which encrypts the file and prevents opening, and an owner password, which specifies operations that should be restricted even when the document is decrypted, which can include modifying, printing, or copying text and graphics out of the document, or adding or modifying text notes and AcroForm fields. The user password encrypts the file, while the owner password does not, instead of relying on client software to respect these restrictions. An owner password can easily be removed by software, including some free online services.[37] Thus, the use restrictions that a document author places on a PDF document are not secure, and cannot be assured once the file is distributed; this warning is displayed when applying such restrictions using Adobe Acrobat software to create or edit PDF files. Even without removing the password, most freeware or open source PDF readers ignore the permission "protections" and allow the user to print or make copy of excerpts of the text as if the document were not limited by password protection.[38][39][40] Usage rights[edit] Beginning with PDF 1.5, Usage rights (UR) signatures are used to enable additional interactive features that are not available by default in a particular PDF viewer application. The signature is used to validate that the permissions have been granted by a bona fide granting authority. For example, it can be used to allow a user:[23] To save the PDF document along with a modified form and/or annotation data Import form data files in FDF, XFDF, and text (CSV/TSV) formats Export form data files in FDF and XFDF formats Submit form data Instantiate new pages from named page templates Apply a digital signature to existing digital signature form field Create, delete, modify, copy, import, and export annotations For example, Adobe Systems grants permissions to enable additional features in Adobe Reader, using public-key cryptography. Adobe Reader verifies that the signature uses a certificate from an Adobe-authorized certificate authority. Any PDF application can use this same mechanism for its own purposes.[23] Vulnerabilities[edit] Under specific circumstances including non-patched systems of the receiver, the information the receiver of a digital signed document sees can be manipulated by the sender after the document has been signed by the signer.[41] File attachments[edit] PDF files can have file attachments which processors may access and open or save to a local filesystem. Metadata[edit] PDF files can contain two types of metadata.[42] The first is the Document Information Dictionary, a set of key/value fields such as author, title, subject, creation and update dates. This is stored in the optional Info trailer of the file. A small set of fields is defined, and can be extended with additional text values if required. This method is deprecated in PDF 2.0. In PDF 1.4, support was added for Metadata Streams, using the Extensible Metadata Platform (XMP) to add XML standards-based extensible metadata as used in other file formats. This allows metadata to be attached to any stream in the document, such as information about embedded illustrations, as well as the whole document (attaching to the document catalog), using an extensible schema. Usage restrictions and monitoring[edit] PDFs may be encrypted so that a password is needed to view or edit the contents. PDF 2.0 defines 256-bit AES encryption as standard for PDF 2.0 files. The PDF Reference also defines ways that third parties can define their own encryption systems for PDF. PDF files may be digitally signed; complete details on implementing digital signatures in PDF is provided in ISO 32000-2. PDF files may also contain embedded DRM restrictions that provide further controls that limit copying, editing or printing. These restrictions depend on the reader software to obey them, so the security they provide is limited. Default display settings[edit] PDF documents can contain display settings, including the page display layout and zoom level. Adobe Reader uses these settings to override the user's default settings when opening the document.[43] The free Adobe Reader cannot remove these settings. Intellectual property[edit] Anyone may create applications that can read and write PDF files without having to pay royalties to Adobe Systems; Adobe holds patents to PDF, but licenses them for royalty-free use in developing software complying with its PDF specification.[44] Technical issues[edit] Accessibility[edit] PDF files can be created specifically to be accessible for people with disabilities.[45][46][47][48][49] PDF file formats in use as of 2014[update] can include tags, text equivalents, captions, audio descriptions, and more. Some software can automatically produce tagged PDFs, but this feature is not always enabled by default.[50][51] Leading screen readers, including JAWS, Window-Eyes, Hal, and Kurzweil 1000 and 3000 can read tagged PDF.[52][53] Moreover, tagged PDFs can be re-flowed and magnified for readers with visual impairments. Adding tags to older PDFs and those that are generated from scanned documents can present some challenges. One of the significant challenges with PDF accessibility is that PDF documents have three distinct views, which, depending on the document's creation, can be inconsistent with each other. The three views are (i) the physical view, (ii) the tags view, and (iii) the content view. The physical view is displayed and printed (what most people consider a PDF document). The tags view is what screen readers and other assistive technologies use to deliver high-quality navigation and reading experience to users with disabilities. The content view is based on the physical order of objects within the PDF's content stream and may be displayed by software that does not fully support the tags' view, such as the Reflow feature in Adobe's Reader. PDF/UA, the International Standard for accessible PDF based on ISO 32000-1 was first published as ISO 14289–1 in 2012 and establishes normative language for accessible PDF technology. Viruses and exploits[edit] See also: Adobe Acrobat § Security PDF attachments carrying viruses were first discovered in 2001. The virus, named OUTLOOK.PDFWorm or Peachy, uses Microsoft Outlook to send itself as an attached Adobe PDF file. It was activated with Adobe Acrobat, but not with Acrobat Reader.[54] From time to time, new vulnerabilities are discovered in various versions of Adobe Reader,[55] prompting the company to issue security fixes. Other PDF readers are also susceptible. One aggravating factor is that a PDF reader can be configured to start automatically if a web page has an embedded PDF file, providing a vector for attack. If a malicious web page contains an infected PDF file that takes advantage of a vulnerability in the PDF reader, the system may be compromised even if the browser is secure. Some of these vulnerabilities are a result of the PDF standard allowing PDF documents to be scripted with JavaScript. Disabling JavaScript execution in the PDF reader can help mitigate such future exploits, although it does not protect against exploits in other parts of the PDF viewing software. Security experts say that JavaScript is not essential for a PDF reader and that the security benefit that comes from disabling JavaScript outweighs any compatibility issues caused.[56] One way of avoiding PDF file exploits is to have a local or web service convert files to another format before viewing. On March 30, 2010 security researcher Didier Stevens reported an Adobe Reader and Foxit Reader exploit that runs a malicious executable if the user allows it to launch when asked.[57] Content[edit] A PDF file is often a combination of vector graphics, text, and bitmap graphics. The basic types of content in a PDF are: Text stored as content streams (i.e., not encoded in plain text) Vector graphics for illustrations and designs that consist of shapes and lines Raster graphics for photographs and other types of image Multimedia objects in the document In later PDF revisions, a PDF document can also support links (inside document or web page), forms, JavaScript (initially available as a plugin for Acrobat 3.0), or any other types of embedded contents that can be handled using plug-ins. PDF 1.6 supports interactive 3D documents embedded in the PDF – 3D drawings can be embedded using U3D or PRC and various other data formats.[58][59][60] Two PDF files that look similar on a computer screen may be of very different sizes. For example, a high-resolution raster image takes more space than a low-resolution one. A typically higher resolution is needed for printing documents than for displaying them on screen. Other things that may increase the size of a file is embedding full fonts, especially for Asiatic scripts, and storing text as graphics. Software[edit] For a more comprehensive list, see List of PDF software. PDF viewers are generally provided free of charge, and many versions are available from a variety of sources. There are many software options for creating PDFs, including the PDF printing capabilities built into macOS, iOS,[61] and most Linux distributions, LibreOffice, Microsoft Office 2007 (if updated to SP2) and later,[62] WordPerfect 9, Scribus, numerous PDF print drivers for Microsoft Windows, the pdfTeX typesetting system, the DocBook PDF tools, applications developed around Ghostscript and Adobe Acrobat itself as well as Adobe InDesign, Adobe FrameMaker, Adobe Illustrator, Adobe Photoshop. Google's online office suite Google Docs allows for uploading and saving to PDF. Some web apps offer free PDF editing and annotation tools. Raster image processors (RIPs) are used to convert PDF files into a raster format suitable for imaging onto paper and other media in printers, digital production presses and prepress in a process known as rasterisation. RIPs capable of processing PDF directly include the Adobe PDF Print Engine[63] from Adobe Systems and Jaws[64] and the Harlequin RIP from Global Graphics. Conversions[edit] Documents saved in PDF (Portable Document Format, Portable Document Format for Archiving, Forms Data Format, any printable document) could be converted back and forth from many other formats such as:[65] Microsoft Office formats, Rich Text Format, OpenDocument, WordPerfect, Microsoft Windows Bitmap, Windows Metafile, Enhanced Metafile, Graphics Interchange Format, Microsoft HD Photo File, JPEG File Interchange, JPEG 2000 File Format and Code Stream, Portable Network Graphics, Tagged Image File, HyperText Markup Language, MIME Encapsulation of Aggregate HTML Documents, Scalable Vector Graphics, Microsoft Outlook, Text, XML Paper Specification, Extensible Markup Language, Silverlight XPS Document, Extensible Application Markup Language Companies such as Adobe Acrobat provide SDK libraries for developers to add and create PDF features in any software. Besides the Adobe PDF Library, there are other development libraries available. Annotation[edit] See also: Comparison of notetaking software Adobe Acrobat is one example of proprietary software that allows the user to annotate, highlight, and add notes to already created PDF files. One UNIX application available as free software (under the GNU General Public License) is PDFedit. The freeware Foxit Reader, available for Microsoft Windows, macOS and Linux, allows annotating documents. Tracker Software's PDF-XChange Viewer allows annotations and markups without restrictions in its freeware alternative. Apple's macOS's integrated PDF viewer, Preview, does also enable annotations as does the open-source software Skim, with the latter supporting interaction with LaTeX, SyncTeX, and PDFSync and integration with BibDesk reference management software. Freeware Qiqqa can create an annotation report that summarizes all the annotations and notes one has made across their library of PDFs. The Text Verification Tool exports differences in documents as annotations and markups. There are also web annotation systems that support annotation in pdf and other documents formats. In cases where PDFs are expected to have all of the functionality of paper documents, ink annotation is required. Other[edit] Examples of PDF software as online services including Scribd for viewing and storing, Pdfvue for online editing, and Thinkfree, Zamzar for conversion. In 1993 the Jaws raster image processor from Global Graphics became the first shipping prepress RIP that interpreted PDF natively without conversion to another format. The company released an upgrade to their Harlequin RIP with the same capability in 1997.[66] Agfa-Gevaert introduced and shipped Apogee, the first prepress workflow system based on PDF, in 1997. Many commercial offset printers have accepted the submission of press-ready PDF files as a print source, specifically the PDF/X-1a subset and variations of the same.[67] The submission of press-ready PDF files is a replacement for the problematic need for receiving collected native working files. PDF was selected as the "native" metafile format for Mac OS X, replacing the PICT format of the earlier classic Mac OS. The imaging model of the Quartz graphics layer is based on the model common to Display PostScript and PDF, leading to the nickname Display PDF. The Preview application can display PDF files, as can version 2.0 and later of the Safari web browser. System-level support for PDF allows Mac OS X applications to create PDF documents automatically, provided they support the OS-standard printing architecture. The files are then exported in PDF 1.3 format according to the file header. When taking a screenshot under Mac OS X versions 10.0 through 10.3, the image was also captured as a PDF; later versions save screen captures as a PNG file, though this behavior can be set back to PDF if desired. In 2006 PDF was widely accepted as the standard print job format at the Open Source Development Labs Printing Summit. It is supported as a print job format by the Common Unix Printing System and desktop application projects such as GNOME, KDE, Firefox, Thunderbird, LibreOffice and OpenOffice have switched to emit print jobs in PDF.[68] Some desktop printers also support direct PDF printing, which can interpret PDF data without external help. The Free Software Foundation once thought of as one of their high priority projects to be "developing a free, high-quality and fully functional set of libraries and programs that implement the PDF file format and associated technologies to the ISO 32000 standard."[69][70] In 2011, however, the GNU PDF project was removed from the list of "high priority projects" due to the maturation of the Poppler library,[71] which has enjoyed wider use in applications such as Evince with the GNOME desktop environment. Poppler is based on Xpdf[72][73] code base. There are also commercial development libraries available as listed in List of PDF software. The Apache PDFBox project of the Apache Software Foundation is an open source Java library for working with PDF documents. PDFBox is licensed under the Apache License.[74] See also[edit] Open XML Paper Specification Comparison of OpenXPS and PDF DjVu History of the Portable Document Format (PDF) PAdES, PDF Advanced Electronic Signature pdfrecycle Web document XSL Formatting Objects Notes[edit] ^ Before Adobe Acrobat and Portable Document Format, file extension .pdf was used by a word processor named WordStar, which used this extension for printer definition files. References[edit] ^ a b The application/pdf Media Type, 2017, RFC 8118 ^ Adobe Systems Incorporated, PDF Reference, Sixth edition, version 1.23 (53 MB), Nov 2006, p. 33. ^ "The Camelot Project" (PDF). ^ "ISO 32000-1:2008" (PDF). ^ "ISO 32000-1:2008 – Document management – Portable document format – Part 1: PDF 1.7". Iso.org. 2008-07-01. Retrieved 2010-02-21. ^ Orion, Egan (2007-12-05). "PDF 1.7 is approved as ISO 32000". The Inquirer. The Inquirer. Archived from the original on December 13, 2007. Retrieved 2007-12-05. ^ Adobe Systems Incorporated (2008), Public Patent License, ISO 32000-1: 2008 – PDF 1.7 (PDF), retrieved 2011-07-06 ^ "Guide for the procurement of standards-based ICT – Elements of Good Practice, Against lock-in: building open ICT systems by making better use of standards in public procurement". European Commission. 2013-06-25. Retrieved 2013-10-20. Example: ISO/IEC 29500, ISO/IEC 26300 and ISO 32000 for document formats reference information that is not accessible by all parties (references to proprietary technology and brand names, incomplete scope or dead web links). ^ ISO/TC 171/SC 2/WG 8 N 603 – Meeting Report (PDF), 2011-06-27, archived from the original (PDF) on 2012-11-26, XFA is not to be ISO standard just yet. The Committee urges Adobe Systems to submit the XFA Specification, XML Forms Architecture (XFA), to ISO for standardization The Committee is concerned about the stability of the XFA specification Part 2 will reference XFA 3.1 ^ "Embedding and publishing interactive, 3-dimensional, scientificfigures in Portable Document Format (PDF) files". Retrieved 2013-10-20. the implementation of the U3D standard was not complete and proprietary extensions were used. ^ Leonard Rosenthol, Adobe Systems (2012). "PDF and Standards" (PDF). Archived from the original (PDF) on 2013-09-02. Retrieved 2013-10-20. ^ Duff Johnson (2010-06-10), Is PDF an open standard? - Adobe Reader is the de facto Standard, not PDF, archived from the original on 2016-04-16, retrieved 2014-01-19 ^ "The worldwide standard for electronic documents is evolving". www.iso.org. Retrieved 2018-06-29. ^ "ISO 32000-2 – Document management -- Portable document format -- Part 2: PDF 2.0". www.iso.org. Retrieved 2017-07-28. ^ Pravetz, Jim. "In Defense of COS, or Why I Love JSON and Hate XML". jimpravetz.com. ^ Adobe Systems, PDF Reference, p. 51. ^ Adobe Systems, PDF Reference, pp. 39–40. ^ "Adobe Developer Connection: PDF Reference and Adobe Extensions to the PDF Specification". Adobe Systems. Retrieved 2010-12-13. ^ Howard, Jacci. "Desktop Publishing: Base 14 Fonts – Definition". About.com Tech. Archived from the original on June 14, 2016. ^ The PDF Font Aquarium ^ "PDF Reference Sixth Edition, version 1.7, table 5.11" (PDF). ^ PDF Blend Modes Addendum ^ a b c d e Adobe Systems Incorporated (2008-07-01), Document Management – Portable Document Format – Part 1: PDF 1.7, First Edition (PDF), retrieved 2010-02-19 ^ "Gnu PDF – PDF Knowledge – Forms Data Format". Archived from the original on 2013-01-01. Retrieved 2010-02-19. ^ "About PDF forms". Archived from the original on 2011-04-29. Retrieved 2010-02-19. ^ Demling, Peter (July 1, 2008). "Convert XFA Form to AcroForm?". Retrieved 2010-02-19. ^ "Migrating from Adobe Acrobat forms to XML forms". Archived from the original on 2010-10-06. Retrieved 2010-02-22. ^ Adobe Systems Incorporated (2007-10-15). "Using Acrobat forms and form data on the web". Retrieved 2010-02-19. ^ a b XML Forms Data Format Specification, version 2 (PDF), September 2007, archived from the original (PDF) on 2018-07-30, retrieved 2010-02-19 ^ FDF Data Exchange Specification (PDF), 2007-02-08, retrieved 2010-02-19 ^ IANA Application Media Types – vnd.fdf, retrieved 2010-02-22 ^ IANA Application Media Types – Vendor Tree – vnd.adobe.xfdf, retrieved 2010-02-22 ^ ISO/CD 19444-1 – Document management – XML Forms Data Format – Part 1: Use of ISO 32000-2 (XFDF 3.0), retrieved 2017-05-28 ^ "ISO 19444-1:2019(en)". www.iso.org. Retrieved 3 December 2020. ^ Duff Johnson, April 22, 2004 What is Tagged PDF? ^ "Is PDF accessible?". washington.edu. ^ "FreeMyPDF.com – Removes passwords from viewable PDFs". freemypdf.com. ^ Jeremy Kirk (December 5, 2008). "Adobe admits new PDF password protection is weaker". Macworld. ^ Bryan Guignard. "How secure is PDF" (PDF). ^ "PDF Security Overview: Strengths and Weaknesses" (PDF). ^ Attacks on PDF Signatures ^ Adobe PDF reference version 1.7, section 10.2 ^ "Getting Familiar with Adobe Reader > Understanding Preferences". Retrieved 2009-04-22. ^ "Developer Resources". adobe.com. Archived from the original on 2016-02-27. ^ "PDF Accessibility". WebAIM. Retrieved 2010-04-24. ^ Joe Clark (2005-08-22). "Facts and Opinions About PDF Accessibility". Retrieved 2010-04-24. ^ "Accessibility and PDF documents". Web Accessibility Center. Archived from the original on 2010-04-27. Retrieved 2010-04-24. ^ "PDF Accessibility Standards v1.2". Retrieved 2010-04-24. ^ PDF Accessibility (PDF), California State University, archived from the original (PDF) on 2010-05-27, retrieved 2010-04-24 ^ LibreOffice Help – Export as PDF, retrieved 2012-09-22 ^ Exporting PDF/A for long-term archiving, 2008-01-11 ^ Biersdorfer, J.D. (2009-04-10). "Tip of the Week: Adobe Reader's 'Read Aloud' Feature". The New York Times. Retrieved 2010-04-24. ^ Accessing PDF documents with assistive technology: A screen reader user's guide (PDF), Adobe, retrieved 2010-04-24 ^ Adobe Forums, Announcement: PDF Attachment Virus "Peachy", 15 August 2001. ^ "Security bulletins and advisories". Adobe. Retrieved 2010-02-21. ^ Steve Gibson – SecurityNow Podcast ^ "Malicious PDFs Execute Code Without a Vulnerability". PCMAG. Archived from the original on 4 April 2010. ^ "3D supported formats". Adobe. 2009-07-14. Archived from the original on 2010-02-12. Retrieved 2010-02-21. ^ "Supported file formats in Acrobat and Reader". helpx.adobe.com. Retrieved 2020-03-22. ^ "JavaScript for Acrobat 3D | Adobe Acrobat Developer Center". www.adobe.com. Retrieved 2020-03-22. ^ Pathak, Khamosh (October 7, 2017). "How to Create a PDF from Web Page on iPhone and iPad in iOS 11". iPhone Hacks. Retrieved February 2, 2018. ^ "Description of 2007 Microsoft Office Suite Service Pack 2 (SP2)". Microsoft. Archived from the original on 29 April 2009. Retrieved 2009-05-09. ^ "Adobe PDF Print Engine". adobe.com. ^ "Jaws® 3.0 PDF and PostScript RIP SDK". globalgraphics.com. ^ "Supported File Formats". PDFTron Systems. ^ "Harlequin MultiRIP". Archived from the original on 2014-02-09. Retrieved 2014-03-02. ^ Press-Ready PDF Files "For anyone interested in having their graphic project commercially printed directly from digital files or PDFs." (last checked on 2009-02-10). ^ "PDF as Standard Print Job Format". The Linux Foundation. Linux Foundation. Retrieved 21 June 2016. ^ On 2014-04-02, a note dated 2009-02-10 referred to Current FSF High Priority Free Software Projects as a source. Content of the latter page, however, changes over time. ^ GNUpdf contributors (2007-11-28). "Goals and Motivations". gnupdf.org. GNUpdf. Retrieved 2014-04-02.CS1 maint: uses authors parameter (link) ^ Lee, Matt (2011-10-06). "GNU PDF project leaves FSF High Priority Projects list; mission complete!". fsf.org. Free Software Foundation. Retrieved 2014-04-02. ^ Poppler homepage "Poppler is a PDF rendering library based on the xpdf-3.0 code base." (last checked on 2009-02-10) ^ Xpdf license "Xpdf is licensed under the GNU General Public License (GPL), version 2 or 3." (last checked on 2012-09-23). ^ The Apache PDFBox project . Retrieved 2009-09-19. Further reading[edit] Hardy, M. R. B.; Brailsford, D. F. (2002). "Mapping and displaying structural transformations between XML and PDF". Proceedings of the 2002 ACM symposium on Document engineering – DocEng '02 (PDF). Proceedings of the 2002 ACM symposium on Document engineering. pp. 95–102. doi:10.1145/585058.585077. ISBN 1-58113-594-7. Standards PDF 2.0 "ISO 32000-2:2017(en), Document management — Portable document format — Part 2: PDF 2.0". www.iso.org. Retrieved 2019-01-31. PDF 1.7 and errata to 1.7 PDF 1.6 ( ISBN 0-321-30474-8) and errata to 1.6 PDF 1.5 and errata to 1.5 PDF 1.4 ( ISBN 0-201-75839-3) and errata to 1.4 PDF 1.3 ( ISBN 0-201-61588-6) and errata to 1.3 External links[edit] Wikimedia Commons has media related to Portable Document Format. PDF Association – The PDF Association is the industry association for software developers producing or processing PDF files. Adobe PDF 101: Summary of PDF Adobe: PostScript vs. PDF – Official introductory comparison of PS, EPS vs. PDF. PDF Standards....transitioning the PDF specification from a de facto standard to a de jure standard at the Wayback Machine (archived April 24, 2011) – Information about PDF/E and PDF/UA specification for accessible documents file format (archived by The Wayback Machine) PDF/A-1 ISO standard published by the International Organization for Standardization (with corrigenda) PDF Reference and Adobe Extensions to the PDF Specification Portable Document Format: An Introduction for Programmers – Introduction to PDF vs. PostScript and PDF internals (up to v1.3) The Camelot Paper – the paper in which John Warnock outlined the project that created PDF Everything you wanted to know about PDF but was afraid to ask – recording of a talk by Leonard Rosenthol (45 mins) (Adobe Systems) at TUG 2007 v t e Graphics file formats Raster ANI ANIM APNG ART BMP BPG BSAVE CAL CIN CPC CPT DDS DPX ECW EXR FITS FLIC FLIF FPX GIF HDRi HEVC ICER ICNS ICO / CUR ICS ILBM JBIG JBIG2 JNG JPEG JPEG-LS JPEG 2000 JPEG XR JPEG XT JPEG-HDR JPEG XL KRA MNG MIFF NRRD PAM PBM / PGM / PPM / PNM PCX PGF PICtor PNG PSD / PSB PSP QTVR RAS RGBE Logluv TIFF SGI TGA TIFF TIFF/EP TIFF/IT UFO / UFP WBMP WebP XBM XCF XPM XWD Raw CIFF DNG Vector AI CDR CGM DXF EVA EMF EMF+ Gerber HVIF IGES PGML SVG VML WMF Xar Compound CDF DjVu EPS PDF PICT PS SWF XAML Metadata Exchangeable image file format (Exif) International Press Telecommunications Council § Photo metadata Extensible Metadata Platform (XMP) GIF § Metadata Steganography Category Comparison v t e Multi-purpose office document file formats Editable document formats Compound Document Format Microsoft Office XML formats MO:DCA Office Open XML Open Document Architecture OpenDoc OpenDocument OpenOffice.org XML Revisable-Form Text Rich Text Format Uniform Office Format Word document Fixed document formats DjVu Envoy Open XML Paper Specification Portable Document Format Related topics Character encoding ASCII Unicode TeX v t e ISO standards by standard number List of ISO standards / ISO romanizations / IEC standards 1–9999 1 2 3 4 5 6 7 9 16 17 31 -0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 128 216 217 226 228 233 259 269 302 306 361 428 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10005 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10303 -11 -21 -22 -28 -238 10383 10487 10585 10589 10646 10664 10746 10861 10957 10962 10967 11073 11170 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 (-2) 11941 11941 (TR) 11992 12006 12182 12207 12234-2 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14644 14649 14651 14698 14750 14764 14882 14971 15022 15189 15288 15291 15292 15398 15408 15444 -3 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 16023 16262 16355-1 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17799 18000 18004 18014 18245 18629 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000+ 20000 20022 20121 20400 21000 21047 21500 21827 22000 22300 22395 23270 23271 23360 24517 24613 24617 24707 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30170 31000 32000 37001 38500 40500 42010 45001 50001 55000 80000 -1 Category v t e E-books Formats ePub FictionBook CBR/CBZ Kindle File Format Mobipocket PDF Plain text IBA Reading Devices Amazon Kindle Barnes & Noble Nook Bookeen Elonex ebook enTourage eDGe Hanlin eReader iPad iriver Story Kobo eReader Onyx Boox Plastic Logic Reader PocketBook eReader Rocket eBook SoftBook Smartphones Tablets Tolino Software Adobe Acrobat Adobe Digital Editions Aldiko Apple Books (iBooks) Aquafadas Blio Bluefire Reader Calibre FBReader Foliate Google Play Books Kindle app Kitabu Kobo Lector Lektz Lucifox Microsoft Reader MuPDF Okular OverDrive Media Console Snapplify STDU Viewer Sumatra PDF Editing ABBYY FineReader AbiWord Adobe InDesign Adobe RoboHelp Aquafadas Atlantis Word Processor Booktype Calibre Calligra Author eXeLearning Help & Manual HelpNDoc iBooks Author iStudio Publisher LaTeX LibreOffice MadCap Flare Oxygen XML Editor PagePlus Pages QuarkXPress Scrivener Sigil Writer2epub Vendors Commercial Apple Books Store Amazon Kindle Store Baen Free Library Barnes & Noble Booktrack Feedbooks Google Play Jarir.com Kobo Bookstore Sony Reader Store Smashwords Noncommercial Faded Page HathiTrust Internet Archive Project Gutenberg Australia Canada Wikisource Related topics Academic journal publishing reform Braille e-book Comparison of e-book readers Comparison of iOS e-book reader software Comparison of Android e-book reader software E-book lending Electronic publishing iBooks Author Conference International Digital Publishing Forum Kindle single OPDS Reflowable document Self-publishing Semantic publishing Retrieved from "https://en.wikipedia.org/w/index.php?title=PDF&oldid=992178198" Categories: Computer-related introductions in 1993 Adobe Inc. Digital press Electronic documents Graphics file formats ISO standards Office document file formats Open formats Page description languages Vector graphics PDF software Hidden categories: CS1 maint: uses authors parameter Articles with short description Short description matches Wikidata Articles containing potentially dated statements from 2014 All articles containing potentially dated statements Commons category link is on Wikidata Webarchive template wayback links Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons Languages Afrikaans Alemannisch العربية Asturianu Azərbaycanca বাংলা Bân-lâm-gú Беларуская Беларуская (тарашкевіца)‎ Български Boarisch Bosanski Català Чӑвашла Čeština Cymraeg Dansk Deutsch Eesti Ελληνικά Español Esperanto Euskara فارسی Føroyskt Français Galego ગુજરાતી 한국어 Հայերեն हिन्दी Hrvatski Ido Bahasa Indonesia Íslenska Italiano עברית Jawa ಕನ್ನಡ Қазақша Kinyarwanda Kurdî Кыргызча Latina Latviešu Lëtzebuergesch Lietuvių Lumbaart Magyar Македонски Malagasy മലയാളം मराठी Bahasa Melayu Nederlands 日本語 Napulitano Norsk bokmål Norsk nynorsk Occitan ਪੰਜਾਬੀ Polski Português Română Русиньскый Русский Simple English Slovenčina Slovenščina Српски / srpski Srpskohrvatski / српскохрватски Suomi Svenska தமிழ் Tarandíne ไทย Türkçe Українська اردو Vèneto Tiếng Việt 吴语 ייִדיש Yorùbá 粵語 中文 Edit links This page was last edited on 3 December 2020, at 22:30 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement