m4 (computer language) - Wikipedia m4 (computer language) From Wikipedia, the free encyclopedia Jump to navigation Jump to search m4 Paradigm macro Designed by Brian Kernighan, Dennis Ritchie First appeared 1977; 43 years ago (1977) Major implementations GNU m4 m4 is a general-purpose macro processor included in most Unix-like operating systems, and is a component of the POSIX standard. The language was designed by Brian Kernighan and Dennis Ritchie for the original versions of UNIX. It is an extension of an earlier macro processor m3, written by Ritchie for an unknown AP-3 minicomputer.[1] The macro preprocessor operates as a text-replacement tool. It is employed to re-use text templates, typically in computer programming applications, but also in text editing and text-processing applications. Most users require m4 as a dependency of GNU autoconf. Contents 1 History 2 Features 3 Example 4 Implementations 5 See also 6 References 7 External links History[edit] Macro processors became popular when programmers commonly used assembly language. In those early days of programming, programmers noted that much of their programs consisted of repeated text, and they invented simple means for reusing this text. Programmers soon discovered the advantages not only of reusing entire blocks of text, but also of substituting different values for similar parameters. This defined the usage range of macro processors. In 1960s, an early general-purpose macro processor M6 was in use at AT&T Bell Laboratories, which was developed by Douglas McIlroy, Robert Morris and Andrew Hall.[2] Kernighan and Ritchie developed m4 in 1977, basing it on the ideas of Christopher Strachey. The distinguishing features of this style of macro preprocessing included: free-form syntax (not line-based like a typical macro preprocessor designed for assembly-language processing) the high degree of re-expansion (a macro's arguments get expanded twice: once during scanning and once at interpretation time) The implementation of Rational Fortran used m4 as its macro engine from the beginning; and most Unix variants ship with it. As of 2020[update] many applications continue to use m4 as part of the GNU Project's autoconf. It also appears in the configuration process of sendmail (a widespread mail transfer agent) and for generating footprints in the gEDA toolsuite. The SELinux Reference Policy relies heavily on the m4 macro processor. m4 has many uses in code generation, but (as with any macro processor) problems can be hard to debug.[3] Features[edit] m4 offers these facilities: a free-form syntax, rather than line based syntax a high degree of macro expansion (arguments get expanded during scan and again during interpretation) text replacement parameter substitution file inclusion string manipulation conditional evaluation arithmetic expressions system interface programmer diagnostics programming language independent human language independent provides programming language capabilities Unlike most earlier macro processors, m4 does not target any particular computer or human language; historically, however, its development originated for supporting the Ratfor dialect of Fortran. Unlike some other macro processors, m4 is Turing-complete as well as a practical programming language. Unquoted identifiers which match defined macros are replaced with their definitions. Placing identifiers in quotes suppresses expansion until possibly later, such as when a quoted string is expanded as part of macro replacement. Unlike most languages, strings in m4 are quoted using the backtick (`) as the starting delimiter, and apostrophe (') as the ending delimiter. Separate starting and ending delimiters allows the arbitrary nesting of quotation marks in strings to be used, allowing a fine degree of control of how and when macro expansion takes place in different parts of a string. Example[edit] The following fragment gives a simple example that could form part of a library for generating HTML code. It defines a commented macro to number sections automatically: divert(-1)m4 has multiple output queues that can be manipulated with the`divert' macro. Valid queues range from 0 to 10, inclusive, withthe default queue being 0. As an extension, GNU m4 supports morediversions, limited only by integer type size.Calling the `divert' macro with an invalid queue causes text to bediscarded until another call.  Note that even while output is beingdiscarded, quotes around `divert' and other macros are needed toprevent expansion.# Macros aren't expanded within comments, meaning that keywords such# as divert and other built-ins may be used without consequence.# HTML utility macro:define(`H2_COUNT', 0)# The H2_COUNT macro is redefined every time the H2 macro is used:define(`H2',	`define(`H2_COUNT', incr(H2_COUNT))<h2>H2_COUNT. $1</h2>')divert(1)dnldnldnl The dnl macro causes m4 to discard the rest of the line, thusdnl preventing unwanted blank lines from appearing in the output.dnlH2(First Section)H2(Second Section)H2(Conclusion)dnldivert(0)dnldnl<HTML>undivert(1)dnl One of the queues is being pushed to output.</HTML> Processing this code with m4 generates the following text: <HTML><h2>1. First Section</h2><h2>2. Second Section</h2><h2>3. Conclusion</h2></HTML> Implementations[edit] FreeBSD, NetBSD, and OpenBSD provide independent implementations of the m4 language. Furthermore, the Heirloom Project Development Tools includes a free version of the m4 language, derived from OpenSolaris. M4 has been included in the Inferno operating system. This implementation is more closely related to the original m4 developed by Kernighan and Ritchie in Version 7 Unix than its more sophisticated relatives in UNIX System V and POSIX.[4] GNU m4 is an implementation of m4 for the GNU Project.[5][6] It is designed to avoid many kinds of arbitrary limits found in traditional m4 implementations, such as maximum line lengths, maximum size of a macro and number of macros. Removing such arbitrary limits is one of the stated goals of the GNU Project.[7] The GNU Autoconf package makes extensive use of the features of GNU m4. GNU m4 is currently maintained by Gary V. Vaughan and Eric Blake. Released under the terms of the GNU General Public License, GNU m4 is free software. See also[edit] C preprocessor Macro (computer science) Make Template processor Web template system References[edit] ^ Brian W. Kernighan and Dennis M. Ritchie. The m4 macro processor. Technical report, Bell Laboratories, Murray Hill, New Jersey, USA, 1977. pdf ^ Cole, A. J. (1981). Macro Processors (2nd, revised ed.). CUP Archive. p. 254. ^ Kenneth J. Turner. Exploiting the m4 macro language. Technical Report CSM-126, Department of Computing Science and Mathematics, University of Stirling, Scotland, September 1994. pdf ^ m4(1) – Inferno General commands Manual ^ GNU m4 web site "GNU M4", accessed January 25, 2020. ^ GNU m4 manual, online and for download in HTML, PDF, and other forms. "GNU M4 — GNU macro processor", accessed January 25, 2020. ^ "GNU Coding Standards: Writing Robust Programs".quote: "Avoid arbitrary limits on the length or number of any data structure". External links[edit] The Wikibook Guide to Unix has a page on the topic of: Commands GNU m4 website GNU m4 manual m4 tutorial Macro Magic: m4, Part One and Part Two v t e Unix command-line interface programs and shell builtins File system cat chmod chown chgrp cksum cmp cp dd du df file fuser ln ls mkdir mv pax pwd rm rmdir split tee touch type umask Processes at bg crontab fg kill nice ps time User environment env exit logname mesg talk tput uname who write Text processing awk basename comm csplit cut diff dirname ed ex fold head iconv join m4 more nl paste patch printf sed sort strings tail tr uniq vi wc xargs Shell builtins alias cd echo test unset wait Searching find grep Documentation man Software development ar ctags lex make nm strip yacc Miscellaneous bc cal expr lp od sleep true and false Categories Standard Unix programs Unix SUS2008 utilities List Retrieved from "https://en.wikipedia.org/w/index.php?title=M4_(computer_language)&oldid=979542448" Categories: Macro programming languages Unix programming tools Unix SUS2008 utilities Inferno (operating system) commands Hidden categories: Articles containing potentially dated statements from 2020 All articles containing potentially dated statements Use mdy dates from October 2018 Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages العربية Čeština Deutsch Ελληνικά Español Français 한국어 Interlingua 日本語 Polski Русский Suomi Українська 中文 Edit links This page was last edited on 21 September 2020, at 10:07 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement