SETL - Wikipedia SETL From Wikipedia, the free encyclopedia Jump to navigation Jump to search Programming language "Setl" redirects here. For the indigenous location in Canada, see Bridge River Rapids. This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. Find sources: "SETL" – news · newspapers · books · scholar · JSTOR (April 2017) (Learn how and when to remove this template message) SETL Paradigm multi-paradigm: imperative, procedural, structured, object-oriented Designed by (Jack) Jacob T. Schwartz Developer Courant Institute of Mathematical Sciences First appeared 1969; 51 years ago (1969) Stable release 1.1 / January 7, 2005; 15 years ago (2005-01-07) Typing discipline Dynamic Website setl.org Influenced by ALGOL 60 Influenced SETL2, ISETL, SETLX, ABC SETL (SET Language) is a very high-level programming language based on the mathematical theory of sets. It was originally developed by (Jack) Jacob T. Schwartz at the New York University (NYU) Courant Institute of Mathematical Sciences in the late 1960s. Contents 1 Design 2 Examples 3 Uses 4 Language variants 5 References 6 Further reading 7 External links Design[edit] SETL provides two basic aggregate data types: unordered sets, and sequences (the latter also called tuples). The elements of sets and tuples can be of any arbitrary type, including sets and tuples themselves. Maps are provided as sets of pairs (i.e., tuples of length 2) and can have arbitrary domain and range types. Primitive operations in SETL include set membership, union, intersection, and power set construction, among others. SETL provides quantified boolean expressions constructed using the universal and existential quantifiers of first-order predicate logic. SETL provides several iterators to produce a variety of loops over aggregate data structures. Examples[edit] Print all prime numbers from 2 to N:    print([n in [2..N] | forall m in {2..n - 1} | n mod m > 0]); The notation is similar to list comprehension. A factorial procedure definition: procedure factorial(n); -- calculates the factorial n!  return if n = 1 then 1 else n * factorial(n - 1) end if;end factorial; A more conventional SETL expression for factorial (n > 0): */[1..n] Uses[edit] In the 1970s, SETL was ported to the BESM-6, ES EVM and other Russian computer systems. SETL was used for an early implementation of the programming language Ada, named the NYU Ada/ED translator.[1] This later became the first validated Ada implementation, certified on April 11, 1983.[2] According to Guido van Rossum, "Python's predecessor, ABC, was inspired by SETL -- Lambert Meertens spent a year with the SETL group at NYU before coming up with the final ABC design!"[3] Language variants[edit] SET Language 2 (SETL2), a backward incompatible descendant of SETL, was created by Kirk Snyder of the Courant Institute of Mathematical Sciences at New York University in the late 1980s. Like its predecessor, it is based on the theory and notation of finite sets, but has also been influenced in syntax and style by the Ada language. Interactive SET Language (ISETL) is a variant of SETL used in discrete mathematics. References[edit] ^ Dewar, Robert B. K.; Fisher Jr., Gerald A.; Schonberg, Edmond; Froelich, Robert; Bryant, Stephen; Goss, Clinton F.; Burke, Michael (November 1980). "The NYU Ada Translator and Interpreter". ACM SIGPLAN Notices - Proceedings of the ACM-SIGPLAN Symposium on the Ada Programming Language. 15 (11): 194–201. doi:10.1145/948632.948659. ISBN 0-89791-030-3. ^ SofTech Inc., Waltham, MA (1983-04-11). "Ada Compiler Validation Summary Report: NYU Ada/ED, Version 19.7 V-001". Retrieved 2010-12-16.CS1 maint: multiple names: authors list (link) ^ Python-Dev: SETL (was: Lukewarm about range literals) Further reading[edit] Schwartz, Jacob T., "Set Theory as a Language for Program Specification and Programming". Courant Institute of Mathematical Sciences, New York University, 1970. Schwartz, Jacob T., "On Programming, An Interim Report on the SETL Project", Computer Science Department, Courant Institute of Mathematical Sciences, New York University (1973). Schwartz, Jacob T., Dewar, R.B.K., Dubinsky, E., and Schonberg, E., Programming With Sets: An Introduction to SETL, 1986. ISBN 0-387-96399-5. External links[edit] Official website Programming on SETL and other things Retrieved from "https://en.wikipedia.org/w/index.php?title=SETL&oldid=894395241" Categories: Academic programming languages Set theoretic programming languages 1969 introductions Hidden categories: CS1 maint: multiple names: authors list Articles with short description Short description matches Wikidata Articles needing additional references from April 2017 All articles needing additional references Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages العربية Deutsch Français Қазақша Português Русский Tiếng Việt 中文 Edit links This page was last edited on 27 April 2019, at 16:37 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement