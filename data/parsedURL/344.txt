Java Platform, Micro Edition - Wikipedia Java Platform, Micro Edition From Wikipedia, the free encyclopedia Jump to navigation Jump to search Java platform editions Java Card Java ME (Micro) Java SE (Standard) Jakarta EE (Enterprise) JavaFX (bundled in JRE from 8 to 10 but separately for JavaFX 1.x, 2.x and 11) PersonalJava (Discontinued) v t e Java Platform, Micro Edition or Java ME is a computing platform for development and deployment of portable code for embedded and mobile devices (micro-controllers, sensors, gateways, mobile phones, personal digital assistants, TV set-top boxes, printers).[1] Java ME was formerly known as Java 2 Platform, Micro Edition or J2ME. The platform uses the object-oriented Java programming language. It is part of the Java software-platform family. Java ME was designed by Sun Microsystems, acquired by Oracle Corporation in 2010; the platform replaced a similar technology, PersonalJava. Originally developed under the Java Community Process as JSR 68, the different flavors of Java ME have evolved in separate JSRs. Oracle provides a reference implementation of the specification, but has tended not to provide free binary implementations of its Java ME runtime environment for mobile devices, rather relying on third parties to provide their own. As of December 22, 2006, the Java ME source code is licensed under the GNU General Public License, and is released under the project name phoneME. As of 2008, all Java ME platforms are currently restricted to JRE 1.3 features and use that version of the class file format (internally known as version 47.0). Should Oracle ever declare a new round of Java ME configuration versions that support the later class file formats and language features, such as those corresponding to JRE 1.5 or 1.6 (notably, generics), it will entail extra work on the part of all platform vendors to update their JREs.[speculation?] Java ME devices implement a profile. The most common of these are the Mobile Information Device Profile aimed at mobile devices, such as cell phones, and the Personal Profile aimed at consumer products and embedded devices like set-top boxes and PDAs. Profiles are subsets of configurations, of which there are currently two: the Connected Limited Device Configuration (CLDC) and the Connected Device Configuration (CDC).[2] There are more than 2.1 billion Java ME enabled mobile phones and PDAs.[3][when?] It is popular in sub-£50 devices such as Nokia's Smart Feature OS. It was also used on the Bada operating system and on Symbian OS along with native software. Users of Windows CE, Windows Mobile, Maemo, MeeGo and Android can download Java ME for their respective environments ("proof-of-concept" for Android).[4][5] Contents 1 Connected Limited Device Configuration 1.1 Mobile Information Device Profile 1.1.1 Information Module Profile 2 Connected Device Configuration 2.1 Foundation Profile 2.2 Personal Basis Profile 3 Implementations 4 JSRs (Java Specification Requests) 4.1 Foundation 4.2 Main extensions 4.3 Future 5 ESR 6 See also 7 References 8 Bibliography 9 External links Connected Limited Device Configuration[edit] Main article: Connected Limited Device Configuration The Connected Limited Device Configuration (CLDC) contains a strict subset of the Java-class libraries, and is the minimum amount needed for a Java virtual machine to operate. CLDC is basically used for classifying myriad devices into a fixed configuration. A configuration provides the most basic set of libraries and virtual-machine features that must be present in each implementation of a J2ME environment. When coupled with one or more profiles, the Connected Limited Device Configuration gives developers a solid Java platform for creating applications for consumer and embedded devices.The configuration is designed for devices with 160KB to 512KB total memory, which has a minimum of 160KB of ROM and 32KB of RAM available for the Java platform. Mobile Information Device Profile[edit] Designed for mobile phones, the Mobile Information Device Profile includes a GUI, and a data storage API, and MIDP 2.0 includes a basic 2D gaming API. Applications written for this profile are called MIDlets. Almost all new cell phones come with a MIDP implementation, and it is now the de facto standard for downloadable cell phone games. However, many cellphones can run only those MIDlets that have been approved by the carrier, especially in North America.[citation needed] JSR 271: Mobile Information Device Profile 3 (Final release on Dec 9, 2009) specified the 3rd generation Mobile Information Device Profile (MIDP3), expanding upon the functionality in all areas as well as improving interoperability across devices. A key design goal of MIDP3 is backward compatibility with MIDP2 content. Information Module Profile[edit] The Information Module Profile (IMP) is a profile for embedded, "headless" devices such as vending machines, industrial embedded applications, security systems, and similar devices with either simple or no display and with some limited network connectivity. Originally introduced by Siemens Mobile and Nokia as JSR-195, IMP 1.0 is a strict subset of MIDP 1.0 except that it doesn't include user interface APIs — in other words, it doesn't include support for the Java package javax.microedition.lcdui. JSR-228, also known as IMP-NG, is IMP's next generation that is based on MIDP 2.0, leveraging MIDP 2.0's new security and networking types and APIs, and other APIs such as PushRegistry and platformRequest(), but again it doesn't include UI APIs, nor the game API. Connected Device Configuration[edit] Main article: Connected Device Configuration The Connected Device Configuration is a subset of Java SE, containing almost all the libraries that are not GUI related. It is richer than CLDC. Foundation Profile[edit] The Foundation Profile is a Java ME Connected Device Configuration (CDC) profile. This profile is intended to be used by devices requiring a complete implementation of the Java virtual machine up to and including the entire Java Platform, Standard Edition API. Typical implementations will use some subset of that API set depending on the additional profiles supported. This specification was developed under the Java Community Process. Personal Basis Profile[edit] The Personal Basis Profile extends the Foundation Profile to include lightweight GUI support in the form of an AWT subset. This is the platform that BD-J is built upon. Implementations[edit] Sun provides a reference implementation of these configurations and profiles for MIDP and CDC. Starting with the JavaME 3.0 SDK, a NetBeans-based IDE will support them in a single IDE. In contrast to the numerous binary implementations of the Java Platform built by Sun for servers and workstations, Sun does not provide any binaries for the platforms of Java ME targets with the exception of an MIDP 1.0 JRE (JVM) for Palm OS.[6] Sun provides no J2ME JRE for the Microsoft Windows Mobile (Pocket PC) based devices, despite an open-letter campaign to Sun to release a rumored internal implementation of PersonalJava known by the code name "Captain America".[7] Third party implementations are widely used by Windows Mobile vendors. Operating systems targeting Java ME have been implemented by DoCoMo in the form of DoJa, and by SavaJe as SavaJe OS. The latter company was purchased by Sun in April 2007 and now forms the basis of Sun's JavaFX Mobile. The open-source Mika VM aims to implement JavaME CDC/FP, but is not certified as such (certified implementations are required to charge royalties, which is impractical for an open-source project). Consequently, devices which use this implementation are not allowed to claim JavaME CDC compatibility. The Linux-based Android operating system uses a proprietary version of Java that is similar in intent, but very different in many ways from Java Me.[8] JSRs (Java Specification Requests)[edit] Foundation[edit] JSR # Name Description 68 J2ME Platform Specification 30 CLDC 1.x 37 MIDP 1.0 118 MIDP 2.x 139 CLDC 1.1 271 MIDP 3.0 Java ME 3.4 and earlier only, Last Specification for Mobile Phones, Java Language features as Java SE 1.3 360 CLDC 8 New in Java ME 8 361 MEEP 8 New in Java ME 8, Language feature as Java SE 8, for Internet of Everything devices Main extensions[edit] JSR # Name Description MSA 75 File Connection and PIM API File system, contacts, calendar, to-do 82 Bluetooth Bluetooth serial port communications and file exchanges (OBEX) 120 Wireless Messaging API (WMA) 135 Mobile Media API (MMAPI) Audio, video, multimedia 172 Web Services API XML parsers and RPC 177 Security and Trust Services API (SATSA) APDU, Java Card RMI (JCRMI), Public Key Infrastructure (PKI) and cryptography 179 Location API GPS coordinates, street addresses, orientation sensors, landmark stores 180 SIP API 184 Mobile 3D Graphics (M3G) High level 3D graphics 185 Java Technology for the Wireless Industry (JTWI) General 205 Wireless Messaging API (WMA) 2.0 Sending and receiving SMS and MMS 211 Content Handler API (CHAPI) 226 Scalable 2D Vector Graphics API for J2ME (M2G) Handling SVG Tiny 228 Information Module Profile – Next Generation (IMP NG) 229 Payment API 234 Advanced Multimedia Supplements (AMMS) MMAPI extensions 238 Mobile Internationalization API Localized resources, locale date and number formatting, locale comparison of strings 239 Java Bindings for the OpenGL ES API 248 Mobile Service Architecture (MSA) 253 Mobile Telephony API 256 Mobile Sensor API Reading values from accelerometers, gyroscopes, compasses, thermometers, barometers, and some more 257 Contactless Communication API 258 Mobile User Interface Customization API 272 Mobile Broadcast Service API for Handheld Terminals 280 XML API for Java ME 281 IMS Services API 287 Scalable 2D Vector Graphics API 2.0 for Java ME 293 Location API 2.0 298 Telematics API for Java ME 300 DRM API for Java ME 325 IMS Communication Enablers Future[edit] JSR # Name Description 297 Mobile 3D Graphics API (M3G) 2.0 ESR[edit] The ESR consortium is devoted to Standards for embedded Java. Especially cost effective Standards.Typical applications domains are industrial control, machine-to-machine, medical, e-metering, home automation, consumer, human-to-machine-interface, ... ESR # Name Description 001 B-ON (Beyond CLDC) B-ON serves as a very robust foundation for implementing embedded Java software. It specifies a reliable initialization phase of the Java device, and 3 kind of objects: immutable, immortal and regular (mortal) objects. 002 MicroUI MicroUI defines an enhanced architecture to enable an open, third-party, application development environment for embedded HMI devices. Such devices typically have some form of display, some input sensors and potentially some sound rendering capabilities. This specification spans a potentially wide set of devices. 011 MWT MWT defines three distinct roles: Widget Designers, Look and Feel Designers, and Application Designers. MWT allows a binary HMI application to run the same on all devices that provide a compliant MWT framework (embedded devices, cellphones, set-top box TV's, PC's, etc...) allowing for true consistency and ubiquity of applications across product lines (ME, SE, EE). 015 ECLASSPATH ECLASSPATH unifies CLDC, CDC, Foundation, SE, and EE execution environments with a set of around 300 classes API. Compiling against CLDC1.1/ECLASSPATH makes binary code portable across all Java execution environments. See also[edit] Computer programming portal Android (operating system) iOS BlackBerry OS Danger Hiptop Embedded Java JavaFX Mobile Mobile development Mobile games Mobile learning Qualcomm Brew Smartphone References[edit] ^ "Java ME Overview". Oracle Corporation. Retrieved February 26, 2017. ^ Java ME Technology ^ About Java ^ phoneME for Windows CE, Windows Mobile and Android (development stopped in 2011-06-15) ^ "App Runner (development stopped in 2010-05-11)". Archived from the original on January 3, 2012. Retrieved August 5, 2012. ^ MIDP for Palm OS 1.0: Developing Java Applications for Palm OS Devices January 2002 ^ CDC and Personal Profile - Open letter to SUN to produce a Personal Java JRE for Pocket PC 2003 ^ Mobile application development: Android compared to J2ME Feb 2013 Notes JSR 232: Mobile Operational Management – an advanced OSGi technology based platform for mobile computing JSR 291: Dynamic Component Support for Java SE – symmetric programming model for Java SE to Java ME JSR 232 Bibliography[edit] Ben Hayun, Roy (March 30, 2009). Java ME on Symbian OS: Inside the Smartphone Model (1st ed.). Wiley. p. 482. ISBN 0-470-74318-2. Knudsen, Jonathan (January 8, 2008). Kicking Butt with MIDP and MSA: Creating Great Mobile Applications (1st ed.). Prentice Hall. p. 432. ISBN 0-321-46342-0. Li, Sing; Knudsen, Jonathan (April 25, 2005). Beginning J2ME: From Novice to Professional (3rd ed.). Apress. p. 480. ISBN 1-59059-479-7. External links[edit] Wikibooks has a book on the topic of: J2ME Programming Sun Developer Network, Java ME Nokia's Developer Hub Java pages Nokia S60 Java Runtime blogs Sony Ericsson Developer World Motorola Developer Network J2ME Authoring Tool LMA Users Network Samsung Mobile Developer's site Sprint Application Developer's Website Performance database of Java ME compatible devices MicroEJ platforms for embedded systems Book - Mobile Phone Programming using Java ME (J2ME) Tutorial Master ng, J2ME v t e Java Platforms Java language JVM Java ME (Micro) Java SE (Standard) Jakarta EE (Enterprise) Java Card Android SDK Oracle technologies Squawk Java Development Kit OpenJDK Java virtual machine JavaFX Maxine VM Platform technologies Applets Servlets MIDlets JSP JSF Web Start (JNLP) Major third-party technologies Blackdown Eclipse GNU Classpath GWT Harmony Hibernate IcedTea Jazelle Spring Struts TopLink WildFly History Java version history Java Community Process Sun Microsystems Free Java implementations Major JVM languages BeanShell Clojure Groovy JRuby Jython Kotlin Processing Rhino Scala Community Conferences JavaOne Devoxx Organizations Apache Software Foundation Java Community Process Oracle Corporation Sun Microsystems, Sun Microsystems Laboratories People James Gosling Arthur van Hoff Urs Hölzle Patrick Naughton Category Computer programming portal v t e Mobile operating systems Mobile OS comparisons Open-source mobile phones / OSes Open Handset Alliance Open Mobile Alliance Mobile app distributions Mobile app development Linux kernel primary Android forks Chrome OS KaiOS (based on Firefox OS) Maemo Leste OpenEmbedded Ångström Openmoko Linux QtMoko SHR OpenEZX postmarketOS PureOS Tizen Ubuntu Touch defunct AliOS Bada Firefox OS B2G OS Maemo MeeGo Mer Sailfish OS Moblin MontaVista MotoMagx postmarketOS UBports WebOS LuneOS XNU iOS iPadOS watchOS tvOS QNX BlackBerry 10 BlackBerry Tablet OS Microsoft Windows Windows XP Tablet PC Ed Windows Mobile Windows Phone 7 8 8.1 Windows RT Windows 10 Mobile Windows 10 Zircon Fuchsia other Binary Runtime Environment for Wireless (BREW) BlackBerry OS EPOC FreeRTOS GEOS Harmony OS LiteOS Magic Cap Nintendo 3DS Nintendo DSi Nintendo Switch Nokia Asha platform PalmDOS Palm OS Sony PlayStation PSP PS Vita S30 S30+ S40 Symbian S60 S80 S90 UIQ Mobile operating systems Mobile applications Telecommunication Retrieved from "https://en.wikipedia.org/w/index.php?title=Java_Platform,_Micro_Edition&oldid=991551358" Categories: Computing platforms Java device platform Java platform Java specification requests Hidden categories: Use mdy dates from October 2020 Articles containing predictions or speculation All articles with vague or ambiguous time Vague or ambiguous time from January 2020 All articles with unsourced statements Articles with unsourced statements from December 2007 Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikibooks Languages العربية Беларуская Беларуская (тарашкевіца)‎ Català Čeština Dansk Deutsch Español فارسی Français 한국어 Հայերեն हिन्दी Italiano עברית ქართული Қазақша Bahasa Melayu Nederlands 日本語 Norsk bokmål Norsk nynorsk Polski Português Русский Simple English Slovenčina Suomi Türkçe Українська Tiếng Việt 中文 Edit links This page was last edited on 30 November 2020, at 17:29 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement