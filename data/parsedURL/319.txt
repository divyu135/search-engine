Intel 8008 - Wikipedia Intel 8008 From Wikipedia, the free encyclopedia Jump to navigation Jump to search Intel 8008 An Intel C8008-1 processor variant with purple ceramic, a gold metal lid, and gold pins. General information Launched mid 1972 Discontinued 1983[1] Common manufacturer(s) Intel Performance Max. CPU clock rate 200 kHz to 800 kHz Data width 8 Bit Address width 14 Bit Architecture and classification Application Computer terminals, calculators, bottling machines, 1970s ASEA industrial robots[2] (IRB 6), simple computers, etc. Min. feature size 10 µm Instruction set 8008 Physical specifications Transistors 3,500 Package(s) 18-pin DIP Socket(s) DIP18 History Successor Intel 8080 The Intel 8008 ("eight-thousand-eight" or "eighty-oh-eight") is an early byte-oriented microprocessor designed and manufactured by Intel and introduced in April 1972. It is an 8-bit CPU with an external 14-bit address bus that could address 16 KB of memory. Originally known as the 1201, the chip was commissioned by Computer Terminal Corporation (CTC) to implement an instruction set of their design for their Datapoint 2200 programmable terminal. As the chip was delayed and did not meet CTC's performance goals, the 2200 ended up using CTC's own TTL-based CPU instead. An agreement permitted Intel to market the chip to other customers after Seiko expressed an interest in using it for a calculator. Contents 1 History 2 Design 2.1 Related processor designs 2.2 Features 3 Example code 4 Designers 5 Second sources 6 See also 7 References 8 External links History[edit] CTC formed in San Antonio in 1968 under the direction of Austin O. "Gus" Roche and Phil Ray, both NASA engineers. Roche, in particular, was primarily interested in producing a desktop computer. However, given the immaturity of the market, the company's business plan mentioned only a Teletype Model 33 ASR replacement, which shipped as the Datapoint 3300. The case was deliberately designed to fit in the same space as an IBM Selectric typewriter and used a video screen shaped to have the same aspect ratio as an IBM punched card.[3] Although commercially successful, the 3300 had ongoing heat problems due to the amount of circuitry packed into such a small space. In order to address the heating and other issues, a re-design started that featured the CPU part of the internal circuitry re-implemented on a single chip. Looking for a company able to produce their chip design, Roche turned to Intel, then primarily a vendor of memory chips.[3] Roche met with Bob Noyce, who expressed concern with the concept; John Frassanito recalls that "Noyce said it was an intriguing idea, and that Intel could do it, but it would be a dumb move. He said that if you have a computer chip, you can only sell one chip per computer, while with memory, you can sell hundreds of chips per computer."[3] Another major concern was that Intel's existing customer base purchased their memory chips for use with their own processor designs; if Intel introduced their own processor, they might be seen as a competitor, and their customers might look elsewhere for memory. Nevertheless, Noyce agreed to a $50,000 development contract in early 1970. Texas Instruments (TI) was also brought in as a second supplier. TI was able to make samples of the 1201 based on Intel drawings,[citation needed] but these proved to be buggy and were rejected. Intel's own versions were delayed. CTC decided to re-implement the new version of the terminal using discrete TTL instead of waiting for a single-chip CPU. The new system was released as the Datapoint 2200 in the spring 1970, with their first sale to General Mills on May 25, 1970.[3] CTC paused development of the 1201 after the 2200 was released, as it was no longer needed. Six months later, Seiko approached Intel, expressing an interest in using the 1201 in a scientific calculator, likely after seeing the success of the simpler Intel 4004 used by Busicom in their business calculators. A small re-design followed, under the leadership of Federico Faggin, the designer of the 4004, now project leader of the 1201, expanding from a 16-pin to 18-pin design, and the new 1201 was delivered to CTC in late 1971.[3] By that point, CTC had once again moved on, this time to the Datapoint 2200 II, which was faster. The 1201 was no longer powerful enough for the new model. CTC voted to end their involvement with the 1201, leaving the design's intellectual property to Intel instead of paying the $50,000 contract. Intel renamed it the 8008 and put it in their catalog in April 1972 priced at $120. Intel's initial worries about their existing customer base leaving them proved unfounded, and the 8008 went on to be a commercially successful design. This was followed by the Intel 8080, and then the hugely successful Intel x86 family.[3] One of the first teams to build a complete system around the 8008 was Bill Pentz' team at California State University, Sacramento. The Sac State 8008 was possibly the first true microcomputer, with a disk operating system built with IBM Basic assembly language in PROM, all driving a color display, hard drive, keyboard, modem, audio/paper tape reader and printer.[4] The project started in the spring of 1972, and with key help from Tektronix the system was fully functional a year later. Bill assisted Intel with the MCS-8 kit and provided key input to the Intel 8080 instruction set, which helped make it useful for the industry and hobbyists. In the UK, a team at S. E. Laboratories Engineering (EMI) led by Tom Spink in 1972 built a microcomputer based on a pre-release sample of the 8008. Joe Hardman extended the chip with an external stack. This, among other things, gave it power-fail save and recovery. Joe also developed a direct screen printer. The operating system was written using a meta-assembler developed by L. Crawford and J. Parnell for a Digital Equipment Corporation PDP-11.[5] The operating system was burnt into a PROM. It was interrupt-driven, queued, and based on a fixed page size for programs and data. An operational prototype was prepared for management, who decided not to continue with the project. The 8008 was the CPU for the very first commercial non-calculator personal computers (excluding the Datapoint 2200 itself): the US SCELBI kit and the pre-built French Micral N and Canadian MCM/70. It was also the controlling microprocessor for the first several models in Hewlett-Packard's 2640 family of computer terminals. Intel offered an instruction set simulator for the 8008 named INTERP/8. It was written in FORTRAN. Design[edit] i8008 microarchitecture Intel 8008 registers 13 12 11 10 09 08 07 06 05 04 03 02 01 00 (bit position) Main registers A Accumulator B B register C C register D D register E E register H H register (indirect) L L register (indirect) Program counter PC Program Counter Push-down address call stack AS Call level 1 AS Call level 2 AS Call level 3 AS Call level 4 AS Call level 5 AS Call level 6 AS Call level 7 Status register C P Z S Flags The 8008 was implemented in 10 μm silicon-gate enhancement-mode PMOS logic. Initial versions could work at clock frequencies up to 0.5 MHz. This was later increased in the 8008-1 to a specified maximum of 0.8 MHz. Instructions took between 5 and 11 T-states, where each T-state was 2 clock cycles.[6]Register–register loads and ALU operations took 5T (20 μs at 0.5 MHz), register–memory 8T (32 μs), while calls and jumps (when taken) took 11 T-states (44 μs).[7]The 8008 was a little slower in terms of instructions per second (36,000 to 80,000 at 0.8 MHz) than the 4-bit Intel 4004 and Intel 4040.[8] The fact that the 8008 processed data 8 bits at a time and could access significantly more RAM still gave it a significant speed advantage in most applications. The 8008 had 3,500 transistors.[9][10][11] The chip (limited by its 18-pin DIP packaging) had a single 8-bit bus and required a significant amount of external support logic. For example, the 14-bit address, which could access "16 K × 8 bits of memory", needed to be latched by some of this logic into an external memory address register (MAR). The 8008 could access 8 input ports and 24 output ports.[6] For controller and CRT terminal use, this was an acceptable design, but it was rather cumbersome to use for most other tasks, at least compared to the next generations of microprocessors. A few early computer designs were based on it, but most would use the later and greatly improved Intel 8080 instead.[citation needed] Related processor designs[edit] The subsequent 40-pin NMOS Intel 8080 expanded upon the 8008 registers and instruction set and implemented a more efficient external bus interface (using the 22 additional pins). Despite a close architectural relationship, the 8080 was not made binary compatible with the 8008, so an 8008 program would not run on an 8080. However, as two different assembly syntaxes were used by Intel at the time, the 8080 could be used in an 8008 assembly-language backward-compatible fashion.[12] The Intel 8085 was an electrically modernized version of the 8080 that used depletion-mode transistors and also added two new instructions.[13] The Intel 8086, the original x86 processor, was a non-strict extension of the 8080, so it loosely resembled the original Datapoint 2200 design as well. Almost every Datapoint 2200 and 8008 instruction has an equivalent not only in the instruction set of the 8080, 8085, and Z80, but also in the instruction set of modern x86 processors (although the instruction encodings are different).[14] Features[edit] The 8008 architecture includes the following features:[citation needed] Seven 8-bit "scratchpad" registers: The main accumulator (A) and six other registers (B, C, D, E, H, and L). 14-bit program counter (PC). Seven-level push-down address call stack. Eight registers are actually used, with the top-most register being the PC. Four condition code status flags: carry (C), even parity (P), zero (Z), and sign (S). Indirect memory access using the H and L registers (HL) as a 14-bit data pointer (the upper two bits are ignored). Example code[edit] The following 8008 assembly source code is for a subroutine named MEMCPY that copies a block of data bytes of a given size from one location to another.                                                                                                                                                                            001700  000        001701  000        001702  000        001703  000        001704  000        001705  000                                              002000  066 304    002002  056 003    002004  327        002005  060        002006  317        002007  302        002010  261        002011  053        002012  302        002013  024 001    002015  320        002016  301        002017  034 000    002021  310        002022  066 300    002024  056 003    002026  347        002027  060        002030  337        002031  302        002032  206        002033  360        002034  301        002035  215        002036  350        002037  307        002040  066 302    002042  056 003    002044  347        002045  060        002046  337        002047  364        002050  353        002051  330        002052  302        002053  206        002054  360        002055  301        002056  215        002057  350        002060  373        002061  104 007 004002064             ; MEMCPY --; Copy a block of memory from one location to another.;; Entry parameters;       SRC: 14-bit address of source data block;       DST: 14-bit address of target data block;       CNT: 14-bit count of bytes to copy             ORG     1700Q       ;Data at 001700qSRC         DFB     0           ;SRC, low byte            DFB     0           ;     high byteDST         DFB     0           ;DST, low byte            DFB     0           ;     high byteCNT         DFB     0           ;CNT, low byte            DFB     0           ;     high byte             ORG     2000Q       ;Code at 002000qMEMCPY      LLI     CNT+0       ;HL = addr(CNT)            LHI     CNT+1            LCM                 ;BC = CNT            INL            LBMLOOP        LAC                 ;If BC = 0,            ORB            RTZ                 ;ReturnDECCNT      LAC                 ;BC = BC - 1            SUI     1            LCA            LAB            SBI     0            LBAGETSRC      LLI     SRC+0       ;HL = addr(SRC)            LHI     SRC+1            LEM                 ;DE = SRC            INL            LDM            LAC                 ;HL = DE + BC            ADE            LLA            LAB            ACD            LHA            LAM                 ;Load A from (HL)GETDST      LLI     DST+0       ;HL = addr(DST)            LHI     DST+1            LEM                 ;DE = DST            INL            LDM            LLE                 ;HL = DE            LHD            LDA                 ;D = A            LAC                 ;HL = HL + BC            ADL            LLA            LAB            ACH            LHA            LMD                 ;Store D to (HL)            JMP     LOOP        ;Repeat the loop            END In the code above, all values are given in octal. Locations SRC, DST, and CNT are 16-bit parameters for the subroutine named MEMCPY. In actuality, only 14 bits of the values are used, since the CPU has only a 14-bit addressable memory space. The values are stored in little-endian format, although this is an arbitrary choice, since the CPU is incapable of reading or writing more than a single byte into memory at a time. Since there is no instruction to load a register directly from a given memory address, the HL register pair must first be loaded with the address, and the target register can then be loaded from the M operand, which is an indirect load from the memory location in the HL register pair. The BC register pair is loaded with the CNT parameter value and decremented at the end of the loop until it becomes zero. Note that most of the instructions used occupy a single 8-bit opcode. Designers[edit] CTC (Instruction set and architecture): Victor Poor and Harry Pyle. Intel (Implementation in silicon): Ted Hoff, Stan Mazor and Larry Potter (IBM Chief Scientist) proposed a single-chip implementation of the CTC architecture, using RAM-register memory rather than shift-register memory, and also added a few instructions and interrupt facility. The 8008 (originally called 1201) chip design started before the 4004 development. Hoff and Mazor, however, could not and did not develop a "silicon design" because they were neither chip designers nor process developers, and furthermore the necessary silicon-gate-based design methodology and circuits, under development by Federico Faggin for the 4004, were not yet available.[15] Federico Faggin, having finished the design of the 4004, became leader of the project from January 1971 until its successful completion in April 1972, after it had been suspended – for lack of progress – for about seven months. Hal Feeney, project engineer, did the detailed logic design, circuit design, and physical layout under Faggin's supervision, employing the same design methodology that Faggin had originally developed for the Intel 4004 microprocessor, and utilizing the basic circuits he had developed for the 4004. A combined "HF" logo was etched onto the chip about halfway between the D5 and D6 bonding pads. Second sources[edit] Intel 8008 second sources VEB Mikroelektronik "Karl Marx" Erfurt (MME) U808 (GDR) MicroSystems International (MIL) MF8008 Siemens SAB8008 See also[edit] Mark-8, an 8008-based computer kit References[edit] ^ CPU History – The CPU Museum – Life Cycle of the CPU. ^ "Thirty years in robotics - Robotics". archive.org. March 19, 2014. Retrieved April 11, 2018. ^ a b c d e f Wood, Lamont (August 8, 2008), "Forgotten PC history: The true origins of the personal computer", Computerworld ^ "Inside the world's long-lost first microcomputer". cnet.com. January 8, 2010. Retrieved April 11, 2018. ^ Brunel University, 1974. Master of Technology dissertation, L. R. Crawford. ^ a b "MCS-8 Micro Computer Set Users Manual" (PDF). Intel Corporation. 1972. Retrieved December 4, 2010. ^ "Intel 8008 Opcodes". Retrieved December 4, 2010. ^ "Intel 8008 (i8008) microprocessor family". CPU World. 2003–2010. Retrieved December 4, 2010. ^ Intel. "Gordon Moore and Moore's Law". Archived from the original on September 4, 2009. Retrieved June 28, 2009. ^ Intel (2012). "Intel Chips: timeline poster". ^ Intel (2008). "Microprocessor Quick Reference Guide". ^ See the Z80 article for a description. ^ See the Intel 8085 article for a description. ^ See the Intel 8086 article for a description. ^ Faggin, Federico; Hoff, Marcian E.; Mazor, Stanley; Shima, Masatoshi (December 1996), "The History of the 4004", IEEE Micro, Los Alamitos: IEEE Computer Society, 16 (6): 10–19, doi:10.1109/40.546561, ISSN 0272-1732 External links[edit] MCS-8 User Manual with 8008 data sheet (1972) Wood, Lamont (August 8, 2008). "Forgotten PC history: The true origins of the personal computer". Computer World. The Intel 8008 support page unofficial The DigiBarn Computer Museum's page on Bill Pentz' Sacramento State machine, a full microcomputer built around the 8008 Martin, Donald P. (1974). Microcomputer Design. Martin Research. — (1976). Microcomputer Design (2nd ed.). Martin Research. OCLC 911808003. Runyan, Grant (April 1977). "Now — BASIC for the 8008 — Even!". Kilobaud Magazine: 116–8. "A BASIC language interpreter for the Intel 8008 microprocessor". University of Illinois. 1974. 8008 Assembly Language Reference Card Shirriff, Ken (December 2016). "Die photos and analysis of the revolutionary 8008 microprocessor, 45 years old". — (February 2017). "Reverse-engineering the surprisingly advanced ALU of the 8008 microprocessor". — (October 2020). "How the bootstrap load made the historic Intel 8008 processor possible". — (November 2020). "Reverse-engineering the carry-lookahead circuit in the Intel 8008 processor". v t e Intel processors Discontinued BCD oriented (4-bit) 4004 (1971) 4040 (1974) pre-x86 (8-bit) 8008 (1972) 8080 (1974) 8085 (1977) Early x86 (16-bit) 8086 (1978) 8088 (1979) 80186 (1982) 80188 (1982) 80286 (1982) x87 (external FPUs) 8/16-bit databus 8087 (1980) 16-bit databus 80187 80287 80387SX 32-bit databus 80387DX 80487 IA-32 (32-bit) 80386 SX 376 EX 80486 SX DX2 DX4 SL RapidCAD OverDrive A100/A110 Celeron (1998) M D (2004) Pentium Original P5 OverDrive Pro II II OverDrive III 4 M Dual-Core some Core Solo Duo Tolapai x86-64 (64-bit) Celeron D Dual-Core Pentium 4 D Extreme Edition Dual-Core some Core 2 some i7 Other CISC iAPX 432 EPIC Itanium RISC i860 i960 StrongARM XScale Current IA-32 (32-bit) Atom CE SoC Quark x86-64 (64-bit) Atom CE SoC Celeron Pentium Core i3 i5 i7 i9 M Xeon E3 E5 E7 D Phi Lists Celeron Pentium Pro II III 4 D M Core Core 2 i3 i5 i7 i9 M Atom Xeon Itanium Related Tick–tock model Chipsets GPUs GMA HD and Iris Graphics PCHs SCHs ICHs PIIXs Stratix Codenames Microarchitectures x86 P5 800 nm P5 600 nm P54C 350 nm P54CS P55C 250 nm Tillamook P6, Pentium M, Enhanced Pentium M 500 nm P6 350 nm P6 Klamath 250 nm Mendocino Dixon Tonga Covington Deschutes Katmai Drake Tanner 180 nm Coppermine Coppermine T Timna Cascades 130 nm Tualatin Banias 90 nm Dothan Stealey Tolapai Canmore 65 nm Yonah Sossaman NetBurst 180 nm Willamette Foster 130 nm Northwood Gallatin Prestonia 90 nm Tejas and Jayhawk Prescott Smithfield Nocona Irwindale Cranford Potomac Paxville 65 nm Cedar Mill Presler Dempsey Tulsa Core 65 nm Merom-L Merom Conroe-L Allendale Conroe Kentsfield Woodcrest Clovertown Tigerton 45 nm Penryn Penryn-QC Wolfdale Yorkfield Wolfdale-DP Harpertown Dunnington Nehalem 45 nm Auburndale Beckton (Nehalem-EX) Bloomfield Clarksfield Gainestown (Nehalem-EP) Havendale Jasper Forest Lynnfield 32 nm Arrandale Clarkdale Gulftown (Westmere-EP) Westmere-EX Sandy Bridge 32 nm Sandy Bridge Sandy Bridge-E Gladden 22 nm Ivy Bridge Ivy Bridge-EP Ivy Bridge-EX Haswell 22 nm Haswell 14 nm Broadwell Skylake 14 nm Skylake Kaby Lake (Amber Lake) Coffee Lake (Whiskey Lake) Cascade Lake Comet Lake Cooper Lake Palm Cove 10 nm Cannon Lake Sunny Cove 10 nm Ice Lake Willow Cove 14 nm Rocket Lake 10 nm Tiger Lake Sapphire Rapids Golden Cove 10 nm Alder Lake 7 nm Granite Rapids Redwood Cove 7 nm Meteor Lake Atom Bonnell Saltwell 45 nm Silverthorne Diamondville Pineview Lincroft Tunnel Creek Stellarton Sodaville Groveland 32 nm Cedarview Penwell Cloverview Berryville Centerton Silvermont Airmont 22 nm Valleyview Tangier Anniedale 14 nm Cherryview Goldmont 14 nm Goldmont Goldmont Plus Tremont 10 nm Tremont Gracemont Retrieved from "https://en.wikipedia.org/w/index.php?title=Intel_8008&oldid=988403991" Categories: Intel microprocessors Computer-related introductions in 1972 8-bit microprocessors Hidden categories: Use mdy dates from October 2018 All articles with unsourced statements Articles with unsourced statements from January 2017 Articles with unsourced statements from February 2017 Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons Languages Български Català Čeština Deutsch Eesti Ελληνικά Español فارسی Français 한국어 Hrvatski Bahasa Indonesia Italiano עברית Lietuvių Magyar മലയാളം Nederlands 日本語 Norsk bokmål Polski Português Русский Slovenčina Српски / srpski Suomi Svenska Türkçe Українська Tiếng Việt 中文 Edit links This page was last edited on 12 November 2020, at 23:39 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement