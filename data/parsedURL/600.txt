Turing (programming language) - Wikipedia Turing (programming language) From Wikipedia, the free encyclopedia Jump to navigation Jump to search Turing Paradigm multi-paradigm: object-oriented, procedural Designed by Ric Holt and James Cordy Developer Holt Software Associates First appeared 1982 Typing discipline static, manifest OS Microsoft Windows Major implementations Turing, TPlus, OpenT Dialects Object-Oriented Turing, Turing Plus Influenced by Euclid, Pascal, SP/k Turing is a Pascal-like programming language developed in 1982 by Ric Holt and James Cordy, then of University of Toronto, in Toronto, Ontario, Canada. Turing is a descendant of Euclid, Pascal and SP/k that features a clean syntax and precise machine-independent semantics. Turing 4.1.0 is the latest stable version of Turing. Turing 4.1.1 and Turing 4.1.2 do not allow for stand alone .EXE files to be created and versions before Turing 4.1.0 have outdated syntax and outdated functions. Contents 1 Overview 2 Syntax 3 Open implementations 3.1 Open Turing 3.2 TPlus 3.3 OpenT 4 Trivia 5 Turing+ 6 Object-Oriented Turing 7 See also 8 References 9 Further reading 10 External links Overview[edit] Named after British computer scientist Alan Turing, Turing is used primarily as a teaching language at the high school and university level.[citation needed][1] Two other versions exist, Object-Oriented Turing and Turing Plus, a systems programming variant. In September 2001, "Object Oriented Turing" was renamed "Turing" and the original Turing was renamed "Classic Turing". Turing is no longer supported by Holt Software Associates in Toronto, Ontario. Currently, Microsoft Windows is the only supported platform. Turing is widely used in high schools in Ontario as an introduction to programming.[2] On November 28, 2007, Turing, which was previously a commercial programming language, became freeware, available to download from the developer's website free of charge for personal, commercial, and educational use.[3][4][5] The makers of Turing, Holt Software Associates, have since ceased operations, and Turing has seen no further development since November 25, 2007.[4] Syntax[edit] Turing is designed to have a very lightweight, readable, intuitive syntax. Here is the entire Hello World! program in Turing with syntax highlighting: put "Hello World!" Turing avoids semicolons and braces, using explicit end markers for most language constructs instead, and allows declarations anywhere. Here is a complete program defining and using the traditional recursive function to calculate a factorial.  % Accepts a number and calculates its factorial  function factorial (n: int) : real      if n = 0 then           result 1      else           result n * factorial (n - 1)      end if end factorial  var n: int loop      put "Please input an integer: " ..      get n      exit when n >= 0      put "Input must be a non-negative integer." end loop  put "The factorial of ", n, " is ", factorial (n) Open implementations[edit] Currently, there are two open source alternative implementations of Turing: Open Turing, an open source version of the original interpreter, and TPlus, a native compiler for the concurrent systems programming language variant Turing Plus. OpenT, a project to develop a compiler for Turing, is no longer in development. Open Turing[edit] Open Turing is an open-source implementation of the original Turing interpreter for Windows written by Tristan Hume. It includes speed improvements, new features such as OpenGL 3D and a new code editor. It is fully backwards compatible with the closed-source implementation.[6] TPlus[edit] TPlus is an open-source implementation of original (non-Object-Oriented) Turing with systems programming extensions developed at the University of Toronto and ported to Linux, Solaris and Mac OS X at Queen's University in the late 1990s.[7] TPlus implements Turing+ (Turing Plus), a concurrent systems programming language based on the original Turing programming language. Some, but not all, of the features of Turing Plus were eventually subsumed into the present Object-Oriented Turing language. Turing Plus extends original Turing with processes and monitors (as specified by C.A.R. Hoare) as well as language constructs needed for systems programming such as binary input-output, separate compilation, variables at absolute addresses, type converters and other features. OpenT[edit] OpenT is an abandoned open-source language, compiler, and IDE that was being developed by the members of the dTeam of Computer Science Canada.[citation needed] It shares many similarities with Turing, and is fully backwards compatible with it. Trivia[edit] As an addition to the usual graphics drawing functions, Turing features special functions for drawing maple leaves to allow easier drawing of the Canadian flag.[8] Turing+[edit] Turing+ Paradigm multi-paradigm: object-oriented, procedural, concurrent Designed by Ric Holt and James Cordy Developer Ric Holt and James Cordy First appeared 1987 Typing discipline static, manifest Influenced by Concurrent Euclid, Turing Influenced Object-Oriented Turing Turing+ (Turing Plus) is a concurrent systems programming language based on the Turing programming language designed by James Cordy and Ric Holt, then at the University of Toronto, Canada, in 1987. Some, but not all, of the features of Turing+ were eventually subsumed into Object-Oriented Turing. Turing+ extended original Turing with processes and monitors (as specified by C.A.R. Hoare) as well as language constructs needed for systems programming such as binary input-output, separate compilation, variables at absolute addresses, type converters and other features. Turing+ was explicitly designed to replace Concurrent Euclid in systems-programming applications. The TUNIS operating system, originally written in Concurrent Euclid, was recoded to Turing+ in its MiniTunis implementation. Turing+ has been used to implement several production software systems, including the TXL programming language. Object-Oriented Turing[edit] Object-Oriented Turing Paradigm multi-paradigm: object-oriented, procedural, concurrent Designed by Ric Holt Developer Ric Holt First appeared 1991 Typing discipline static, manifest OS Cross-platform: Sun-4, MIPS, RS-6000 Influenced by Turing Object-Oriented Turing is an extension of the Turing programming language and a replacement for Turing Plus created by Ric Holt[9][10] of the University of Toronto, Canada, in 1991. It is imperative, object-oriented, and concurrent. It has modules, classes, single inheritance, processes, exception handling, and optional machine-dependent programming. There is an integrated development environment under the X Window System and a demo version.[citation needed] Versions exist for Sun-4, MIPS, RS-6000, NeXTSTEP, Windows 95 and others. See also[edit] Euclid (programming language) Concurrent Euclid TXL References[edit] ^ Fluck, A., Webb, M., Cox, M., Angeli, C., Malyn-Smith, J., Voogt, J., & Zagami, J. (2016). Arguing for computer science in the school curriculum. Journal of Educational Technology & Society, 19(3), 38-46. ^ info@compsci.ca. "Download Turing & RTP (Ready to Program)". compsci.ca. Retrieved 2018-08-21. ^ "Holt Software Associates Home Page". January 2008. Archived from the original on 2010-04-05. Retrieved 2010-04-10. ^ a b "Holt Software Associates Home Page (old)". 2007-11-25. Archived from the original on 2010-04-17. Retrieved 2010-04-10. ^ "Download Turing 4.1.1". compsci.ca Blog. 2007-11-28. Retrieved 2009-01-10. ^ Hume, Tristan. "Open Turing". Retrieved 6 May 2012. ^ Cordy, James. "Turing+ 5.1". Retrieved 13 April 2017. ^ "Turing Documentation for drawfillmapleleaf". Retrieved 21 August 2014. ^ Mancoridis, S; Holt, R C; Penny, D A (February 1993). "A Conceptual Framework for Software Development". ACM Annual Computer Science Conference (SIGCSE, Indianapolis): 74–80. ISSN 1041-4517. OCLC 194807519. BL Shelfmark 0578.623000. ^ Holt, RC (1992). Turing reference manual (3rd. ed.). Toronto: Holt Software Associates. ISBN 978-0-921598-15-2. OCLC 71476276. This article is based on material taken from the Free On-line Dictionary of Computing prior to 1 November 2008 and incorporated under the "relicensing" terms of the GFDL, version 1.3 or later. Further reading[edit] Holt, Richard C; Cordy, James R (December 1983). The Turing language report. Canada: Computer Systems Research Institute, University of Toronto. ISSN 0316-6295. Holt, Richard C; Cordy, James R (December 1988). "The Turing programming language". Communications of the ACM. 31 (12): 1410–1423. doi:10.1145/53580.53581. Holt, Richard C; Matthews, Philip A; Rosselet, J Alan; Cordy, James R (1988). The Turing programming language: design and definition. Englewood Cliffs, N.J.: Prentice Hall. ISBN 978-0-13-933136-7. OCLC 17377539. Grogono, Peter (1995). Programming with Turing and Object Oriented Turing. Springer-Verlag. ISBN 978-0-387-94517-0. External links[edit] Wikibooks has a book on the topic of: Turing Forum for Turing Help, Tutorials, & Source Code Github page for the Open Turing project Retrieved from "https://en.wikipedia.org/w/index.php?title=Turing_(programming_language)&oldid=974370300" Categories: 1982 establishments in Ontario Academic programming languages Algol programming language family Educational programming languages Programming languages created in 1982 Statically typed programming languages Structured programming languages University of Toronto Alan Turing Hidden categories: All articles with unsourced statements Articles with unsourced statements from January 2011 Articles with unsourced statements from October 2013 Articles with example code Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages Deutsch فارسی 日本語 Norsk bokmål Edit links This page was last edited on 22 August 2020, at 16:23 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement