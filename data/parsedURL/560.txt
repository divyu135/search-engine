SQL - Wikipedia SQL From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article is about the database language. For the IATA code, see San Carlos Airport (California). "SEQUEL" redirects here. For the topic of the word, see sequel. For other uses, see sequel (disambiguation). Language for management and use of relational databases SQL (Structured Query Language) Paradigm Declarative Family Query language Designed by Donald D. Chamberlin Raymond F. Boyce Developer ISO/IEC First appeared 1974; 46 years ago (1974) Stable release SQL:2016 / December 2016; 4 years ago (2016-12) Typing discipline Static, strong OS Cross-platform Website www.iso.org/standard/63555.html Major implementations Many Dialects SQL-86 SQL-89 SQL-92 SQL:1999 SQL:2003 SQL:2006 SQL:2008 SQL:2011 SQL:2016 Influenced by Datalog Influenced CQL, LINQ, SPARQL, SOQL, PowerShell,[1] JPQL, jOOQ, N1QL Structured Query Language at Wikibooks SQL (file format) Filename extension .sql Internet media type application/sql[2][3] Developed by ISO/IEC Initial release 1986 (1986) Type of format Database Standard ISO/IEC 9075 Open format? Yes Website www.iso.org/standard/63555.html SQL (/ˌɛsˌkjuːˈɛl/ (listen) S-Q-L,[4] /ˈsiːkwəl/ "sequel"; Structured Query Language)[5][6][7] is a domain-specific language used in programming and designed for managing data held in a relational database management system (RDBMS), or for stream processing in a relational data stream management system (RDSMS). It is particularly useful in handling structured data, i.e. data incorporating relations among entities and variables. SQL offers two main advantages over older read–write APIs such as ISAM or VSAM. Firstly, it introduced the concept of accessing many records with one single command. Secondly, it eliminates the need to specify how to reach a record, e.g. with or without an index. Originally based upon relational algebra and tuple relational calculus, SQL consists of many types of statements,[8] which may be informally classed as sublanguages, commonly: a data query language (DQL),[a] a data definition language (DDL),[b] a data control language (DCL), and a data manipulation language (DML).[c][9] The scope of SQL includes data query, data manipulation (insert, update and delete), data definition (schema creation and modification), and data access control. Although SQL is essentially a declarative language (4GL), it also includes procedural elements. SQL was one of the first commercial languages to utilize Edgar F. Codd’s relational model. The model was described in his influential 1970 paper, "A Relational Model of Data for Large Shared Data Banks".[10] Despite not entirely adhering to the relational model as described by Codd, it became the most widely used database language.[11][12] SQL became a standard of the American National Standards Institute (ANSI) in 1986, and of the International Organization for Standardization (ISO) in 1987.[13] Since then the standard has been revised to include a larger set of features. Despite the existence of standards, most SQL code requires at least some changes before being ported to different database systems. Contents 1 History 2 Syntax 3 Procedural extensions 4 Interoperability and standardization 4.1 Overview 4.2 Reasons for incompatibility 4.3 Standardization history 4.4 Current standard 4.4.1 Anatomy of SQL Standard 4.4.2 Extensions to the ISO/IEC Standard 4.4.3 Technical Reports 5 Alternatives 6 Distributed SQL processing 7 Criticisms 7.1 Design 7.2 Other criticisms 7.2.1 Orthogonality and completeness 7.2.2 Null 7.2.3 Duplicates 7.2.4 Impedance mismatch 8 Data Integrity Categories 8.1 Entity integrity 8.2 Domain integrity 8.3 Referential integrity 8.4 User-defined integrity 9 SQL data types 9.1 Predefined data types 9.2 Constructed types 10 See also 11 Notes 12 References 13 Sources 13.1 SQL standards documents 13.1.1 ITTF publicly available standards and technical reports 13.1.2 Draft documents 14 External links History[edit] SQL was initially developed at IBM by Donald D. Chamberlin and Raymond F. Boyce after learning about the relational model from Edgar F. Codd[14] in the early 1970s.[15] This version, initially called SEQUEL (Structured English Query Language), was designed to manipulate and retrieve data stored in IBM's original quasi-relational database management system, System R, which a group at IBM San Jose Research Laboratory had developed during the 1970s.[15] Chamberlin and Boyce's first attempt at a relational database language was Square, but it was difficult to use due to subscript notation. After moving to the San Jose Research Laboratory in 1973, they began work on SEQUEL.[14] The acronym SEQUEL was later changed to SQL because "SEQUEL" was a trademark of the UK-based Hawker Siddeley Dynamics Engineering Limited company.[16] After testing SQL at customer test sites to determine the usefulness and practicality of the system, IBM began developing commercial products based on their System R prototype including System/38, SQL/DS, and DB2, which were commercially available in 1979, 1981, and 1983, respectively.[17] In the late 1970s, Relational Software, Inc. (now Oracle Corporation) saw the potential of the concepts described by Codd, Chamberlin, and Boyce, and developed their own SQL-based RDBMS with aspirations of selling it to the U.S. Navy, Central Intelligence Agency, and other U.S. government agencies. In June 1979, Relational Software, Inc. introduced the first commercially available implementation of SQL, Oracle V2 (Version2) for VAX computers. By 1986, ANSI and ISO standard groups officially adopted the standard "Database Language SQL" language definition. New versions of the standard were published in 1989, 1992, 1996, 1999, 2003, 2006, 2008, 2011[14] and, most recently, 2016.[citation needed] Syntax[edit] Main article: SQL syntax U P D A T E c l a u s e { U P D A T E c o u n t r y S E T c l a u s e { S E T p o p u l a t i o n = p o p u l a t i o n + 1 ⏞ e x p r e s s i o n W H E R E c l a u s e { W H E R E n a m e = ′ U S A ′ ⏞ e x p r e s s i o n ⏟ p r e d i c a t e ; } statement {\displaystyle \left.{\begin{array}{rl}\textstyle {\mathtt {UPDATE~clause}}&\{{\mathtt {UPDATE\ country}}\\\textstyle {\mathtt {SET~clause}}&\{{\mathtt {SET\ population=~}}\overbrace {\mathtt {population+1}} ^{\mathtt {expression}}\\\textstyle {\mathtt {WHERE~clause}}&\{{\mathtt {WHERE\ \underbrace {{name=}\overbrace {'USA'} ^{expression}} _{predicate};}}\end{array}}\right\}{\textstyle {\texttt {statement}}}} A chart showing several of the SQL language elements that compose a single statement The SQL language is subdivided into several language elements, including: Clauses, which are constituent components of statements and queries. (In some cases, these are optional.)[18] Expressions, which can produce either scalar values, or tables consisting of columns and rows of data Predicates, which specify conditions that can be evaluated to SQL three-valued logic (3VL) (true/false/unknown) or Boolean truth values and are used to limit the effects of statements and queries, or to change program flow. Queries, which retrieve the data based on specific criteria. This is an important element of SQL. Statements, which may have a persistent effect on schemata and data, or may control transactions, program flow, connections, sessions, or diagnostics. SQL statements also include the semicolon (";") statement terminator. Though not required on every platform, it is defined as a standard part of the SQL grammar. Insignificant whitespace is generally ignored in SQL statements and queries, making it easier to format SQL code for readability. Procedural extensions[edit] SQL is designed for a specific purpose: to query data contained in a relational database. SQL is a set-based, declarative programming language, not an imperative programming language like C or BASIC. However, extensions to Standard SQL add procedural programming language functionality, such as control-of-flow constructs. These include: Source Abbreviation Full name ANSI/ISO Standard SQL/PSM SQL/Persistent Stored Modules Interbase / Firebird PSQL Procedural SQL IBM DB2 SQL PL SQL Procedural Language (implements SQL/PSM) IBM Informix SPL Stored Procedural Language IBM Netezza NZPLSQL[19] (based on Postgres PL/pgSQL) Invantive PSQL[20] Invantive Procedural SQL (implements SQL/PSM and PL/SQL) MariaDB SQL/PSM, PL/SQL SQL/Persistent Stored Module (implements SQL/PSM), Procedural Language/SQL (based on Ada)[21] Microsoft / Sybase T-SQL Transact-SQL Mimer SQL SQL/PSM SQL/Persistent Stored Module (implements SQL/PSM) MySQL SQL/PSM SQL/Persistent Stored Module (implements SQL/PSM) MonetDB SQL/PSM SQL/Persistent Stored Module (implements SQL/PSM) NuoDB SSP Starkey Stored Procedures Oracle PL/SQL Procedural Language/SQL (based on Ada) PostgreSQL PL/pgSQL Procedural Language/PostgreSQL Structured Query Language (based on reduced PL/SQL) SAP R/3 ABAP Advanced Business Application Programming SAP HANA SQLScript SQLScript Sybase Watcom-SQL SQL Anywhere Watcom-SQL Dialect Teradata SPL Stored Procedural Language In addition to the standard SQL/PSM extensions and proprietary SQL extensions, procedural and object-oriented programmability is available on many SQL platforms via DBMS integration with other languages. The SQL standard defines SQL/JRT extensions (SQL Routines and Types for the Java Programming Language) to support Java code in SQL databases. Microsoft SQL Server 2005 uses the SQLCLR (SQL Server Common Language Runtime) to host managed .NET assemblies in the database, while prior versions of SQL Server were restricted to unmanaged extended stored procedures primarily written in C. PostgreSQL lets users write functions in a wide variety of languages—including Perl, Python, Tcl, JavaScript (PL/V8) and C.[22] Interoperability and standardization[edit] Overview[edit] SQL implementations are incompatible between vendors and do not necessarily completely follow standards. In particular date and time syntax, string concatenation, NULLs, and comparison case sensitivity vary from vendor to vendor. Particular exceptions are PostgreSQL[23] and Mimer SQL[24] which strive for standards compliance, though PostgreSQL does not adhere to the standard in how folding of unquoted names is done. The folding of unquoted names to lower case in PostgreSQL is incompatible with the SQL standard,[25] which says that unquoted names should be folded to upper case.[26] Thus, Foo should be equivalent to FOO not foo according to the standard. Popular implementations of SQL commonly omit support for basic features of Standard SQL, such as the DATE or TIME data types. The most obvious such examples, and incidentally the most popular commercial and proprietary SQL DBMSs, are Oracle (whose DATE behaves as DATETIME,[27][28] and lacks a TIME type)[29] and MS SQL Server (before the 2008 version). As a result, SQL code can rarely be ported between database systems without modifications. Reasons for incompatibility[edit] There are several reasons for this lack of portability between database systems: The complexity and size of the SQL standard means that most implementors do not support the entire standard. The standard does not specify database behavior in several important areas (e.g. indexes, file storage...), leaving implementations to decide how to behave. The SQL standard precisely specifies the syntax that a conforming database system must implement. However, the standard's specification of the semantics of language constructs is less well-defined, leading to ambiguity. Many database vendors have large existing customer bases; where the newer version of the SQL standard conflicts with the prior behavior of the vendor's database, the vendor may be unwilling to break backward compatibility. There is little commercial incentive for vendors to make it easier for users to change database suppliers (see vendor lock-in). Users evaluating database software tend to place other factors such as performance higher in their priorities than standards conformance. Standardization history[edit] SQL was adopted as a standard by the American National Standards Institute (ANSI) in 1986 as SQL-86[30] and the International Organization for Standardization (ISO) in 1987.[13] It is maintained by ISO/IEC JTC 1, Information technology, Subcommittee SC 32, Data management and interchange. Until 1996, the National Institute of Standards and Technology (NIST) data management standards program certified SQL DBMS compliance with the SQL standard. Vendors now self-certify the compliance of their products.[31] The original standard declared that the official pronunciation for "SQL" was an initialism: /ˌɛsˌkjuːˈɛl/ ("ess cue el").[11] Regardless, many English-speaking database professionals (including Donald Chamberlin himself[32]) use the acronym-like pronunciation of /ˈsiːkwəl/ ("sequel"),[33] mirroring the language's pre-release development name, "SEQUEL".[15][16][32] The SQL standard has gone through a number of revisions: Year Name Alias Comments 1986 SQL-86 SQL-87 First formalized by ANSI. 1989 SQL-89 FIPS 127-1 Minor revision that added integrity constraints, adopted as FIPS 127-1. 1992 SQL-92 SQL2, FIPS 127-2 Major revision (ISO 9075), Entry Level SQL-92 adopted as FIPS 127-2. 1999 SQL:1999 SQL3 Added regular expression matching, recursive queries (e.g. transitive closure), triggers, support for procedural and control-of-flow statements, non-scalar types (arrays), and some object-oriented features (e.g. structured types). Support for embedding SQL in Java (SQL/OLB) and vice versa (SQL/JRT). 2003 SQL:2003 Introduced XML-related features (SQL/XML), window functions, standardized sequences, and columns with auto-generated values (including identity-columns). 2006 SQL:2006 ISO/IEC 9075-14:2006 defines ways that SQL can be used with XML. It defines ways of importing and storing XML data in an SQL database, manipulating it within the database, and publishing both XML and conventional SQL-data in XML form. In addition, it lets applications integrate queries into their SQL code with XQuery, the XML Query Language published by the World Wide Web Consortium (W3C), to concurrently access ordinary SQL-data and XML documents.[34] 2008 SQL:2008 Legalizes ORDER BY outside cursor definitions. Adds INSTEAD OF triggers, TRUNCATE statement,[35] FETCH clause. 2011 SQL:2011 Adds temporal data (PERIOD FOR)[36] (more information at: Temporal database#History). Enhancements for window functions and FETCH clause.[37] 2016 SQL:2016 Adds row pattern matching, polymorphic table functions, JSON. 2019 SQL:2019 Adds Part 15, multidimensional arrays (MDarray type and operators). Current standard[edit] The standard is commonly denoted by the pattern: ISO/IEC 9075-n:yyyy Part n: title, or, as a shortcut, ISO/IEC 9075. ISO/IEC 9075 is complemented by ISO/IEC 13249: SQL Multimedia and Application Packages (SQL/MM), which defines SQL based interfaces and packages to widely spread applications like video, audio and spatial data.Interested parties may purchase SQL standards documents from ISO,[38] IEC or ANSI. A draft of SQL:2008 is freely available as a zip archive.[39] Anatomy of SQL Standard[edit] The SQL standard is divided into ten parts. There are gaps in the numbering due to the withdrawal of outdated parts. ISO/IEC 9075-1:2016 Part 1: Framework (SQL/Framework). It provides logical concepts.[40] ISO/IEC 9075-2:2016 Part 2: Foundation (SQL/Foundation). It contains the most central elements of the language and consists of both mandatory and optional features. ISO/IEC 9075-3:2016 Part 3: Call-Level Interface (SQL/CLI). It defines interfacing components (structures, procedures, variable bindings) that can be used to execute SQL statements from applications written in Ada, C respectively C++, COBOL, Fortran, MUMPS, Pascal or PL/I. (For Java see part 10.) SQL/CLI is defined in such a way that SQL statements and SQL/CLI procedure calls are treated as separate from the calling application's source code. Open Database Connectivity is a well-known superset of SQL/CLI. This part of the standard consists solely of mandatory features. ISO/IEC 9075-4:2016 Part 4: Persistent stored modules (SQL/PSM). It standardizes procedural extensions for SQL, including flow of control, condition handling, statement condition signals and resignals, cursors and local variables, and assignment of expressions to variables and parameters. In addition, SQL/PSM formalizes declaration and maintenance of persistent database language routines (e.g., "stored procedures"). This part of the standard consists solely of optional features. ISO/IEC 9075-9:2016 Part 9: Management of External Data (SQL/MED). It provides extensions to SQL that define foreign-data wrappers and datalink types to allow SQL to manage external data. External data is data that is accessible to, but not managed by, an SQL-based DBMS. This part of the standard consists solely of optional features. ISO/IEC 9075-10:2016 Part 10: Object language bindings (SQL/OLB). It defines the syntax and semantics of SQLJ, which is SQL embedded in Java (see also part 3). The standard also describes mechanisms to ensure binary portability of SQLJ applications, and specifies various Java packages and their contained classes. This part of the standard consists solely of optional features. Unlike SQL/OLB JDBC defines an API and is not part of the SQL standard.[citation needed] ISO/IEC 9075-11:2016 Part 11: Information and definition schemas (SQL/Schemata). It defines the Information Schema and Definition Schema, providing a common set of tools to make SQL databases and objects self-describing. These tools include the SQL object identifier, structure and integrity constraints, security and authorization specifications, features and packages of ISO/IEC 9075, support of features provided by SQL-based DBMS implementations, SQL-based DBMS implementation information and sizing items, and the values supported by the DBMS implementations.[41] This part of the standard contains both mandatory and optional features. ISO/IEC 9075-13:2016 Part 13: SQL Routines and types using the Java TM programming language (SQL/JRT). It specifies the ability to invoke static Java methods as routines from within SQL applications ('Java-in-the-database'). It also calls for the ability to use Java classes as SQL structured user-defined types. This part of the standard consists solely of optional features. ISO/IEC 9075-14:2016 Part 14: XML-Related Specifications (SQL/XML). It specifies SQL-based extensions for using XML in conjunction with SQL. The XML data type is introduced, as well as several routines, functions, and XML-to-SQL data type mappings to support manipulation and storage of XML in an SQL database.[34] This part of the standard consists solely of optional features.[citation needed] ISO/IEC 9075-15:2019 Part 15: Multi-dimensional arrays (SQL/MDA). It specifies a multidimensional array type (MDarray) for SQL, along with operations on MDarrays, MDarray slices, MDarray cells, and related features. This part of the standard consists solely of optional features. Extensions to the ISO/IEC Standard[edit] ISO/IEC 9075 is complemented by ISO/IEC 13249 SQL Multimedia and Application Packages. This closely related but separate standard is developed by the same committee. It defines interfaces and packages based on SQL. The aim is a unified access to typical database applications like text, pictures, data mining or spatial data. ISO/IEC 13249-1:2016 Part 1: Framework ISO/IEC 13249-2:2003 Part 2: Full-Text ISO/IEC 13249-3:2016 Part 3: Spatial ISO/IEC 13249-5:2003 Part 5: Still image ISO/IEC 13249-6:2006 Part 6: Data mining ISO/IEC 13249-7:2013 Part 7: History ISO/IEC 13249-8:xxxx Part 8: Metadata Registry Access MRA (work in progress) Technical Reports[edit] ISO/IEC 9075 is also accompanied by a series of Technical Reports, published as ISO/IEC TR 19075 in 8 parts. These Technical Reports explain the justification for and usage of some features of SQL, giving examples where appropriate. The Technical Reports are non-normative; if there is any discrepancy from 9075, the text in 9075 holds. Currently available 19075 Technical Reports are: ISO/IEC TR 19075-1:2011 Part 1: XQuery Regular Expression Support in SQL ISO/IEC TR 19075-2:2015 Part 2: SQL Support for Time-Related Information ISO/IEC TR 19075-3:2015 Part 3: SQL Embedded in Programs using the Java programming language ISO/IEC TR 19075-4:2015 Part 4: SQL with Routines and types using the Java programming language ISO/IEC TR 19075-5:2016 Part 5: Row Pattern Recognition in SQL ISO/IEC TR 19075-6:2017 Part 6: SQL support for JavaScript Object Notation (JSON) ISO/IEC TR 19075-7:2017 Part 7: Polymorphic table functions in SQL ISO/IEC TR 19075-8:2019 Part 8: Multi-Dimensional Arrays (SQL/MDA) Alternatives[edit] A distinction should be made between alternatives to SQL as a language, and alternatives to the relational model itself. Below are proposed relational alternatives to the SQL language. See navigational database and NoSQL for alternatives to the relational model. .QL: object-oriented Datalog 4D Query Language (4D QL) Datalog: critics suggest that Datalog has two advantages over SQL: it has cleaner semantics, which facilitates program understanding and maintenance, and it is more expressive, in particular for recursive queries.[42] HTSQL: URL based query method IBM Business System 12 (IBM BS12): one of the first fully relational database management systems, introduced in 1982 ISBL jOOQ: SQL implemented in Java as an internal domain-specific language Java Persistence Query Language (JPQL): The query language used by the Java Persistence API and Hibernate persistence library JavaScript: MongoDB implements its query language in a JavaScript API. LINQ: Runs SQL statements written like language constructs to query collections directly from inside .Net code. Object Query Language QBE (Query By Example) created by Moshè Zloof, IBM 1977 Quel introduced in 1974 by the U.C. Berkeley Ingres project. Tutorial D XQuery Distributed SQL processing[edit] Distributed Relational Database Architecture (DRDA) was designed by a work group within IBM in the period 1988 to 1994. DRDA enables network connected relational databases to cooperate to fulfill SQL requests.[43][44] An interactive user or program can issue SQL statements to a local RDB and receive tables of data and status indicators in reply from remote RDBs. SQL statements can also be compiled and stored in remote RDBs as packages and then invoked by package name. This is important for the efficient operation of application programs that issue complex, high-frequency queries. It is especially important when the tables to be accessed are located in remote systems. The messages, protocols, and structural components of DRDA are defined by the Distributed Data Management Architecture. Criticisms[edit] Design[edit] SQL deviates in several ways from its theoretical foundation, the relational model and its tuple calculus. In that model, a table is a set of tuples, while in SQL, tables and query results are lists of rows: the same row may occur multiple times, and the order of rows can be employed in queries (e.g. in the LIMIT clause). Critics argue that SQL should be replaced with a language that returns strictly to the original foundation: for example, see The Third Manifesto. However, no known proof exists that such uniqueness cannot be added to SQL itself,[45] or at least a variation of SQL. In other words, it's quite possible that SQL can be "fixed" or at least improved in this regard such that the industry may not have to switch to a completely different query language to obtain uniqueness. Debate on this remains open. Other criticisms[edit] Chamberlin discusses four historical criticisms of SQL in a 2012 paper:[14] Orthogonality and completeness[edit] Early specifications did not support major features, such as primary keys. Result sets could not be named, and sub-queries had not been defined. These were added in 1992.[14] Null[edit] The concept of Null is the subject of some debates. The Null marker indicates that there is no value, even no 0 for an integer column or a string of length 0 for a text column. The concept of Nulls enforces the 3-valued-logic in SQL, which is a concrete implementation of the general 3-valued logic. Duplicates[edit] Another popular criticism is that it allows duplicate rows, making integration with languages such as Python, whose data types might make it difficult to accurately represent the data,[14] difficult in terms of parsing and by the absence of modularity.[46] This can be avoided declaring a unique constraint with one or more fields that identifies uniquely a row in the table. That constraint could also become the primary key of the table. Impedance mismatch[edit] In a similar sense to Object-relational impedance mismatch, there is a mismatch between the declarative SQL language and the procedural languages that SQL is typically embedded in. Data Integrity Categories[edit] Main data integrity categories of each RDBMS. Entity integrity[edit] Establishes that within the table the primary key has a unique value for each row, checking the uniqueness of the value of the primary key avoiding that there are duplicated rows in a table. Domain integrity[edit] Restricts the type, format, and value range that applies to valid entries for a column within a table Referential integrity[edit] Makes rows in a table that are being used by other records impossible to delete User-defined integrity[edit] Other specific rules not included above apply SQL data types[edit] The SQL standard defines three kinds of data types: predefined data types constructed types user-defined types. Predefined data types[edit] Character Types Character (CHAR) Character Varying (VARCHAR) Character Large Object (CLOB) Binary Types Binary (BINARY) Binary Varying (VARBINARY) Binary Large Object (BLOB) Numeric Types Exact Numeric Types (NUMERIC, DECIMAL, SMALLINT, INTEGER, BIGINT) Approximate Numeric Types (FLOAT, REAL, DOUBLE PRECISION) Datetime Types (DATE, TIME, TIMESTAMP) Interval Type (INTERVAL) Boolean XML JSON Constructed types[edit] Constructed types are one of ARRAY, MULTISET, REF(erence), or ROW. User-defined types are comparable to classes in object-oriented language with their own constructors, observers, mutators, methods, inheritance, overloading, overwriting, interfaces, and so on. See also[edit] Relational database Object database Object-relational database List of relational database management systems Comparison of relational database management systems Comparison of object-relational database management systems D (data language specification) D4 (programming language) Query by Example SQL syntax Oracle PL/SQL Microsoft Transact-SQL (T-SQL) Online transaction processing (OLTP) Online analytical processing (OLAP) Data warehouse Relational data stream management system NoSQL MUMPS Hierarchical model Star schema Snowflake schema Notes[edit] ^ Formally, "SQL-data" statements excluding "SQL-data change" statements; this is primarily the Select statement. ^ Formally, "SQL-schema" statements. ^ Formally, "SQL-data change" statements References[edit] ^ Paul, Ryan. "A guided tour of the Microsoft Command Shell". Ars Technica. Retrieved 10 April 2011. ^ "Media Type registration for application/sql". Internet Assigned Numbers Authority. 10 April 2013. Retrieved 10 April 2013. ^ "The application/sql Media Type, RFC 6922". Internet Engineering Task Force. April 2013. p. 3. Retrieved 10 April 2013. ^ Beaulieu, Alan (April 2009). Mary E Treseler (ed.). Learning SQL (2nd ed.). Sebastopol, CA, USA: O'Reilly. ISBN 978-0-596-52083-0. ^ "SQL". Britannica.com. Retrieved 2013-04-02. ^ "SQL". Oxforddictionaries.com. Retrieved 2017-01-16. ^ "Structured Query Language (SQL)". Msdn.microsoft.com. Retrieved 2017-01-16. ^ SQL-92, 4.22 SQL-statements, 4.22.1 Classes of SQL-statements "There are at least five ways of classifying SQL-statements:", 4.22.2, SQL statements classified by function "The following are the main classes of SQL-statements:"; SQL:2003 4.11 SQL-statements, and later revisions. ^ Chatham, Mark (2012). Structured Query Language By Example - Volume I: Data Query Language. p. 8. ISBN 978-1-29119951-2. ^ Codd, Edgar F. (June 1970). "A Relational Model of Data for Large Shared Data Banks". Communications of the ACM. 13 (6): 377–87. CiteSeerX 10.1.1.88.646. doi:10.1145/362384.362685. ^ a b Chapple, Mike. "SQL Fundamentals". Databases. About.com. Retrieved 2009-01-28. ^ "Structured Query Language (SQL)". International Business Machines. October 27, 2006. Retrieved 2007-06-10. ^ a b "ISO 9075:1987: Information technology – Database languages – SQL – Part 1: Framework (SQL/Framework)". 1987-06-01. ^ a b c d e f Chamberlin, Donald (2012). "Early History of SQL". IEEE Annals of the History of Computing. 34 (4): 78–82. doi:10.1109/MAHC.2012.61. ^ a b c Chamberlin, Donald D; Boyce, Raymond F (1974). "SEQUEL: A Structured English Query Language" (PDF). Proceedings of the 1974 ACM SIGFIDET Workshop on Data Description, Access and Control. Association for Computing Machinery: 249–64. Archived from the original (PDF) on 2007-09-26. Retrieved 2007-06-09. ^ a b Oppel, Andy (February 27, 2004). Databases Demystified. San Francisco, CA: McGraw-Hill Osborne Media. pp. 90–1. ISBN 978-0-07-146960-9. ^ "History of IBM, 1978". IBM Archives. IBM. Retrieved 2007-06-09. ^ ANSI/ISO/IEC International Standard (IS). Database Language SQL—Part 2: Foundation (SQL/Foundation). 1999. ^ "IBM PureData System for Analytics, Version 7.0.3". ^ "Invantive Procedural SQL". ^ "CREATE PROCEDURE". MariaDB KnowledgeBase. Retrieved 2019-04-23. ^ PostgreSQL contributors (2011). "PostgreSQL server programming". PostgreSQL 9.1 official documentation. postgresql.org. Retrieved 2012-03-09. ^ PostgreSQL contributors (2012). "About PostgreSQL". PostgreSQL 9.1 official website. PostgreSQL Global Development Group. Retrieved March 9, 2012. PostgreSQL prides itself in standards compliance. Its SQL implementation strongly conforms to the ANSI-SQL:2008 standard ^ "Mimer SQL, Built on Standards". Mimer SQL official website. Mimer Information Technology. 2009. ^ "4.1. Lexical Structure". PostgreSQL documentation. 2018. ^ "(Second Informal Review Draft) ISO/IEC 9075:1992, Database Language SQL, Section 5.2, syntax rule 11". 30 July 1992. ^ Lorentz, Diana; Roeser, Mary Beth; Abraham, Sundeep; Amor, Angela; Arora, Geeta; Arora, Vikas; Ashdown, Lance; Baer, Hermann; Bellamkonda, Shrikanth (October 2010) [1996]. "Basic Elements of Oracle SQL: Data Types". Oracle Database SQL Language Reference 11g Release 2 (11.2). Oracle Database Documentation Library. Redwood City, CA: Oracle USA, Inc. Retrieved December 29, 2010. For each DATE value, Oracle stores the following information: century, year, month, date, hour, minute, and second ^ Lorentz, Diana; Roeser, Mary Beth; Abraham, Sundeep; Amor, Angela; Arora, Geeta; Arora, Vikas; Ashdown, Lance; Baer, Hermann; Bellamkonda, Shrikanth (October 2010) [1996]. "Basic Elements of Oracle SQL: Data Types". Oracle Database SQL Language Reference 11g Release 2 (11.2). Oracle Database Documentation Library. Redwood City, CA: Oracle USA, Inc. Retrieved December 29, 2010. The datetime data types are DATE... ^ Lorentz, Diana; Roeser, Mary Beth; Abraham, Sundeep; Amor, Angela; Arora, Geeta; Arora, Vikas; Ashdown, Lance; Baer, Hermann; Bellamkonda, Shrikanth (October 2010) [1996]. "Basic Elements of Oracle SQL: Data Types". Oracle Database SQL Language Reference 11g Release 2 (11.2). Oracle Database Documentation Library. Redwood City, CA: Oracle USA, Inc. Retrieved December 29, 2010. Do not define columns with the following SQL/DS and DB2 data types, because they have no corresponding Oracle data type:... TIME ^ "Finding Aid". X3H2 Records, 1978–95. American National Standards Institute. ^ Doll, Shelley (June 19, 2002). "Is SQL a Standard Anymore?". TechRepublic's Builder.com. TechRepublic. Archived from the original on 2012-07-05. Retrieved 2016-04-12. ^ a b Gillespie, Patrick. "Pronouncing SQL: S-Q-L or Sequel?". Retrieved 12 February 2012. ^ Melton, Jim; Alan R Simon (1993). "1.2. What is SQL?". Understanding the New SQL: A Complete Guide. Morgan Kaufmann. p. 536. ISBN 978-1-55860-245-8. SQL (correctly pronounced "ess cue ell," instead of the somewhat common "sequel")... ^ a b Wagner, Michael (2010). SQL/XML:2006 - Evaluierung der Standardkonformität ausgewählter Datenbanksysteme. Diplomica Verlag. p. 100. ISBN 978-3-8366-9609-8. ^ "SQL:2008 now an approved ISO international standard". Sybase. July 2008. Archived from the original on 2011-06-28. ^ Krishna Kulkarni, Jan-Eike Michels (September 2012). "Temporal features in SQL:2011" (PDF). SIGMOD Record. 41 (3). ^ Fred Zemke (2012). "What's new in SQL:2011" (PDF). Oracle Corporation. ^ "ISO/IEC 9075-2:2016: Information technology -- Database languages -- SQL -- Part 2: Foundation (SQL/Foundation)". December 2016. ^ SQL:2008 draft (Zip), Whitemarsh Information Systems Corporation ^ "ISO/IEC 9075-1:2016: Information technology – Database languages – SQL – Part 1: Framework (SQL/Framework)". ^ ISO/IEC 9075-11:2008: Information and Definition Schemas (SQL/Schemata) ^ Fernando Saenz-Perez. "Outer Joins in a Deductive Database System" (PDF). Lbd.udc.es. Retrieved 2017-01-16. ^ Reinsch, R. (1988). "Distributed database for SAA". IBM Systems Journal. 27 (3): 362–389. doi:10.1147/sj.273.0362. ^ Distributed Relational Database Architecture Reference. IBM Corp. SC26-4651-0. 1990. ^ "Khan Academy | Free Online Courses, Lessons & Practice". Khan Academy. Retrieved 2020-05-29. ^ Schauder, Jen. "Why SQL Sucks". Schauderhaft. Retrieved 3 February 2018. Sources[edit] Codd, Edgar F (June 1970). "A Relational Model of Data for Large Shared Data Banks". Communications of the ACM. 13 (6): 377–87. doi:10.1145/362384.362685. Archived from the original on 2007-06-12. Discussion on alleged SQL flaws (C2 wiki) C. J. Date with Hugh Darwen: A Guide to the SQL standard : a users guide to the standard database language SQL, 4th ed., Addison Wesley, USA 1997, ISBN 978-0-201-96426-4 SQL standards documents[edit] ITTF publicly available standards and technical reports[edit] The ISO/IEC Information Technology Task Force publishes publicly available standards including SQL. Technical Corrigenda (corrections) and Technical Reports (discussion documents) are published there. SQL -- Part 1: Framework (SQL/Framework) Draft documents[edit] Formal SQL standards are available from ISO and ANSI for a fee. For informative use, as opposed to strict standards compliance, late drafts often suffice. SQL:2011 draft SQL-92 draft External links[edit] SQLat Wikipedia's sister projects Definitions from Wiktionary Media from Wikimedia Commons Textbooks from Wikibooks Resources from Wikiversity 1995 SQL Reunion: People, Projects, and Politics, by Paul McJones (ed.): transcript of a reunion meeting devoted to the personal history of relational databases and SQL. American National Standards Institute. X3H2 Records, 1978–1995 Charles Babbage Institute Collection documents the H2 committee's development of the NDL and SQL standards. Oral history interview with Donald D. Chamberlin Charles Babbage Institute In this oral history Chamberlin recounts his early life, his education at Harvey Mudd College and Stanford University, and his work on relational database technology. Chamberlin was a member of the System R research team and, with Raymond F. Boyce, developed the SQL database language. Chamberlin also briefly discusses his more recent research on XML query languages. Comparison of Different SQL Implementations This comparison of various SQL implementations is intended to serve as a guide to those interested in porting SQL code between various RDBMS products, and includes comparisons between SQL:2008, PostgreSQL, DB2, MS SQL Server, MySQL, Oracle, and Informix. Event stream processing with SQL - An introduction to real-time processing of streaming data with continuous SQL queries BNF Grammar for ISO/IEC 9075:2003, part 2 SQL/Framework v t e SQL Versions SQL-86 SQL-89 SQL-92 SQL:1999 SQL:2003 SQL:2006 SQL:2008 SQL:2011 SQL:2016 Keywords As Case Create Delete From Group by Having Insert Join Merge Null Order by Prepare Select Truncate Union Update Where With Related Edgar Codd Relational database ISO/IEC SQL parts Framework Foundation Call-Level Interface Persistent Stored Modules Management of External Data Object Language Bindings Information and Definition Schemas SQL Routines and Types for the Java Programming Language XML-Related Specifications v t e Database management systems Types Object-oriented comparison Relational list comparison Key-value Column-oriented list Document-oriented Wide column store Graph NoSQL NewSQL In-memory list Multi-model comparison Cloud Concepts Database ACID Armstrong's axioms Codd's 12 rules CAP theorem CRUD Null Candidate key Foreign key Superkey Surrogate key Unique key Objects Relation table column row View Transaction Transaction log Trigger Index Stored procedure Cursor Partition Components Concurrency control Data dictionary JDBC XQJ ODBC Query language Query optimizer Query rewriting system Query plan Functions Administration Query optimization Replication Sharding Related topics Database models Database normalization Database storage Distributed database Federated database system Referential integrity Relational algebra Relational calculus Relational database Relational model Object-relational database Transaction processing Category Outline WikiProject v t e Query languages In current use .QL ALPHA CQL Cypher D DMX Datalog GraphQL Gremlin ISBL LDAP LINQ MQL MDX OQL OCL QUEL SMARTS SPARQL SQL XQuery XPath YQL Proprietary YQL LINQ Superseded CODASYL v t e IBM History History of IBM Mergers and acquisitions Think (motto) Operating Systems Products IBM Cloud IBM Cognos Analytics IBM Planning Analytics Watson Cell microprocessor Power Systems Personal Computer Mainframe Information Management Software Lotus Software Rational Software SPSS ILOG Tivoli Software: Service Automation Manager WebSphere alphaWorks Criminal Reduction Utilising Statistical History Mashup Center PureQuery Redbooks FlashSystem Fortran Connections Q System One Business entities Center for The Business of Government Global Services Red Hat International subsidiaries jStart Research The Weather Company (Weather Underground) Facilities Towers 1250 René-Lévesque, Montreal, QC One Atlantic Center, Atlanta, GA Software Labs Rome Software Lab Toronto Software Lab IBM Buildings 330 North Wabash, Chicago, IL Johannesburg Seattle Facilities Thomas J. Watson Research Center Hakozaki Facility Yamato Facility Cambridge Scientific Center IBM Hursley Canada Head Office Building IBM Rochester Initiatives Academy of Technology Deep Thunder IBM Fellow The Great Mind Challenge Developer: Develothon Linux Technology Center IBM Virtual Universe Community Smarter Planet World Community Grid Inventions Automated teller machine Electronic keypunch Hard disk drive Floppy disk DRAM Relational model Selectric typewriter Financial swaps Universal Product Code Magnetic stripe card Sabre airline reservation system Scanning tunneling microscope Terminology Globally integrated enterprise Commercial Processing Workload Consumability e-business CEOs Thomas J. Watson (1914–1956) Thomas Watson Jr. (1956–1971) T. Vincent Learson (1971–1973) Frank T. Cary (1973–1981) John R. Opel (1981–1985) John Fellows Akers (1985–1993) Louis V. Gerstner Jr. (1993–2002) Samuel J. Palmisano (2002–2011) Ginni Rometty (2012–2020) Arvind Krishna (2020–present) Board of directors Michael L. Eskew David Farr Alex Gorsky Michelle J. Howard Arvind Krishna Andrew N. Liveris Martha E. Pollack Virginia M. Rometty Joseph R. Swedish Sidney Taurel Peter R. Voser Other A Boy and His Atom Common Public License/IBM Public License Customer engineer Deep Blue Deep Thought Dynamic infrastructure GUIDE International IBM and the Holocaust IBM international chess tournament Lucifer cipher Mathematica IBM Plex SHARE computing ScicomP Q Experience Sports teams American football Rugby union GlobalFoundries v t e ISO standards by standard number List of ISO standards / ISO romanizations / IEC standards 1–9999 1 2 3 4 5 6 7 9 16 17 31 -0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 128 216 217 226 228 233 259 269 302 306 361 428 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10005 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10303 -11 -21 -22 -28 -238 10383 10487 10585 10589 10646 10664 10746 10861 10957 10962 10967 11073 11170 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 (-2) 11941 11941 (TR) 11992 12006 12182 12207 12234-2 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14644 14649 14651 14698 14750 14764 14882 14971 15022 15189 15288 15291 15292 15398 15408 15444 -3 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 16023 16262 16355-1 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17799 18000 18004 18014 18245 18629 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000+ 20000 20022 20121 20400 21000 21047 21500 21827 22000 22300 22395 23270 23271 23360 24517 24613 24617 24707 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30170 31000 32000 37001 38500 40500 42010 45001 50001 55000 80000 -1 Category Authority control BNE: XX531785 BNF: cb12101816f (data) GND: 4134010-3 LCCN: sh86006628 Computer programming portal Retrieved from "https://en.wikipedia.org/w/index.php?title=SQL&oldid=991023370" Categories: Database management systems SQL Data modeling languages Declarative programming languages Programming languages with an ISO standard Query languages Relational database management systems Data-centric programming languages Programming languages created in 1974 Hidden categories: Articles with short description Short description is different from Wikidata Articles with hAudio microformats Pages including recorded pronunciations All articles with unsourced statements Articles with unsourced statements from May 2020 Articles with unsourced statements from February 2013 Articles with unsourced statements from July 2012 Wikipedia articles with BNE identifiers Wikipedia articles with BNF identifiers Wikipedia articles with GND identifiers Wikipedia articles with LCCN identifiers Articles with example SQL code Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikibooks Wikiversity Languages Alemannisch العربية Asturianu Azərbaycanca বাংলা Bân-lâm-gú Беларуская Беларуская (тарашкевіца)‎ Български Boarisch Bosanski Brezhoneg Català Čeština Cymraeg Dansk Deutsch Eesti Ελληνικά Español Esperanto Euskara فارسی Français Gaeilge Galego 客家語/Hak-kâ-ngî 한국어 Հայերեն हिन्दी Hrvatski Bahasa Indonesia Interlingua Íslenska Italiano עברית ქართული Қазақша Kurdî Кыргызча Latina Latviešu Lietuvių Lumbaart Magyar Македонски മലയാളം Bahasa Melayu Mìng-dĕ̤ng-ngṳ̄ မြန်မာဘာသာ Nederlands 日本語 Norsk bokmål Norsk nynorsk Олык марий Oʻzbekcha/ўзбекча پنجابی Polski Português Română Русский Shqip Simple English Slovenčina Slovenščina Српски / srpski Srpskohrvatski / српскохрватски Suomi Svenska Tagalog தமிழ் Татарча/tatarça Tetun ไทย Тоҷикӣ Türkçe Українська اردو Tiếng Việt 吴语 Yorùbá 粵語 中文 Edit links This page was last edited on 27 November 2020, at 21:26 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement