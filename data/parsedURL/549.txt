Server Message Block - Wikipedia Server Message Block From Wikipedia, the free encyclopedia Jump to navigation Jump to search Network communication protocol for providing shared access to resources This article has multiple issues. Please help improve it or discuss these issues on the talk page. (Learn how and when to remove these template messages) This article may be in need of reorganization to comply with Wikipedia's layout guidelines. Please help by editing the article to make improvements to the overall structure. (February 2020) (Learn how and when to remove this template message) This article needs to be updated. Please update this article to reflect recent events or newly available information. (February 2020) This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. Find sources: "Server Message Block" – news · newspapers · books · scholar · JSTOR (February 2020) (Learn how and when to remove this template message) (Learn how and when to remove this template message) In computer networking, Server Message Block (SMB), one version of which was also known as Common Internet File System (CIFS /sɪfs/),[1][2] is a communication protocol[3] for providing shared access to files, printers, and serial ports between nodes on a network. It also provides an authenticated inter-process communication mechanism. Most usage of SMB involves computers running Microsoft Windows, where it was known as "Microsoft Windows Network" before the introduction of Active Directory. Corresponding Windows services are LAN Manager Server for the server component, and LAN Manager Workstation for the client component.[4] Contents 1 Features 2 History 2.1 SMB / CIFS / SMB1 2.2 SMB 2.0 2.3 SMB 2.1 2.4 SMB 3.0 2.5 SMB 3.0.2 2.6 SMB 3.1.1 3 Implementation 3.1 General issues 3.1.1 Performance issues 3.1.2 Microsoft's modifications 3.2 Samba 3.3 Netsmb 3.4 NQ 3.5 MoSMB 3.6 Tuxera SMB 3.7 Likewise 3.8 CIFSD 4 Opportunistic locking 5 Security 6 Specifications 7 See also 8 References 9 External links Features[edit] Server Message Block provides file sharing, network browsing, printing services, and interprocess communication over a network. The SMB protocol relies on lower-level protocols for transport. The Microsoft SMB protocol was often used with NetBIOS over TCP/IP (NBT) over UDP, using port numbers 137 and 138, and TCP port numbers 137 and 139.NBT for use by NetBIOS is supported on Windows Server 2003, Windows XP, Windows 2000, Windows NT, and Windows Me/98/95.NetBIOS is not supported on Windows Vista, Windows Server 2008, and subsequent versions of Windows. SMB/NBT combination is generally used for backward compatibility. The NetBIOS over NetBEUI protocol provides NetBIOS support for the NetBEUI protocol. This protocol is also called NetBIOS Frames (NBF). NBF is supported on Windows 2000, Windows NT, and Windows Me/98/95. NetBEUI is no longer supported on Windows XP and later. However, SMB Protocol can also be used without a separate transport protocol directly over TCP, port 445. NetBIOS was also supported over several legacy protocols such as IPX/SPX. The SMB Inter-Process Communication (IPC) system provides named pipes and was one of the first inter-process mechanisms commonly available to programmers that provides a means for services to inherit the authentication carried out when a client[clarification needed] first connects to an SMB server.[citation needed] Some services that operate over named pipes, such as those which use Microsoft's own implementation of DCE/RPC over SMB, known as MSRPC over SMB, also allow MSRPC client programs to perform authentication, which overrides the authorization provided by the SMB server, but only in the context of the MSRPC client program that successfully makes the additional authentication. SMB signing: Windows NT 4.0 Service Pack 3 and upwards have the capability to use cryptography to digitally sign SMB connections. The most common official term is "SMB signing". Other terms that have been used officially are "[SMB] Security Signatures", "SMB sequence numbers"[5] and "SMB Message Signing".[6] SMB signing may be configured individually for incoming SMB connections (handled by the "LanManServer" service) and outgoing SMB connections (handled by the "LanManWorkstation" service). The default setting from Windows 98 and upwards is to opportunistically sign outgoing connections whenever the server also supports this, and to fall back to unsigned SMB if both partners allow this. The default setting for Windows domain controllers from Windows Server 2003 and upwards is to not allow fall back for incoming connections.[7] The feature can also be turned on for any server running Windows NT 4.0 Service Pack 3 or later. This protects from man-in-the-middle attacks against the Clients retrieving their policies from domain controllers at login.[8] SMB supports opportunistic locking—a special type of locking-mechanism—on files in order to improve performance. SMB serves as the basis for Microsoft's Distributed File System implementation. History[edit] SMB / CIFS / SMB1[edit] Barry Feigenbaum originally designed SMB at IBM in early 1983 with the aim of turning DOS INT 21h local file access into a networked file system.[9] Microsoft has made considerable modifications to the most commonly used version. Microsoft merged the SMB protocol with the LAN Manager product which it had started developing for OS/2 with 3Com around 1990, and continued to add features to the protocol in Windows for Workgroups (c. 1992) and in later versions of Windows. SMB was originally designed to run on top of the NetBIOS/NetBEUI API (typically implemented with NBF, NetBIOS over IPX/SPX, or NBT). Since Windows 2000, SMB runs, by default, with a thin layer, similar to the Session Message packet of NBT's Session Service, on top of TCP, using TCP port 445 rather than TCP port 139—a feature known as "direct host SMB".[10] Windows Server 2003, and older NAS devices use SMB1/CIFS natively. SMB1/CIFS is an extremely chatty protocol, in that it makes inefficient use of networking resources, particularly when transported over expensive WAN links. While Microsoft estimates that SMB1/CIFS comprises less than 10% of network traffic in the average Enterprise network, that is still a significant amount of traffic. One approach to mitigating the inefficiencies in the protocol is to use WAN Acceleration products such as those provided by Riverbed, Silver Peak, or Cisco Systems. A better approach is simply to eliminate SMB1/CIFS by upgrading the server infrastructure that uses it. This includes both NAS devices as well as Windows Server 2003. The most effective method in use currently to identify SMB1/CIFS traffic is to use a network analyzer tool such as Wireshark, etc., to identify SMB1/CIFS "talkers" and then decommission or upgrade them over time. Microsoft also provides an auditing tool in Windows Server 2016, which can be used to track down SMB1/CIFS talkers.[11] In 1996, when Sun Microsystems announced WebNFS,[12] Microsoft launched an initiative to rename SMB to Common Internet File System (CIFS)[9] and added more features, including support for symbolic links, hard links, larger file sizes, and an initial attempt at supporting direct connections over TCP port 445 without requiring NetBIOS as a transport (a largely experimental effort that required further refinement). Microsoft submitted some partial specifications as Internet-Drafts to the IETF,[13] though these submissions have expired. Microsoft "added SMB1 to the Windows Server 2012 R2 deprecation list in June 2013."[14] Windows Server 2016 and some versions of Windows 10 Fall Creators Update do not have SMB1 installed by default.[15] SMB 2.0[edit] Microsoft introduced a new version of the protocol (SMB 2.0 or SMB2) with Windows Vista in 2006[16] and Server 2008. Although the protocol is proprietary, its specification has been published to allow other systems to interoperate with Microsoft operating systems that use the new protocol.[17] SMB2 reduces the 'chattiness' of the SMB 1.0 protocol by reducing the number of commands and subcommands from over a hundred to just nineteen.[18] It has mechanisms for pipelining, that is, sending additional requests before the response to a previous request arrives, thereby improving performance over high latency links. It adds the ability to compound multiple actions into a single request, which significantly reduces the number of round-trips the client needs to make to the server, improving performance as a result.[18] SMB1 also has a compounding mechanism—known as AndX—to compound multiple actions, but Microsoft clients rarely use AndX.[citation needed] It also introduces the notion of "durable file handles": these allow a connection to an SMB server to survive brief network outages, as are typical in a wireless network, without having to incur the overhead of re-negotiating a new session. SMB2 includes support for symbolic links. Other improvements include caching of file properties, improved message signing with HMAC SHA-256 hashing algorithm and better scalability by increasing the number of users, shares and open files per server among others.[18] The SMB1 protocol uses 16-bit data sizes, which amongst other things, limits the maximum block size to 64K. SMB2 uses 32 or 64-bit wide storage fields, and 128 bits in the case of file-handles, thereby removing previous constraints on block sizes, which improves performance with large file transfers over fast networks.[18] Windows Vista/Server 2008 and later operating systems use SMB2 when communicating with other machines also capable of using SMB2. SMB1 continues in use for connections with older versions of Windows, as well various vendors' NAS solutions. Samba 3.5 also includes experimental support for SMB2.[19] Samba 3.6 fully supports SMB2, except the modification of user quotas using the Windows quota management tools.[20] When SMB2 was introduced it brought a number of benefits over SMB1 for third party implementers of SMB protocols. SMB1, originally designed by IBM, was reverse engineered, and later became part of a wide variety of non-Windows operating systems such as Xenix, OS/2 and VMS (Pathworks). X/Open standardized it partially; it also had draft IETF standards which lapsed. (See http://ubiqx.org/cifs/Intro.html for historical detail.) SMB2 is also a relatively clean break with the past. Microsoft's SMB1 code has to work with a large variety of SMB clients and servers. SMB1 features many versions of information for commands (selecting what structure to return for a particular request) because features such as Unicode support were retro-fitted at a later date. SMB2 involves significantly reduced compatibility-testing for implementers of the protocol. SMB2 code has considerably less complexity since far less variability exists (for example, non-Unicode code paths become redundant as SMB2 requires Unicode support). Apple is also migrating to SMB2 (from their own Apple Filing Protocol, now legacy) with OS X 10.9.[21] This transition was fraught with compatibility problems though.[22][23] Non-default support for SMB2 appeared in fact in OS X 10.7, when Apple abandoned Samba in favor of its own SMB implementation called SMBX.[21] Apple switched to its own SMBX implementation after Samba adopted GPLv3.[24][25] The Linux kernel's CIFS client file system has SMB2 support since version 3.7.[26] SMB 2.1[edit] SMB 2.1, introduced with Windows 7 and Server 2008 R2, introduced minor performance enhancements with a new opportunistic locking mechanism.[27] SMB 3.0[edit] SMB 3.0 (previously named SMB 2.2)[28] was introduced with Windows 8[28] and Windows Server 2012.[28] It brought several significant changes that are intended to add functionality and improve SMB2 performance,[29] notably in virtualized data centers: the SMB Direct Protocol (SMB over remote direct memory access [RDMA]) SMB Multichannel (multiple connections per SMB session),[30][31] SMB Transparent Failover[32][33] It also introduces several security enhancements, such as end-to-end encryption and a new AES based signing algorithm.[34][35] SMB 3.0.2[edit] SMB 3.0.2 (known as 3.02 at the time) was introduced with Windows 8.1 and Windows Server 2012 R2;[36][37] in those and later releases, the earlier SMB version 1 can be optionally disabled to increase security.[38][39] SMB 3.1.1[edit] SMB 3.1.1 was introduced with Windows 10 and Windows Server 2016.[40] This version supports AES-128 GCM encryption in addition to AES-128 CCM encryption added in SMB3, and implements pre-authentication integrity check using SHA-512 hash. SMB 3.1.1 also makes secure negotiation mandatory when connecting to clients using SMB 2.x and higher. Implementation[edit] General issues[edit] This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. Find sources: "Server Message Block" – news · newspapers · books · scholar · JSTOR (February 2019) (Learn how and when to remove this template message) SMB works through a client-server approach, where a client makes specific requests and the server responds accordingly. One section of the SMB protocol specifically deals with access to filesystems, such that clients may make requests to a file server; but some other sections of the SMB protocol specialize in inter-process communication (IPC). The Inter-Process Communication (IPC) share, or ipc$, is a network share on computers running Microsoft Windows. This virtual share is used to facilitate communication between processes and computers over SMB, often to exchange data between computers that have been authenticated. Developers have optimized the SMB protocol for local subnet usage, but users have also put SMB to work to access different subnets across the Internet—exploits involving file-sharing or print-sharing in MS Windows environments usually focus on such usage. SMB servers make their file systems and other resources available to clients on the network. Client computers may want access to the shared file systems and printers on the server, and in this primary functionality SMB has become best-known and most heavily used. However, the SMB file-server aspect would count for little without the NT domains suite of protocols, which provide NT-style domain-based authentication at the very least. Almost all implementations of SMB servers use NT Domain authentication to validate user-access to resources. Performance issues[edit] The use of the SMB protocol has often correlated with a significant increase in broadcast traffic on a network. However the SMB itself does not use broadcasts—the broadcast problems commonly associated with SMB actually originate with the NetBIOS service location protocol.[clarification needed] By default, a Microsoft Windows NT 4.0 server used NetBIOS to advertise and locate services. NetBIOS functions by broadcasting services available on a particular host at regular intervals. While this usually makes for an acceptable default in a network with a smaller number of hosts, increased broadcast traffic can cause problems as the number of hosts on the network increases. The implementation of name resolution infrastructure in the form of Windows Internet Naming Service (WINS) or Domain Name System (DNS) resolves this problem. WINS was a proprietary implementation used with Windows NT 4.0 networks, but brought about its own issues and complexities in the design and maintenance of a Microsoft network. Since the release of Windows 2000, the use of WINS for name resolution has been deprecated by Microsoft, with hierarchical Dynamic DNS now configured as the default name resolution protocol for all Windows operating systems. Resolution of (short) NetBIOS names by DNS requires that a DNS client expand short names, usually by appending a connection-specific DNS suffix to its DNS lookup queries. WINS can still be configured on clients as a secondary name resolution protocol for interoperability with legacy Windows environments and applications. Further, Microsoft DNS servers can forward name resolution requests to legacy WINS servers in order to support name resolution integration with legacy (pre-Windows 2000) environments that do not support DNS. Network designers have found that latency has a significant impact on the performance of the SMB 1.0 protocol, that it performs more poorly than other protocols like FTP. Monitoring reveals a high degree of "chattiness" and a disregard of network latency between hosts.[18] For example, a VPN connection over the Internet will often introduce network latency. Microsoft has explained that performance issues come about primarily because SMB 1.0 is a block-level rather than a streaming protocol, that was originally designed for small LANs; it has a block size that is limited to 64K, SMB signing creates an additional overhead and the TCP window size is not optimized for WAN links.[41] Solutions to this problem include the updated SMB 2.0 protocol,[42] Offline Files, TCP window scaling and WAN acceleration devices from various network vendors that cache and optimize SMB 1.0[43] and 2.0.[44] Microsoft's modifications[edit] Microsoft added several extensions to its own SMB implementation. For example, it added NTLM, followed by NTLMv2 authentication protocols, in order to address security weakness in the original LAN Manager authentication. LAN Manager authentication was implemented based on the original legacy SMB specification's requirement to use IBM "LAN Manager" passwords, but implemented DES in a flawed manner that allowed passwords to be cracked.[45] Later, Kerberos authentication was also added. The NT 4.0 Domain logon protocols initially used 40-bit encryption outside of the United States, because of export restrictions on stronger 128-bit encryption[46] (subsequently lifted in 1996 when President Bill Clinton signed Executive Order 13026[47]). Opportunistic locking support has changed with each server release. Samba[edit] Main article: Samba (software) This section needs to be updated. Please update this article to reflect recent events or newly available information. (April 2016) In 1991 Andrew Tridgell started the development of Samba, a free-software re-implementation (using reverse engineering) of the SMB/CIFS networking protocol for Unix-like systems, initially to implement an SMB server to allow PC clients running the DEC Pathworks client to access files on SunOS machines.[9][48] Because of the importance of the SMB protocol in interacting with the widespread Microsoft Windows platform, Samba became a popular free software implementation of a compatible SMB client and server to allow non-Windows operating systems, such as Unix-like operating systems, to interoperate with Windows. As of version 3 (2003), Samba provides file and print services for Microsoft Windows clients and can integrate with a Windows NT 4.0 server domain, either as a Primary Domain Controller (PDC) or as a domain member. Samba4 installations can act as an Active Directory domain controller or member server, at Windows 2008 domain and forest functional levels.[49] Package managers in Linux distributions can search for the cifs-utils package. The package is from the Samba maintainers. Netsmb[edit] NSMB (Netsmb and SMBFS) is a family of in-kernel SMB client and server[citation needed] implementations in BSD operating systems. It was first contributed to FreeBSD 4.4 by Boris Popov, and is now found in a wide range of other BSD systems including NetBSD and macOS.[50] The implementations have diverged significantly ever since.[51] The macOS version of NSMB is notable for its now-common scheme of representing symlinks. This "Minshall-French" format shows symlinks as textual files with a .symlink extension and a Xsym\n magic number, always 1067 bytes long. This format is also used for storing symlinks on naive SMB servers or unsupported filesystems. Samba supports this format with an mfsymlink option.[52] Docker on Windows also seems to use it.[citation needed] NQ[edit] NQ is a family of portable SMB client and server implementations developed by Visuality Systems, an Israel-based company established in 1998 by Sam Widerman, formerly the CEO of Siemens Data Communications. The NQ family comprises an embedded SMB stack (written in C), a Pure Java SMB Client, and a storage SMB Server implementation. All solutions support the latest SMB 3.1.1 dialect. NQ for Linux, NQ for WinCE, iOS, Android, VxWorks and other real-time operating systems are all supported by the configurable NQ solution. MoSMB[edit] MoSMB is a proprietary SMB implementation for Linux and other Unix-like systems, developed by Ryussi Technologies. It supports only SMB 2.x and SMB 3.x.[53] Tuxera SMB[edit] Tuxera SMB is a proprietary SMB server implementation developed by Tuxera that can be run either in kernel or user space.[54] It supports SMB 3.1.1 and previous versions. Likewise[edit] Likewise developed a CIFS/SMB implementation (versions 1.0, 2.0, 2.1 and NFS 3.0) back in 2009 that provided a multiprotocol, identity-aware platform for network access to files used in OEM storage products built on Linux/Unix based devices. The platform could be used for traditional NAS, Cloud Gateway, and Cloud Caching devices for providing secure access to files across a network. Likewise was purchased by EMC Isilon in 2012. CIFSD[edit] CIFSD is an open source In-kernel CIFS/SMB server implementation for Linux kernel. It has the following advantages over user-space implementations: It provides better performance, and it's easier to implement some features like SMB Direct. It supports SMB 3.1.1 and previous versions. Opportunistic locking[edit] In the SMB protocol, opportunistic locking is a mechanism designed to improve performance by controlling caching of network files by the client.[55] Unlike traditional locks, OpLocks are not strictly file locking or used to provide mutual exclusion. There are four types of opportunistic locks: Batch Locks Batch OpLocks were created originally to support a particular behavior of DOS batch file execution operation in which the file is opened and closed many times in a short period, which is a performance problem. To solve this, a client may ask for an OpLock of type "batch". In this case, the client delays sending the close request and if a subsequent open request is given, the two requests cancel each other.[56] Level 1 OpLocks / Exclusive Locks When an application opens in "shared mode" a file hosted on an SMB server which is not opened by any other process (or other clients) the client receives an exclusive OpLock from the server. This means that the client may now assume that it is the only process with access to this particular file, and the client may now cache all changes to the file before committing it to the server. This is a performance improvement, since fewer round-trips are required in order to read and write to the file. If another client/process tries to open the same file, the server sends a message to the client (called a break or revocation) which invalidates the exclusive lock previously given to the client. The client then flushes all changes to the file. Level 2 OpLocks If an exclusive OpLock is held by a client and a locked file is opened by a third party, the client has to relinquish its exclusive OpLock to allow the other client's write/read access. A client may then receive a "Level 2 OpLock" from the server. A Level 2 OpLock allows the caching of read requests but excludes write caching. Filter OpLocks Added in NT 4.0, Filter Oplocks are similar to Level 2 OpLocks but prevent sharing-mode violations between file open and lock reception. Microsoft advises use of Filter OpLocks only where it is important to allow multiple readers and Level 2 OpLocks in other circumstances. Clients holding an OpLock do not really hold a lock on the file, instead they are notified via a break when another client wants to access the file in a way inconsistent with their lock. The other client's request is held up while the break is being processed. Breaks In contrast with the SMB protocol's "standard" behavior, a break request may be sent from server to client. It informs the client that an OpLock is no longer valid. This happens, for example, when another client wishes to open a file in a way that invalidates the OpLock. The first client is then sent an OpLock break and required to send all its local changes (in case of batch or exclusive OpLocks), if any, and acknowledge the OpLock break. Upon this acknowledgment the server can reply to the second client in a consistent manner. Security[edit] Over the years, there have been many security vulnerabilities in Microsoft's implementation of the protocol or components on which it directly relies.[57][58] Other vendors' security vulnerabilities lie primarily in a lack of support for newer authentication protocols like NTLMv2 and Kerberos in favor of protocols like NTLMv1, LanMan, or plaintext passwords. Real-time attack tracking[59] shows that SMB is one of the primary attack vectors for intrusion attempts,[60] for example the 2014 Sony Pictures attack,[61] and the WannaCry ransomware attack of 2017.[62]In 2020, two SMB high-severity vulnerabilities were disclosed and dubbed as SMBGhost (CVE-2020-0796) and SMBleed (CVE-2020-1206), which when chained together can provide RCE (Remote Code Execution) privilege to the attacker[63]. Specifications[edit] This section needs expansion with: WSPP [1], PFIF [2]. You can help by adding to it. (January 2014) The specifications for the SMB are proprietary and were originally closed, thereby forcing other vendors and projects to reverse-engineer the protocol in order to interoperate with it. The SMB 1.0 protocol was eventually published some time after it was reverse engineered, whereas the SMB 2.0 protocol was made available from Microsoft's MSDN Open Specifications Developer Center from the outset.[64] There are a number of specifications that are relevant to the SMB protocol: [MS-CIFS]: Common Internet File System (CIFS) Protocol Specifies the Common Internet File System (CIFS) Protocol, a cross-platform, transport-independent protocol that provides a mechanism for client systems to use file and print services made available by server systems over a network [MS-SMB]: Server Message Block (SMB) Protocol Specifies the Server Message Block (SMB) Protocol, which defines extensions to the existing Common Internet File System (CIFS) specification that have been implemented by Microsoft since the publication of the CIFS specification. [MS-SMB2]: Server Message Block (SMB) Protocol Versions 2 and 3 Specifies the Server Message Block (SMB) Protocol Versions 2 and 3, which support the sharing of file and print resources between machines and extend the concepts from the Server Message Block Protocol. [MS-SMBD]: SMB2 Remote Direct Memory Access (RDMA) Transport Protocol Specifies the SMB2 Remote Direct Memory Access (RDMA) Transport Protocol, a wrapper for the existing SMB2 protocol that allows SMB2 packets to be delivered over RDMA-capable transports such as iWARP or Infiniband while utilizing the direct data placement (DDP) capabilities of these transports. Benefits include reduced CPU overhead, lower latency, and improved throughput. [MS-FSSO]: File Access Services System Overview (archived document status) Describes the intended functionality of the File Access Services System, how it interacts with systems and applications that need file services, and how it interacts with administrative clients to configure and manage the system. File Access Services uses multiple protocols for file access and file server administration. This document lists those protocols and describes how they are used to implement the File Access Services System. The system overviews are replaced by newer overviews. See also[edit] List of products that support SMB Active Directory Administrative share Shared file access AppleTalk Network File System (protocol) Remote File System WebDAV Uniform Naming Convention DCE/RPC Network Neighborhood References[edit] ^ "Common Internet File System". Microsoft TechNet Library. Archived from the original on July 7, 2017. Retrieved August 20, 2013. ^ "Microsoft SMB Protocol and CIFS Protocol Overview". Microsoft MSDN Library. July 25, 2013. Archived from the original on August 21, 2013. Retrieved August 20, 2013. ^ "Microsoft SMB Protocol and CIFS Protocol Overview". Microsoft. October 22, 2009. Archived from the original on August 2, 2016. Retrieved April 10, 2019. ^ "Lan Manager Networking Concepts". Microsoft. Archived from the original on December 30, 2012. Retrieved September 18, 2014. ^ "MSKB887429: Overview of Server Message Block signing". Microsoft Corporation. November 30, 2007. Archived from the original on November 20, 2010. Retrieved October 24, 2012. Security Signatures (SMB sequence numbers) ^ Jesper M. Johansson (September 8, 2005). "How to Shoot Yourself in the Foot with Security, Part 1". Microsoft Corporation. Archived from the original on October 19, 2018. Retrieved October 24, 2012. This article addresses [...] Server Message Block (SMB) message signing. ^ "MSKB887429: Overview of Server Message Block signing". Microsoft Corporation. November 30, 2007. Archived from the original on November 20, 2010. Retrieved October 24, 2012. By default, SMB signing is required for incoming SMB sessions on Windows Server 2003-based domain controllers. ^ Jose Barreto (December 1, 2010). "The Basics of SMB Signing (covering both SMB1 and SMB2)". Microsoft TechNet Server & Management Blogs. Archived from the original on December 2, 2012. Retrieved October 24, 2012. This security mechanism in the SMB protocol helps avoid issues like tampering of packets and "man in the middle" attacks. [...] SMB signing is available in all currently supported versions of Windows, but it’s only enabled by default on Domain Controllers. This is recommended for Domain Controllers because SMB is the protocol used by clients to download Group Policy information. SMB signing provides a way to ensure that the client is receiving genuine Group Policy. ^ a b c Tridgell, Andrew. "Myths About Samba". Archived from the original on October 20, 2017. Retrieved January 3, 2016. ^ "Direct hosting of SMB over TCP/IP". Microsoft. October 11, 2007. Archived from the original on March 26, 2011. Retrieved November 1, 2009. ^ Kyttle, Ralph (May 13, 2017). "SMB1 – Audit Active Usage using Message Analyzer". Microsoft TechNet. Microsoft. Archived from the original on March 28, 2019. Retrieved March 28, 2019. ^ "WebNFS - Technical Overview". Archived from the original on May 18, 2007. ^ * I. Heizer; P. Leach; D. Perry (June 13, 1996). "Common Internet File System Protocol (CIFS/1.0)". Archived from the original on August 8, 2019. Retrieved December 10, 2017. Paul J. Leach; Dilip C. Naik (January 3, 1997). "CIFS Logon and Pass Through Authentication". Paul J. Leach; Dilip C. Naik (January 10, 1997). "CIFS/E Browser Protocol". Paul J. Leach; Dilip C. Naik (January 31, 1997). "CIFS Printing Specification". Paul J. Leach; Dilip C. Naik (February 26, 1997). "CIFS Remote Administration Protocol". Paul J. Leach; Dilip C. Naik (December 19, 1997). "A Common Internet File System (CIFS/1.0) Protocol". ^ "The Deprecation of SMB1 – You should be planning to get rid of this old SMB dialect – Jose Barreto's Blog". blogs.technet.microsoft.com. Archived from the original on May 21, 2017. Retrieved October 9, 2019. ^ "SMBv1 is not installed by default in Windows 10 Fall Creators Update and Windows Server, version 1709 and later versions". support.microsoft.com. Archived from the original on October 10, 2019. Retrieved October 9, 2019. ^ Navjot Virk and Prashanth Prahalad (March 10, 2006). "What's new in SMB in Windows Vista". Chk Your Dsks. MSDN. Archived from the original on May 5, 2006. Retrieved May 1, 2006. ^ Server Message Block (SMB) Protocol Versions 2 and 3. Windows Protocols. Open Specifications (Technical report). Microsoft Docs. Microsoft. MS-SMB2. Retrieved November 29, 2020. ^ a b c d e Jose Barreto (December 9, 2008). "SMB2, a Complete Redesign of the Main Remote File Protocol for Windows". Microsoft TechNet Server & Management Blogs. Archived from the original on June 3, 2012. Retrieved November 1, 2009. ^ "Samba 3.5.0 Available for Download". Archived from the original on July 24, 2011. Retrieved July 8, 2011. ^ "Samba 3.6.0 Available for Download". Archived from the original on September 24, 2011. Retrieved August 10, 2011. ^ a b Eran, Daniel (June 11, 2013). "Apple shifts from AFP file sharing to SMB2 in OS X 10.9 Mavericks". Appleinsider.com. Archived from the original on February 12, 2017. Retrieved January 12, 2014. ^ Vaughan, Steven J. (October 28, 2013). "Mavericks' SMB2 problem and fixes". ZDNet. Archived from the original on January 5, 2014. Retrieved January 12, 2014. ^ MacParc. "10.9: Switch the SMB stack to use SMB1 as default". Mac OS X Hints. macworld.com. Archived from the original on January 12, 2014. Retrieved January 12, 2014. ^ Topher Kessler (March 23, 2011). "Say adios to Samba in OS X". CNET. Archived from the original on January 15, 2014. Retrieved January 12, 2014. ^ Thom Holwerda (March 26, 2011). "Apple Ditches SAMBA in Favour of Homegrown Replacement". Archived from the original on November 2, 2013. Retrieved January 12, 2014. ^ "Linux 3.7 - Linux Kernel Newbies". Archived from the original on September 11, 2016. Retrieved September 4, 2016. ^ "Implementing an End-User Data Centralization Solution". Microsoft. October 21, 2009. pp. 10–11. Archived from the original on September 6, 2010. Retrieved November 2, 2009. ^ a b c Jeffrey Snover (April 19, 2012). "SMB 2.2 is now SMB 3.0". Windows Server Blog:. Retrieved July 6, 2020.CS1 maint: extra punctuation (link) ^ Chelsio Communications. "40G SMB Direct". Archived from the original on September 7, 2013. Retrieved June 18, 2013. ^ Jose Barreto (October 19, 2012). "SNIA Tutorial on the SMB Protocol" (PDF). Storage Networking Industry Association. Archived (PDF) from the original on June 3, 2013. Retrieved November 28, 2012. ^ Thomas Pfenning. "The Future of File Protocols: SMB 2.2 in the Datacenter" (PDF). Archived from the original (PDF) on July 20, 2012. ^ Joergensen, Claus (June 7, 2012). "SMB Transparent Failover – making file shares continuously available". Microsoft TechNet. Archived from the original on January 11, 2019. Retrieved February 1, 2017. ^ Savill, John (August 21, 2012). "New Ways to Enable High Availability for File Shares". Windows IT Pro. Archived from the original on November 27, 2016. Retrieved February 1, 2017. ^ "SMB Security Enhancements". Microsoft Technet. January 15, 2014. Archived from the original on October 9, 2014. Retrieved June 18, 2014. ^ Jose Barreto (May 5, 2013). "Updated Links on Windows Server 2012 File Server and SMB 3.0". Microsoft TechNet Server & Management Blogs. Archived from the original on August 3, 2016. Retrieved August 14, 2016. ^ Jose Barreto (July 7, 2014). "Updated Links on Windows Server 2012 R2 File Server and SMB 3.02". Microsoft TechNet Server & Management Blogs. Archived from the original on August 26, 2016. Retrieved August 14, 2016. ^ Jose Barreto (December 12, 2013). "Storage Developer Conference – SDC 2013 slides now publicly available. Here are the links to Microsoft slides…". Microsoft TechNet Server & Management Blogs. Archived from the original on August 26, 2016. Retrieved August 14, 2016. ^ Eric Geier (December 5, 2013). "WindowsNetworking.com: Improvements in the SMB 3.0 and 3.02 Protocol Updates". WindowsNetworking.com. Archived from the original on April 9, 2015. Retrieved April 6, 2015. ^ Jose Barreto (April 30, 2015). "SMB3 Networking Links for Windows Server 2012 R2". Microsoft TechNet Server & Management Blogs. Archived from the original on August 26, 2016. Retrieved August 14, 2016. ^ Jose Barreto (May 5, 2015). "What's new in SMB 3.1.1 in the Windows Server 2016 Technical Preview 2". Microsoft TechNet Server & Management Blogs. Archived from the original on October 8, 2016. Retrieved August 14, 2016. ^ Neil Carpenter (October 26, 2004). "SMB/CIFS Performance Over WAN Links". Microsoft. Archived from the original on February 13, 2020. Retrieved February 13, 2020. ^ "What's New in SMB in Windows Server". Microsoft. Archived from the original on February 11, 2017. Retrieved February 6, 2017. ^ Mark Rabinovich, Igor Gokhman. "CIFS Acceleration Techniques" (PDF). Storage Developer Conference, SNIA, Santa Clara 2009. Retrieved July 6, 2020. ^ Mark Rabinovich. "Accelerating SMB2" (PDF). Storage Developer Conference, SNIA, Santa Clara 2011. Retrieved July 6, 2020. ^ Christopher Hertel (1999). "SMB: The Server Message Block Protocol". Archived from the original on March 10, 2010. Retrieved November 1, 2009. ^ "Description of Microsoft Windows Encryption Pack 1". Microsoft. November 1, 2006. Archived from the original on October 2, 2009. Retrieved November 1, 2009. ^ "US Executive Order 13026" (PDF). United States Government. 1996. Archived (PDF) from the original on October 10, 2009. Retrieved November 1, 2009. ^ Tridgell, Andrew (June 27, 1997). "A bit of history and a bit of fun". Archived from the original on July 17, 2011. Retrieved July 26, 2011. ^ "Samba 4 functional levels". February 25, 2011. Archived from the original on July 29, 2014. Retrieved January 12, 2014. ^ "netsmb(4)". NetBSD 8.0 manual pages. Retrieved January 5, 2020. ^ nbsd.conf(5) – FreeBSD File Formats Manual. nbsd.conf(5) – Darwin and macOS File Formats Manual. ^ "UNIX Extensions". SambaWiki. Archived from the original on June 12, 2020. Retrieved March 15, 2020. ^ Dr. Sunu Engineer. "Building a Highly Scalable and Performant SMB Protocol Server" (PDF). Archived (PDF) from the original on September 27, 2016. Retrieved September 25, 2016. ^ "Microsoft and Tuxera strengthen partnership through Tuxera SMB Server". Microsoft. Microsoft News Center. Archived from the original on November 17, 2016. Retrieved February 6, 2017. ^ "Opportunistic Locks". Microsoft. Archived from the original on October 23, 2012. Retrieved November 6, 2012. ^ Sphere, I.T. (2014), All About Opportunistic Locking, archived from the original on April 13, 2014, retrieved April 9, 2014 ^ "MS02-070: Flaw in SMB Signing May Permit Group Policy to Be Modified". Microsoft. December 1, 2007. Archived from the original on October 8, 2009. Retrieved November 1, 2009. ^ "MS09-001: Vulnerabilities in SMB could allow remote code execution". Microsoft. January 13, 2009. Archived from the original on October 5, 2009. Retrieved November 1, 2009. , ^ "Sicherheitstacho.eu". Deutsche Telekom. March 7, 2013. Archived from the original on March 8, 2013. Retrieved March 7, 2013. ^ "Alert (TA14-353A) Targeted Destructive Malware". US-CERT. Archived from the original on December 20, 2014. Retrieved December 20, 2014. ^ "Sony Hackers Used Server Message Block (SMB) Worm Tool". Archived from the original on December 20, 2014. Retrieved December 20, 2014. ^ "WannaCry Ransomware Attack Hits Victims With Microsoft SMB Exploit". eWeek. Retrieved May 13, 2017. ^ "SMBleedingGhost Writeup: Chaining SMBleed (CVE-2020-1206) with SMBGhost". ZecOps Blog. June 9, 2020. Retrieved November 19, 2020. ^ "Windows Protocols". Archived from the original on September 26, 2009. Retrieved October 13, 2009. External links[edit] DFS section in "Windows Developer" documentation Hertel, Christopher (2003). Implementing CIFS – The Common Internet FileSystem. Prentice Hall. ISBN 0-13-047116-X. (Text licensed under the Open Publication License, v1.0 or later, available from the link above.) Common Internet File System, technical details from Microsoft Corporation the NT LM 0.12 dialect of SMB. In Microsoft Word format Steven M. French, A New Network File System is Born: Comparison of SMB2, CIFS, and NFS, Linux Symposium 2007 Steve French, The Future of File Protocols: SMB2 Meets Linux, Linux Collaboration Summit 2012 v t e Uniform Resource Identifier (URI) schemes Official about acct crid data file ftp geo gopher http https info ldap mailto nfs nntp sip / sips tag telnet urn view-source ws / wss xmpp Unofficial coffee ed2k feed finger irc / irc6 / ircs ldaps magnet rsync ymsgr Protocol list v t e File systems Comparison of file systems distributed Unix filesystem Disk ADFS AdvFS Amiga FFS Amiga OFS APFS AthFS bcachefs BeeGFS BFS Be File System Boot File System Btrfs CVFS CXFS DFS EFS Encrypting File System Extent File System Episode ext ext2 ext3 ext3cow ext4 FFS/FFS2 FAT exFAT Files-11 Fossil GPFS HAMMER HAMMER2 HFS HFS+ HPFS HTFS JFS LFS MFS Macintosh File System TiVo Media File System MINIX NetWare File System Next3 NILFS NILFS2 NSS NTFS OneFS PFS QFS QNX4FS ReFS ReiserFS Reiser4 Reliance Reliance Nitro RFS SFS SNFS Soup (Apple) Tux3 UBIFS UFS soft updates WAPBL VxFS WAFL Xiafs XFS Xsan zFS ZFS Optical disc HSF ISO 9660 ISO 13490 UDF Flash memory and SSD APFS FAT exFAT CHFS TFAT EROFS FFS2 F2FS HPFS JFFS JFFS2 JFS LogFS NILFS NILFS2 NVFS YAFFS UBIFS Distributed CXFS GFS2 Google File System OCFS2 OrangeFS PVFS QFS Xsan more... NAS 9P AFS (OpenAFS) AFP Coda DFS Google File System GPFS Lustre NCP NFS POHMELFS Hadoop SMB (CIFS) SSHFS more... Specialized Aufs AXFS Boot File System CDfs Compact Disc File System cramfs Davfs2 EROFS FTPFS FUSE Lnfs LTFS NOVA MVFS SquashFS UMSDOS OverlayFS UnionFS WBFS Pseudo and virtual configfs devfs debugfs kernfs procfs specfs sysfs tmpfs WinFS Encrypted eCryptfs EncFS EFS Rubberhose SSHFS ZFS Types Clustered Global Grid Self-certifying Flash Journaling Log-structured Object Record-oriented Semantic Steganographic Synthetic Versioning Features Case preservation Copy-on-write Data deduplication Data scrubbing Execute in place Extent File attribute Extended file attributes File change log Fork Links Hard Symbolic Access control Access control list Filesystem-level encryption Permissions Modes Sticky bit Interfaces File manager File system API Installable File System Virtual file system Lists Cryptographic Default Log-structured Retrieved from "https://en.wikipedia.org/w/index.php?title=Server_Message_Block&oldid=991421367" Categories: Application layer protocols Inter-process communication Network file systems Network protocols Windows communication and services Hidden categories: CS1 maint: extra punctuation Articles with short description Short description matches Wikidata Wikipedia articles needing reorganization from February 2020 Wikipedia articles in need of updating from February 2020 All Wikipedia articles in need of updating Articles needing additional references from February 2020 All articles needing additional references Articles with multiple maintenance issues Use mdy dates from August 2016 Wikipedia articles needing clarification from November 2009 All articles with unsourced statements Articles with unsourced statements from November 2009 Articles with unsourced statements from November 2010 Articles needing additional references from February 2019 Wikipedia articles needing clarification from March 2013 Wikipedia articles in need of updating from April 2016 Articles with unsourced statements from January 2020 Articles with unsourced statements from May 2020 Articles to be expanded from January 2014 All articles to be expanded Articles using small message boxes Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages Čeština Deutsch Español Euskara فارسی Français 한국어 Bahasa Indonesia Italiano עברית Latviešu Lietuvių Magyar Nederlands 日本語 Piemontèis Polski Português Русский Slovenčina Suomi Svenska Українська 中文 Edit links This page was last edited on 29 November 2020, at 23:58 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement