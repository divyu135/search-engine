Yacc - Wikipedia Yacc From Wikipedia, the free encyclopedia Jump to navigation Jump to search Yacc Original author(s) Stephen C. Johnson Repository www.tuhs.org/cgi-bin/utree.pl?file=V6%2Fusr%2Fsource%2Fyacc Operating system Unix, Unix-like, Plan 9, Inferno Platform Cross-platform Type Command Yacc (Yet Another Compiler-Compiler) is a computer program for the Unix operating system developed by Stephen C. Johnson. It is a Look Ahead Left-to-Right (LALR) parser generator, generating a LALR parser (the part of a compiler that tries to make syntactic sense of the source code) based on an formal grammar, written in a notation similar to Backus–Naur Form (BNF).[1] Yacc is supplied as a standard utility on BSD and AT&T Unix.[2] GNU-based Linux distributions include Bison, a forward-compatible Yacc replacement.[3] Contents 1 History 2 Description 3 Impact 4 See also 5 References 6 External links History[edit] In the early 1970s, Stephen C. Johnson, a computer scientist at Bell Labs / AT&T, developed Yacc because he wanted to insert an exclusive or operator into a B language compiler (developed using McIlroy's TMG compiler-compiler[4]), but it turned out to be a hard task. As a result, he was directed by Bell Labs colleague Al Aho to Donald Knuth's work on LR parsing, which served as the basis for Yacc.[5] Yacc was influenced by[6] and received its name in reference to TMG compiler-compiler.[7] Yacc was originally written in the B programming language, but was soon rewritten in C.[4] It appeared as part of Version 3 Unix,[8] and a full description of Yacc was published in 1975.[6] Johnson used Yacc to create the Portable C Compiler.[8] Bjarne Stroustrup, on the other hand, attempted to use Yacc for his initial work on C++, but "was defeated by C's syntax" (for example, having both prefix and postfix declaration operators).[9] In a 2008 interview, Johnson reflected that "the contribution Yacc made to the spread of Unix and C is what I'm proudest of".[10] Description[edit] The input to Yacc is a grammar with snippets of C code (called "actions") attached to its rules. Its output is a shift-reduce parser in C that executes the C snippets associated with each rule as soon as the rule is recognized. Typical actions involve the construction of parse trees. Using an example from Johnson, if the call node(label, left, right) constructs a binary parse tree node with the specified label and children, then the rule expr : expr '+' expr  { $$ = node('+', $1, $3); } recognizes summation expressions and constructs nodes for them. The special identifiers $$, $1 and $3 refer to items on the parser's stack.[6] Yacc produces only a parser (phrase analyzer); for full syntactic analysis this requires an external lexical analyzer to perform the first tokenization stage (word analysis), which is then followed by the parsing stage proper.[6] Lexical analyzer generators, such as Lex or Flex, are widely available. The IEEE POSIX P1003.2 standard defines the functionality and requirements for both Lex and Yacc.[11] Some versions of AT&T Yacc have become open source. For example, source code is available with the standard distributions of Plan 9.[12] Impact[edit] Yacc and similar programs (largely reimplementations) have been very popular. Yacc itself used to be available as the default parser generator on most Unix systems, though it has since been supplanted by more recent, largely compatible, programs such as Berkeley Yacc, GNU Bison, MKS Yacc, and Abraxas PCYACC. An updated version of the original AT&T version is included as part of Sun's OpenSolaris project. Each offers slight improvements and additional features over the original Yacc, but the concept and basic syntax have remained the same.[13] Among the languages that were first implemented with Yacc are AWK, eqn and Pic.[14] Yacc was also used on Unix to implement the Portable C Compiler, as well as parsers for such programming languages as FORTRAN 77, Ratfor, APL, bc, m4, etc.[8][15] Yacc has also been rewritten for other languages, including OCaml,[16] Ratfor, ML, Ada, Pascal, Java, Python, Ruby, Go,[17], Common Lisp[18] and Erlang.[19] Berkeley Yacc: The Berkeley implementation of Yacc quickly became more popular than AT&T Yacc itself because of its performance and lack of reuse restrictions.[20] LALR parser: The underlying parsing algorithm in Yacc-generated parsers. Bison: The GNU version of Yacc. Lex (and Flex lexical analyser), a token parser commonly used in conjunction with Yacc (and Bison). BNF is a metasyntax used to express context-free grammars: that is a formal way to describe context-free languages. PLY (Python Lex-Yacc) is an alternative implementation of Lex and Yacc in Python. See also[edit] Compiler-compiler hoc (programming language) References[edit] ^ "The A-Z of Programming Languages: YACC". Computerworld. Retrieved 30 November 2012. ^ Levine, John (1992). Lex & yacc. Sebastopol, CA: O'Reilly & Associates. p. xx. ISBN 1-56592-000-7. ^ Levine, John (2009). Flex & bison. Sebastopol, Calif: O'Reilly Media. p. xv. ISBN 978-0-596-15597-1. ^ a b Ritchie, Dennis M. (April 1993). The Development of the C Language (PDF). Association for Computing Machinery, Inc. ^ Morris, Richard (1 October 2009). "Stephen Curtis Johnson: Geek of the Week". Red Gate Software. Retrieved 19 January 2018. ^ a b c d Johnson, Stephen C. (1975). Yacc: Yet Another Compiler-Compiler (Technical report). Murray Hill, New Jersey: AT&T Bell Laboratories. 32. Retrieved 31 January 2020. ^ "Early Translator Writing Systems". Atlas Computer Laboratory. ^ a b c McIlroy, M. D. (1987). A Research Unix reader: annotated excerpts from the Programmer's Manual, 1971–1986 (PDF) (Technical report). CSTR. Bell Labs. 139. ^ Stroustrup, Bjarne. "A History of C++: 1979−1991" (PDF). ^ Hamilton, Naomi (2008-07-09). "Yacc, Unix, and advice from Bell Labs alumni Stephen Johnson". www.computerworld.com. Archived from the original on 2020-08-22. Retrieved 2020-11-10. ^ lex – Commands & Utilities Reference, The Single UNIX Specification, Issue 7 from The Open Group, yacc – Commands & Utilities Reference, The Single UNIX Specification, Issue 7 from The Open Group. ^ "plan9: UC Berkeley release of Plan 9 under the GPLv2". 26 December 2017. Retrieved 2 January 2018. ^ Bison Manual: History ^ "UNIX Special: Profs Kernighan & Brailsford". Computerphile. September 30, 2015. ^ Kernighan, Brian W.; Pike, Rob (1984). The Unix Programming Environment. Prentice Hall. ISBN 0-13-937681-X. ^ "OCaml User's Manual: Chapter 12 Lexer and parser generators (ocamllex, ocamlyacc)". Retrieved 25 Nov 2013. ^ "Yacc.go: A version of Yacc for the Go Programming Language". Retrieved 15 July 2017. ^ "CL-Yacc: A Common Lisp version of Yacc". ^ "yecc: An Erlang implementation of Yacc". ^ John Levine (August 2009), flex & bison, O'Reilly Media External links[edit] The Wikibook Guide to Unix has a page on the topic of: Commands yacc – Commands & Utilities Reference, The Single UNIX Specification, Issue 7 from The Open Group yacc(1) – Plan 9 Programmer's Manual, Volume 1 yacc(1) – Inferno General commands Manual v t e Unix command-line interface programs and shell builtins File system cat chmod chown chgrp cksum cmp cp dd du df file fuser ln ls mkdir mv pax pwd rm rmdir split tee touch type umask Processes at bg crontab fg kill nice ps time User environment env exit logname mesg talk tput uname who write Text processing awk basename comm csplit cut diff dirname ed ex fold head iconv join m4 more nl paste patch printf sed sort strings tail tr uniq vi wc xargs Shell builtins alias cd echo test unset wait Searching find grep Documentation man Software development ar ctags lex make nm strip yacc Miscellaneous bc cal expr lp od sleep true and false Categories Standard Unix programs Unix SUS2008 utilities List Retrieved from "https://en.wikipedia.org/w/index.php?title=Yacc&oldid=988085255" Categories: Compiling tools Parser generators Unix programming tools Unix SUS2008 utilities Plan 9 commands Inferno (operating system) commands Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages العربية Azərbaycanca Català Čeština Dansk Deutsch Ελληνικά Español فارسی Français 한국어 Հայերեն Italiano Nederlands 日本語 Norsk bokmål Polski Português Русский Српски / srpski Svenska Українська Tiếng Việt 中文 Edit links This page was last edited on 10 November 2020, at 23:47 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement