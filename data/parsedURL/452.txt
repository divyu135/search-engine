occam (programming language) - Wikipedia occam (programming language) From Wikipedia, the free encyclopedia Jump to navigation Jump to search Not to be confused with OCaml. occam Paradigm Imperative, procedural, concurrent Designed by David May Developer Inmos First appeared 1983; 37 years ago (1983) Stable release 2.1 (official), 2.5 (unofficial), 3 (not fully implemented) / 1994; 26 years ago (1994) Dialects occam-π (pi) Influenced by Communicating sequential processes Influenced Ease, Go, Python occam is a programming language which is concurrent and builds on the communicating sequential processes (CSP) process algebra,[1] and shares many of its features. It is named after philosopher William of Ockham after whom Occam's razor is named. occam is an imperative procedural language (such as Pascal). It was developed by David May and others at Inmos (trademark INMOS), advised by Tony Hoare, as the native programming language for their transputer microprocessors, but implementations for other platforms are available. The most widely known version is occam 2; its programming manual was written by Steven Ericsson-Zenith and others at Inmos. Contents 1 Overview 2 Language revisions 2.1 occam 1 2.2 occam 2 2.3 occam 2.1 2.4 occam-π 3 See also 4 References 5 Further reading 6 External links Overview[edit] In the following examples indentation and formatting are critical for parsing the code: expressions are terminated by the end of the line, lists of expressions need to be on the same level of indentation. This feature, named the off-side rule, is also found in other languages such as Haskell and Python. Communication between processes work through named channels. One process outputs data to a channel via ! while another one inputs data with ?. Input and output cannot proceed until the other end is ready to accept or offer data. (In the not proceeding case it is often said that the process blocks on the channel. However, the program will neither spin nor poll; thus terms like wait, hang or yield may also convey the behaviour; also in the context that it will not block other independent processes from running.) Examples (c is a variable):  keyboard ? c  screen ! c SEQ introduces a list of expressions that are evaluated sequentially. This is not implicit as it is in most other programming languages. Example:  SEQ   x := x + 1   y := x * x PAR begins a list of expressions that may be evaluated concurrently. Example:  PAR   p()   q() ALT specifies a list of guarded commands. The guards are a combination of a boolean condition and an input expression (both optional). Each guard for which the condition is true and the input channel is ready is successful. One of the successful alternatives is selected for execution. Example:  ALT   count1 < 100 & c1 ? data     SEQ       count1 := count1 + 1       merged ! data   count2 < 100 & c2 ? data     SEQ       count2 := count2 + 1       merged ! data   status ? request     SEQ       out ! count1       out ! count2 This will read data from channels c1 or c2 (whichever is ready) and pass it into a merged channel. If countN reaches 100, reads from the corresponding channel will be disabled. A request on the status channel is answered by outputting the counts to out. Language revisions[edit] occam 1[edit] occam 1[2] (released 1983) was a preliminary version of the language which borrowed from David May's work on EPL and Tony Hoare's CSP. This supported only the VAR data type, which was an integral type corresponding to the native word length of the target architecture, and arrays of only one dimension. occam 2[edit] occam 2[3] is an extension produced by Inmos Ltd in 1987 that adds floating-point support, functions, multi-dimensional arrays and more data types such as varying sizes of integers (INT16, INT32) and bytes. With this revision, occam became a language able to express useful programs, whereas occam 1 was more suited to examining algorithms and exploring the new language (however, the occam 1 compiler was written in occam 1,[4] so there is an existence proof that reasonably sized, useful programs could be written in occam 1, despite its limits). occam 2.1[edit] occam 2.1[1] was the last of the series of occam language developments contributed by Inmos. Defined in 1994, it was influenced by an earlier proposal for an occam 3 language (also referred to as "occam91" during its early development) created by Geoff Barrett at Inmos in the early 1990s. A revised Reference Manual describing occam 3 was distributed for community comment,[5] but the language was never fully implemented in a compiler. occam 2.1 introduced several new features to occam 2, including: Named data types (DATA TYPE x IS y) Named records Packed records Relaxation of some of the type conversion rules New operators (e.g. BYTESIN) Channel retyping and channel arrays Ability to return fixed-length array from function. For a full list of the changes see Appendix P of the Inmos occam 2.1 Reference Manual. occam-π[edit] occam-π[6] is the common name for the occam variant implemented by later versions of the Kent Retargetable occam Compiler (KRoC). The addition of the symbol π (pi) to the occam name is an allusion to KRoC occam including several ideas inspired by the π-calculus. It contains several significant extensions to the occam 2.1 compiler, for example: Nested protocols Run-time process creation Mobile channels, data, and processes Recursion Protocol inheritance Array constructors Extended rendezvous See also[edit] The XC programming language, which is based on occam but with C-style syntax. Concurrent programming languages List of concurrent and parallel programming languages References[edit] ^ a b occam 2.1 Reference Manual (PDF). SGS-Thomson Microelectronics Ltd. 1995-05-12. Inmos document 72 occ 45 03 ^ occam Programming Manual. Prentice-Hall. 1984. ISBN 0-13-629296-8. ^ Ericsson-Zenith, Steven (1988). occam 2 Reference Manual. Prentice-Hall. ISBN 0-13-629312-3. ^ Cook, Barry M; Peel, RMA (1999-04-11). "Occam on Field-Programmable Gate Arrays". In Cook, Barry M. (ed.). Architectures, Languages and Techniques for Concurrent Systems. 22nd World Occam and Transputer User Group Technical Meeting. Keele, United Kingdom: IOS Press. p. 219. ISBN 90-5199-480-X. Retrieved 2016-11-28. ^ Barrett, Geoff; Ericsson-Zenith, Steven (1992-03-31). "occam 3 Reference Manual" (PDF). Inmos. Retrieved 2008-03-24. Cite journal requires |journal= (help) ^ Barnes, Fred; Welch, Peter (2006-01-14). "occam-pi: Blending the best of CSP and the pi-calculus". Retrieved 2006-11-24. This article is based on material taken from the Free On-line Dictionary of Computing prior to 1 November 2008 and incorporated under the "relicensing" terms of the GFDL, version 1.3 or later. Further reading[edit] Communicating Process Architectures 2007 – WoTUG-30. IOS Press. 2007. pp. 513 pages. ISBN 978-1-58603-767-3. [1] Communicating Process Architectures 2006 – WoTUG-29. IOS Press. 2006. pp. 391 pages. ISBN 978-1-58603-671-3. [2] Communicating Process Architectures 2005 – WoTUG-28. IOS Press. 2005. pp. 405 pages. ISBN 978-1-58603-561-7. [3] Kerridge, Jon, ed. (1993). Transputer and Occam Research: New Directions. IOS Press. pp. 253 pages. ISBN 0-8247-0711-7. Roscoe, Andrew William; Hoare, Charles Antony Richard (1986). The Laws of Occam Programming. Programming Research Group, Oxford University. Egorov, A., Technical University – Sofia, (1983-2011) Записки по Компютърни архитектури External links[edit] Information, compilers, editors and utilities at the WoTUG occam pages Compilers, documentation, examples, projects and utilities at the Internet Parallel Computing Archive (no longer maintained) Occam books on Transputer.net The occam-pi language. Tock occam compiler – (translator from occam to C from Kent) a Haskell-based compiler for occam and related languages. Retrieved from "https://en.wikipedia.org/w/index.php?title=Occam_(programming_language)&oldid=991648906" Categories: Concurrent programming languages Procedural programming languages Programming languages created in 1983 Hidden categories: CS1 errors: missing periodical Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages Azərbaycanca Deutsch Español Français 한국어 Italiano 日本語 Norsk nynorsk Polski Português Русский Suomi Тоҷикӣ Українська 中文 Edit links This page was last edited on 1 December 2020, at 03:35 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement