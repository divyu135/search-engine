Gnutella - Wikipedia Gnutella From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article is about file sharing technology. For the spread, see Nutella. For the CEO, see Satya Nadella. Large peer-to-peer network by Nullsoft This article needs to be updated. Please update this article to reflect recent events or newly available information. (May 2016) Part of a series on File sharing Technologies File hosting services Online video platform Peer to peer Usenet Web hosting WebRTC XDCC Video sharing sites 123Movies Dailymotion PeerTube Putlocker YouTube BitTorrent sites 1337x Demonoid ExtraTorrent EZTV isoHunt KickassTorrents Nyaa Torrents RARBG Tamil Rockers The Pirate Bay YIFY Academic ICanHazPDF Internet Archive Library Genesis Sci-Hub Academic Torrents File sharing networks BitTorrent Direct Connect eDonkey Freenet Gnutella Gnutella2 list OpenNap WebTorrent P2P clients BitComet DC++ Deluge eMule Î¼Torrent qBittorrent Shareaza Soulseek Transmission Tribler Vuze WinMX Streaming programs Butter Project Popcorn Time Torrents-Time Anonymous file sharing Anonymous P2P Darknet Friend-to-friend I2P Private P2P Proxy server Seedbox Tor VPN Development and societal aspects Timeline Legality BitTorrent issues By country or region Canada Japan Singapore UK US Comparisons Comparison of BitTorrent clients Comparison of BitTorrent sites Comparison of eDonkey software Comparison of Internet Relay Chat clients Comparison of Usenet newsreaders v t e Gnutella is a large peer-to-peer network. It was the first decentralized peer-to-peer network of its kind, leading to other, later networks adopting the model.[1] It celebrated two decades of existence on March 14, 2020, and has a user base in the millions for peer-to-peer file sharing. In June 2005, Gnutella's population was 1.81 million computers[2] increasing to over three million nodes by January 2006.[3] In late 2007, it was the most popular file-sharing network on the Internet with an estimated market share of more than 40%.[4] Contents 1 History 2 Design 3 Protocol features and extensions 4 Software 4.1 General specifications 4.2 Gnutella features 4.2.1 Notes 5 Gnutella2 6 See also 7 References 8 External links History[edit] The first client (also called Gnutella) from which the network got its name[5][6] was developed by Justin Frankel and Tom Pepper of Nullsoft in early 2000, soon after the company's acquisition by AOL. On March 14, the program was made available for download on Nullsoft's servers. The event was prematurely announced on Slashdot, and thousands downloaded the program that day.[7][8] The source code was to be released later, under the GNU General Public License (GPL); however, the original developers never got the chance to accomplish this purpose.[9] The next day, AOL stopped the availability of the program over legal concerns and restrained Nullsoft from doing any further work on the project. This did not stop Gnutella; after a few days, the protocol had been reverse engineered, and compatible free and open source clones began to appear.[10] This parallel development of different clients by different groups remains the modus operandi of Gnutella development today. Among the first independent Gnutella pioneers were Gene Kan and Spencer Kimball, they launched the first portal aimed to assemble the open-source community to work on Gnutella,[11][12] and also developed "GNUbile", one of the first open-source (GNU-GPL) programs to implement the Gnutella protocol.[13][14][15] The Gnutella network is a fully distributed alternative to such semi-centralized systems as FastTrack (KaZaA) and the original Napster. The initial popularity of the network was spurred on by Napster's threatened legal demise in early 2001. This growing surge in popularity revealed the limits of the initial protocol's scalability. In early 2001, variations on the protocol (first implemented in proprietary and closed source clients) allowed an improvement in scalability. Instead of treating every user as client and server, some users were now treated as ultrapeers, routing search requests and responses for users connected to them. This allowed the network to grow in popularity. In late 2001, the Gnutella client LimeWire Basic became free and open source. In February 2002, Morpheus, a commercial file sharing group, abandoned its FastTrack-based peer-to-peer software and released a new client based on the free and open source Gnutella client Gnucleus. The word Gnutella today refers not to any one project or piece of software, but to the open protocol used by the various clients. The name is a portmanteau of GNU and Nutella, the brand name of an Italian hazelnut flavored spread: supposedly, Frankel and Pepper ate a lot of Nutella working on the original project, and intended to license their finished program under the GNU General Public License. Gnutella is not associated with the GNU project[16] or GNU's own peer-to-peer network, GNUnet. On October 26, 2010, the popular Gnutella client LimeWire was ordered shut down by Judge Kimba Wood of the United States District Court for the Southern District of New York when she signed a Consent Decree to which recording industry plaintiffs and LimeWire had agreed. This event was the likely cause of a notable drop[17] in the size of the network, because, while negotiating the injunction, LimeWire staff had inserted remote-disabling code into the software. As the injunction came into force, users who had installed affected versions (newer than 5.5.10) were cut off from the P2P network. Since LimeWire was free software, nothing had prevented the creation of forks that omitted the disabling code, as long as LimeWire trademarks were not used. The shutdown did not affect, for example, FrostWire, a fork of LimeWire created in 2004 that carries neither the remote-disabling code nor adware. On November 9, 2010, LimeWire was resurrected by a secret team of developers and named LimeWire Pirate Edition.[18] It was based on LimeWire 5.6 BETA. This version had its server dependencies removed and all the PRO features enabled for free. Design[edit] The gnutella search and retrieval protocol To envision how Gnutella originally worked, imagine a large circle of users (called nodes), each of whom has Gnutella client software. On initial startup, the client software must bootstrap and find at least one other node. Various methods have been used for this, including a pre-existing address list of possibly working nodes shipped with the software, using updated web caches of known nodes (called Gnutella Web Caches), UDP host caches and, rarely, even IRC. Once connected, the client requests a list of working addresses. The client tries to connect to the nodes it was shipped with, as well as nodes it receives from other clients until it reaches a certain quota. It connects to only that many nodes, locally caching the addresses it has not yet tried and discards the addresses it tried that were invalid.[citation needed] When the user wants to do a search, the client sends the request to each actively connected node. In version 0.4 of the protocol, the number of actively connected nodes for a client was quite small (around 5), so each node then forwarded the request to all its actively connected nodes, and they, in turn, forwarded the request, and so on, until the packet reached a predetermined number of hops from the sender (maximum 7).[citation needed] Since version 0.6 (2002[19]), Gnutella is a composite network made of leaf nodes and ultra nodes (also called ultrapeers). The leaf nodes are connected to a small number of ultrapeers (typically 3) while each ultrapeer is connected to more than 32 other ultrapeers. With this higher outdegree, the maximum number of hops a query can travel was lowered to 4. Leaves and ultrapeers use the Query Routing Protocol to exchange a Query Routing Table (QRT), a table of 64 Ki-slots and up to 2 Mi-slots consisting of hashed keywords. A leaf node sends its QRT to each of the ultrapeers it is connected to, and ultrapeers merge the QRT of all their leaves (downsized to 128 Ki-slots) plus their own QRT (if they share files) and exchange that with their own neighbors. Query routing is then done by hashing the words of the query and seeing whether all of them match in the QRT. Ultrapeers do that check before forwarding a query to a leaf node, and also before forwarding the query to a peer ultra node provided this is the last hop the query can travel. If a search request turns up a result, the node that has the result contacts the searcher. In the classic Gnutella protocol, response messages were sent back along the route the query came through, as the query itself did not contain identifying information of the node. This scheme was later revised, so that search results now are delivered over User Datagram Protocol (UDP) directly to the node that initiated the search, usually an ultrapeer of the node. Thus, in the current protocol, the queries carry the IP address and port number of either node. This lowers the amount of traffic routed through the Gnutella network, making it significantly more scalable.[citation needed] If the user decides to download the file, they negotiate the file transfer. If the node which has the requested file is not firewalled, the querying node can connect to it directly. However, if the node is firewalled, stopping the source node from receiving incoming connections, the client wanting to download a file sends it a so-called push request to the server for the remote client to initiate the connection instead (to push the file). At first, these push requests were routed along the original chain it used to send the query. This was rather unreliable because routes would often break and routed packets are always subject to flow control. Therefore, so-called push proxies were introduced. These are usually the ultrapeers of a leaf node and they are announced in search results. The client connects to one of these push proxies using an HTTP request and the proxy sends a push request to leaf on behalf of the client. Normally, it is also possible to send a push request over UDP to the push proxy which is more efficient than using TCP. Push proxies have two advantages: First, ultrapeer-leaf connections are more stable than routes which makes push requests much more reliable. Second, it reduces the amount of traffic routed through the Gnutella network.[citation needed] Finally, when a user disconnects, the client software saves the list of nodes that it was actively connected to and those collected from pong packets for use the next time it attempts to connect so that it becomes independent from any kind of bootstrap services.[citation needed] In practice, this method of searching on the Gnutella network was often unreliable. Each node is a regular computer user; as such, they are constantly connecting and disconnecting, so the network is never completely stable. Also, the bandwidth cost of searching on Gnutella grew exponentially to the number of connected users,[20] often saturating connections and rendering slower nodes useless. Therefore, search requests would often be dropped, and most queries reached only a very small part of the network. This observation identified the Gnutella network as an unscalable distributed system, and inspired the development of distributed hash tables, which are much more scalable but support only exact-match, rather than keyword, search.[citation needed] To address the problems of bottlenecks, Gnutella developers implemented a tiered system of ultrapeers and leaves. Instead of all nodes being considered equal, nodes entering into the network were kept at the 'edge' of the network as a leaf, not responsible for any routing, and nodes which were capable of routing messages were promoted to ultrapeers, which would accept leaf connections and route searches and network maintenance messages. This allowed searches to propagate further through the network, and allowed for numerous alterations in the topology which have improved the efficiency and scalability greatly.[citation needed] Additionally, gnutella adopted a number of other techniques to reduce traffic overhead and make searches more efficient. Most notable are Query Routing Protocol (QRP) and Dynamic Querying (DQ). With QRP a search reaches only those clients which are likely to have the files, so rare files searches grow vastly more efficient, and with DQ the search stops as soon as the program has acquired enough search results, which vastly reduces the amount of traffic caused by popular searches. Gnutella For Users has a vast amount of information about these and other improvements to Gnutella in user-friendly style.[citation needed] One of the benefits of having Gnutella so decentralized is to make it very difficult to shut the network down and to make it a network in which the users are the only ones who can decide which content will be available. Unlike Napster, where the entire network relied on the central server, Gnutella cannot be shut down by shutting down any one node. A decentralized network prevents bad actors from taking control of the contents of the network and/or manipulating data by controlling the central server.[21] Protocol features and extensions[edit] Gnutella did once operate on a purely query flooding-based protocol. The outdated Gnutella version 0.4 network protocol employs five different packet types, namely[22] ping: discover hosts on network pong: reply to ping query: search for a file query hit: reply to query push: download request for firewalled servants These are mainly concerned with searching the Gnutella network. File transfers are handled using HTTP.[23] The development of the Gnutella protocol is currently led by the Gnutella Developers Forum (The GDF). Many protocol extensions have been and are being developed by the software vendors and free Gnutella developers of the GDF. These extensions include intelligent query routing, SHA-1 checksums, query hit transmission via UDP, querying via UDP, dynamic queries via TCP, file transfers via UDP, XML metadata, source exchange (also termed the download mesh) and parallel downloading in slices (swarming).[23] There are efforts to finalize these protocol extensions in the Gnutella 0.6 specification at the Gnutella protocol development website. The Gnutella 0.4 standard, although still being the latest protocol specification since all extensions only exist as proposals so far, is outdated. In fact, it is hard or impossible to connect today with the 0.4 handshakes and according to developers in the GDF, version 0.6 is what new developers should pursue using the work-in-progress specifications.[citation needed] The Gnutella protocol remains under development and in spite of attempts to make a clean break with the complexity inherited from the old Gnutella 0.4 and to design a clean new message architecture, it is still one of the most successful file-sharing protocols to date.[citation needed] Software[edit] The following tables compare general and technical information for a number of applications supporting the Gnutella network. The tables do not attempt to give a complete list of Gnutella clients. The tables are limited to clients that can participate in the current Gnutella network. General specifications[edit] Name Platform License Project active? (otherwise discontinued) Latest release Heritage Acquisition macOS Proprietary No 2.2 (v223) (November 19, 2010; 10 years ago (2010-11-19)) [Â±] LimeWire BearFlix Windows Proprietary No 5.2.6.0 BearShare BearShare Windows Proprietary No 10.0.0.131462 (January 29, 2013; 7 years ago (2013-01-29)) [Â±] Original work Cabos Java GNU GPL No 0.8.2 (February 9, 2010; 10 years ago (2010-02-09)) [Â±] LimeWire CitrixWire Windows Proprietary No 2014[24] Addax CocoGnut RISC OS Proprietary No 1.21 (2005-06-21) Original work FilesWire (P2P) Java Proprietary No Beta 1.1 (2007) Original work giFT (Gnutella plug-in) Cross-platform GNU GPL No 0.0.11 (2006-08-06) Original work Gnucleus-GnucDNA Windows GNU GPL, LGPL No 2.2.0.0 (June 17, 2005; 15 years ago (2005-06-17)) [Â±] Original work gtk-gnutella Cross-platform GNU GPL Yes 1.2.0 (July 9, 2020; 4 months ago (2020-07-09)) [Â±] Original work KCeasy Windows GNU GPL No 0.19-rc1 (February 3, 2008; 12 years ago (2008-02-03)) [Â±] giFT Kiwi Alpha Windows GNU GPL No 2.2.0.0 (June 17, 2005; 15 years ago (2005-06-17)) [Â±] GnucDNA LimeWire Java GNU GPL No 5.5.16 (September 30, 2010; 10 years ago (2010-09-30)) [Â±] Original work Morpheus Windows Proprietary No 5.55.1 (November 15, 2007; 13 years ago (2007-11-15)) [Â±] GnucDNA Phex Java GNU GPL No 3.4.2.116 (February 1, 2009; 11 years ago (2009-02-01)) [Â±] Original work Poisoned macOS GNU GPL No 0.5191 (August 8, 2006; 14 years ago (2006-08-08)) [Â±] giFT Shareaza Windows GNU GPL Yes 2.7.10.2 (September 18, 2017; 3 years ago (2017-09-18)[25]) [Â±] Original work Symella Symbian GNU GPL No Original work WireShare (aka LimeWire Pirate Edition) Java GNU GPL Yes 6.0.1 (2020-08-29) LimeWire Zultrax Windows Proprietary No 4.33 (April 2009) Original work Discontinued project Gnutella features[edit] Client Hash search Chat[i] Buddy list Handles large files[permanent dead link] (> 4 GiB) Unicode-compatible query routing UPnP port mapping[ii] NAT traversal NAT port mapping RUD[iii] TCP push proxy UDP push proxy Ultrapeer GWebCache[iv] UDP host cache THEX TLS Other BearShare Yes Yes Yes No No Yes Yes Yes Yes Yes No Yes Yes No Yes No - giFT (core & plug-ins) Yes N/A N/A No No No No No No Yes [a] No No [b] Yes No No No - GnucDNA [c] Yes N/A N/A No No No No No No Yes No No [b] Yes No No No - gtk-gnutella Yes [d] No No Yes Yes Yes Yes Yes Yes [e] Yes Yes Yes No (Dropped) Yes Yes Yes IPv6, DHT, GUESS, G2 LimeWire[f] Yes [d] Yes GMail or XMPP Yes Yes Yes Yes [g] Yes [h] Yes Yes Yes Yes Yes Yes Yes Yes DHT WireShare[f] Yes [d] Yes GMail or XMPP Yes Yes Yes Yes [g] Yes [h] Yes Yes Yes Yes Yes Yes Yes Yes DHT Phex Yes Yes No Yes Yes No Yes[i] No No Yes No Yes Yes Yes Yes Yes I2P Shareaza Yes Yes No Yes No Yes Yes Yes No Yes Yes Yes Yes Yes[j] Yes No G2, BT, eD2k, IRC Notes[edit] ^ Refers to direct client-to-client chat; not IRC chat, which is often also available in the same application through an embedded HTTP browser window. ^ Automatically configures port forwarding in routers or combination modem/gateways which support UPnP control. ^ The Reliable UDP protocol provides NAT-to-NAT transfers, sometimes called Firewall-to-Firewall or "hole-punching", in cases where port-forwarding is not or cannot be done by the user. ^ As GWCs had a history of problems with traffic overload and long-term reliability, UDP host caches became the preferred bootstrap method; though some GWCs remain available for the sake of older software. ^ Client mode only, as a dependent leaf on ultrapeers. ^ a b Not high outdegree, so is unusable in its current form. ^ Version 0.9.2.7 ^ a b c Via the Kademlia-based Mojito DHT network supported only by LimeWire and gtk-gnutella (starting with version r15750); this is completely different from SHA-1 searches supported by most gnutella clients. ^ gtk-gnutella version 0.98.4 and later. ^ a b As the LimeWire client is no longer available clients that share most of LimeWire's code base, like FrostWire, can provide an alternative. ^ a b Port triggering or firewall to firewall (FW2FW). ^ a b Automatic with UPnP, or manual configuration in LimeWire firewall options ^ Via SOCKS proxy which can tunnel over SSH. ^ Since version 2.2.4.0 Morpheus differs significantly and may have completely independent code from the GnucDNA engine. Morpheus can function as a modern ultrapeer whereas other GnucDNA clients cannot. Gnucleus and Kiwi Alpha use the GnucDNA engine. BearFlix, a functionally limited version of the BearShare 5.2 series, can search only for images or videos and shared videos are limited to a relatively short length. giFTcurs, Apollon, FilePipe, giFToxic, giFTui, giFTwin32, KCeasy, Poisoned, and Xfactor are GUI front-ends for the giFT engine. etomi uses outdated Shareaza networking code. MP3 Rocket, 360Share, LemonWire, MP3Torpedo, and DexterWire are variants of LimeWire. FrostWire (up to version 4.21.8) is nearly identical to LimeWire 4.18 but versions greater than 5.00 no longer use gnutella. Acquisition and Cabos are custom front-ends overlaying the LimeWire engine. LimeWire Pirate Edition (5.6.2) is a resurrected version of the unreleased LimeWire 5.6.1 alpha, thus has similar features minus automatic updates (with nags) and centralized remote controls to disable core functions like searches and downloads were removed. Gnutella2[edit] Main article: Gnutella2 The Gnutella2 protocol (often referred to as G2), despite its name, is not a successor protocol of Gnutella nor related to the original Gnutella project,[26] but rather is a completely different protocol that forked from the original project and piggybacked on the Gnutella name. A sore point with many Gnutella developers is that the Gnutella2 name conveys an upgrade or superiority, which led to a flame war. Other criticism included the use of the Gnutella network to bootstrap G2 peers and poor documentation of the G2 protocol. Additionally, the more frequent search retries of the Shareaza client, one of the initial G2 clients, could unnecessarily burden the Gnutella network.[27] Both protocols have undergone significant changes since the fork in 2002. G2 has advantages and disadvantages compared to Gnutella. An advantage often cited is Gnutella2's hybrid search is more efficient than the original Gnutella's query flooding, which was later replaced by more efficient search methods, starting with Query Routing in 2002, which was proposed in 2001 by Limewire developers.[28][29][30] An advantage for Gnutella is that its users number in the millions,[3] whereas the G2 network is approximately an order of magnitude smaller.[31] It is difficult to compare the protocols in their current form; the individual client choice will probably have as much of an effect to an end user on either network. See also[edit] Bitzi Gnutella crawler GNUnet References[edit] This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. Find sources: "Gnutella" â news Â· newspapers Â· books Â· scholar Â· JSTOR (July 2013) (Learn how and when to remove this template message) ^ Kushner, David (January 13, 2004). "The World's Most Dangerous Geek". Rolling Stone. Archived from the original on June 30, 2012. Retrieved May 10, 2011. ^ Slyck News - eDonkey2000 Nearly Double the Size of FastTrack Archived 2018-01-29 at the Wayback Machine, Thomas Mennecke for Slyck.com, June 2, 2005. ^ a b On the Long-term Evolution of the Two-Tier Gnutella Overlay. Rasti, Stutzbach, Rejaie, 2006. See Figure 2a. ^ Ars Technica Study: BitTorrent sees big growth, LimeWire still #1 P2P app Eric Bangeman, April 21, 2008. ^ "AOL's Nullsoft creates software for swapping MP3s". CNET. Retrieved 2017-04-13. ^ AfterDawn.com. "Gnutella". AfterDawn. Retrieved 2017-04-13. ^ "Open Source Napster: Gnutella - Slashdot". slashdot.org. ^ "CNN - Breaking News, Latest News and Videos". CNN. ^ "Regarding Gnutella - GNU Project - Free Software Foundation". ^ Schell, Bernadette Hlubik; Schell, Bernadette; Martin, Clemens (2006-09-05). Webster's New World Hacker Dictionary. John Wiley & Sons. ISBN 978-0-470-04752-1. ^ "Programmers help "Napster" clones take off". CNET. Retrieved 2017-04-13. ^ "Gnutella pioneer Gene Kan dies". CNET. Retrieved 2017-04-13. ^ "gnubile file listing". stearns.org. Retrieved 2017-04-13. ^ "The source code for Gnubile". underpop.free.fr. Retrieved 2017-04-13. ^ ftp://ftp.cs.umn.edu/pub/netbsd/NetBSD-current/pkgsrc/net/gnubile/README.html[permanent dead link] ^ "Regarding Gnutella (www.gnu.org)". ^ Chloe Albanesius (18 July 2011). "Indie Labels Sue LimeWire Over Failed Copyright Deal". PC Magazine. Ziff-Davis. Retrieved 19 March 2012. In the wake of the LimeWire shutdown, the percentage of U.S. Internet users who access P2P file-sharing services dropped about 7 percent from [its] all-time high in 2007... ^ Chloe Albanesius (9 November 2010). "Report: LimeWire 'Resurrected' by Secret Dev Team". PC Magazine. Ziff-Davis. Retrieved 19 March 2012. ^ "Gnutella Protocol Development". rfc-gnutella.sourceforge.net. Retrieved 2017-04-13. ^ Why Gnutella Can't Scale. No, Really. February 2001. ^ Berkes, Jem (April 9, 2003). "Decentralized Peer-to-Peer Network Architecture: Gnutella and Freenet" (PDF). berkes.ca/. University of Manitoba. Archived from the original (PDF) on August 8, 2017. Retrieved October 26, 2019. ^ Dye, Mark. McDonald, Rick. Rufi, Antoon W., 'Network Fundamentals', Cisco Networking Academy, Cisco Press, Ch 3. p91 ^ a b Dye, Mark. McDonald, Rick. Rufi, Antoon W., 'Network Fundamentals', Cisco Networking Academy, Cisco Press, Ch 3. p90 ^ "CitrixWire". BrotherSoft. Archived from the original on 2017-04-14. Retrieved 2017-04-13. ^ "Shareaza download page on sourceforge Web site". SourceForge. Retrieved 2019-07-06. ^ Gnutella vs. Gnutella2, Part 2 Thomas Mennecke for Slyck.com, February 25, 2003. ^ Gnutella vs. Gnutella2, Part 1 Archived 2016-03-05 at the Wayback Machine Thomas Mennecke for Slyck.com, February 25, 2003 ^ A comparison of Peer-to-Peer search methods Archived 2007-09-26 at the Wayback Machine Dimitrios Tsoumakos, 2003 ^ Query Routing for the Gnutella Network proposal Christopher Rohrs, 2001-12-18 ^ Query Routing for the Gnutella Network 1.0 Christopher Rohrs, 2002-05-16 ^ G2 Network Statistics Population ~200,000 January 2010. Dye, Mark. McDonald, Rick. Rufi, Antoon W., 'Network Fundamentals', Cisco Networking Academy, Cisco Press, Ch 3. p91 Dye, Mark. McDonald, Rick. Rufi, Antoon W., 'Network Fundamentals', Cisco Networking Academy, Cisco Press, Ch 3. p90 External links[edit] Wikibooks has a book on the topic of: The World of Peer-to-Peer (P2P)/Networks and Protocols/Gnutella Gnutella Forums Official user support boards Gnutella Protocol Development Wiki (on Internet Archive, 2009) Gnutella Protocol Development Portal (on Internet Archive) Gnutella official website (on Internet Archive) GnuFU, Gnutella For Users: A description of the inner workings of the gnutella network in User-Friendly Style Regarding Gnutella by GNU Glasnost test Gnutella traffic shaping (Max Planck Institute for Software Systems) v t e gnutella Pioneers Justin Frankel Tom Pepper Spencer Kimball Gene Kan Technology Tiger Tree hash Distributed hash table Query flooding I2P TLS NAT traversal Magnet URI scheme Terminology Overlay network Gnutella crawler Software GiFT GnucDNA gtk-gnutella KCeasy LimeWire (discontinued; V4 and modifications still work) FrostWire Phex Shareaza Cabos historical clients v t e Peer-to-peer file sharing Networks, protocols Centralized Direct Connect OpenNap Soribada Soulseek Decentralized Ares BitTorrent DAT eDonkey FastTrack Freenet GNUnet Gnutella Gnutella2 I2P IPFS Kad OpenFT Perfect Dark Retroshare Share Tribler WebTorrent WinMX Winny ZeroNet Historic Audiogalaxy CuteMX Entropy Kazaa LimeWire Morpheus Overnet Napster Scour WASTE Comparisons of clients Advanced Direct Connect BitTorrent Direct Connect eDonkey Gnutella Gnutella2 WebTorrent Hyperlinks eD2k Magnet Metalink Uses Backup Broadcatching Segmented file transfer Disk sharing game & video sharing Image sharing Music sharing Peercasting Sharing software Web hosting (Freesite, IPFS, ZeroNet) Legal aspects Concepts Privacy Anonymous P2P Darknet Darkweb Friend-to-friend Open Music Model Private P2P Tor Internal technologies DHT Merkle tree NAT traversal PEX Protocol Encryption SHA-1 Super-seeding Tracker UDP hole punching ÂµTP Retrieved from "https://en.wikipedia.org/w/index.php?title=Gnutella&oldid=981614551" Categories: Gnutella File sharing networks Application layer protocols Hash based data structures Hidden categories: Webarchive template wayback links All articles with dead external links Articles with dead external links from December 2019 Articles with permanently dead external links Articles with short description Short description is different from Wikidata Wikipedia articles in need of updating from May 2016 All Wikipedia articles in need of updating All articles with unsourced statements Articles with unsourced statements from July 2013 Articles needing additional references from July 2013 All articles needing additional references Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons Languages Ø§ÙØ¹Ø±Ø¨ÙØ© ÄeÅ¡tina Dansk Deutsch EspaÃ±ol ÙØ§Ø±Ø³Û FranÃ§ais íêµ­ì´ Italiano ×¢××¨××ª LietuviÅ³ Magyar Bahasa Melayu Nederlands æ¥æ¬èª Norsk bokmÃ¥l Polski PortuguÃªs Ð ÑÑÑÐºÐ¸Ð¹ Suomi Svenska Ð£ÐºÑÐ°ÑÐ½ÑÑÐºÐ° Tiáº¿ng Viá»t ä¸­æ Edit links This page was last edited on 3 October 2020, at 12:15 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. WikipediaÂ® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement