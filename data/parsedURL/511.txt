Recursively enumerable language - Wikipedia Recursively enumerable language From Wikipedia, the free encyclopedia Jump to navigation Jump to search Formal language This article includes a list of references, related reading or external links, but its sources remain unclear because it lacks inline citations. Please help to improve this article by introducing more precise citations. (January 2013) (Learn how and when to remove this template message) In mathematics, logic and computer science, a formal language is called recursively enumerable (also recognizable, partially decidable, semidecidable, Turing-acceptable or Turing-recognizable) if it is a recursively enumerable subset in the set of all possible words over the alphabet of the language, i.e., if there exists a Turing machine which will enumerate all valid strings of the language. Recursively enumerable languages are known as type-0 languages in the Chomsky hierarchy of formal languages. All regular, context-free, context-sensitive and recursive languages are recursively enumerable. The class of all recursively enumerable languages is called RE. Contents 1 Definitions 2 Example 3 Closure properties 4 References 5 External links Definitions[edit] There are three equivalent definitions of a recursively enumerable language: A recursively enumerable language is a recursively enumerable subset in the set of all possible words over the alphabet of the language. A recursively enumerable language is a formal language for which there exists a Turing machine (or other computable function) which will enumerate all valid strings of the language. Note that if the language is infinite, the enumerating algorithm provided can be chosen so that it avoids repetitions, since we can test whether the string produced for number n is "already" produced for a number which is less than n. If it already is produced, use the output for input n+1 instead (recursively), but again, test whether it is "new". A recursively enumerable language is a formal language for which there exists a Turing machine (or other computable function) that will halt and accept when presented with any string in the language as input but may either halt and reject or loop forever when presented with a string not in the language. Contrast this to recursive languages, which require that the Turing machine halts in all cases. All regular, context-free, context-sensitive and recursive languages are recursively enumerable. Post's theorem shows that RE, together with its complement co-RE, correspond to the first level of the arithmetical hierarchy. Example[edit] The set of halting turing machines is recursively enumerable but not recursive. Indeed, one can run the Turing Machine and accept if the machine halts, hence it is recursively enumerable. On the other hand, the problem is undecidable. Some other recursively enumerable languages that are not recursive include: Post correspondence problem Mortality (computability theory) Entscheidungsproblem Closure properties[edit] Recursively enumerable languages (REL) are closed under the following operations. That is, if L and P are two recursively enumerable languages, then the following languages are recursively enumerable as well: the Kleene star L ∗ {\displaystyle L^{*}} of L the concatenation L ∘ P {\displaystyle L\circ P} of L and P the union L ∪ P {\displaystyle L\cup P} the intersection L ∩ P {\displaystyle L\cap P} . Recursively enumerable languages are not closed under set difference or complementation. The set difference L {\displaystyle L} − P {\displaystyle P} is recursively enumerable if P {\displaystyle P} is recursive. If L {\displaystyle L} is recursively enumerable, then the complement of L {\displaystyle L} is recursively enumerable if and only if L {\displaystyle L} is also recursive. References[edit] Sipser, M. (1996), Introduction to the Theory of Computation, PWS Publishing Co. Kozen, D.C. (1997), Automata and Computability, Springer. External links[edit] Complexity Zoo: Class RE Lecture slides v t e Automata theory: formal languages and formal grammars Chomsky hierarchy Grammars Languages Abstract machines Type-0 — Type-1 — — — — — Type-2 — — Type-3 — — Unrestricted (no common name) Context-sensitive Positive range concatenation Indexed — Linear context-free rewriting systems Tree-adjoining Context-free Deterministic context-free Visibly pushdown Regular — Non-recursive Recursively enumerable Decidable Context-sensitive Positive range concatenation* Indexed* — Linear context-free rewriting language Tree-adjoining Context-free Deterministic context-free Visibly pushdown Regular Star-free Finite Turing machine Decider Linear-bounded PTIME Turing Machine Nested stack Thread automaton restricted Tree stack automaton Embedded pushdown Nondeterministic pushdown Deterministic pushdown Visibly pushdown Finite Counter-free (with aperiodic finite monoid) Acyclic finite Each category of languages, except those marked by a *, is a proper subset of the category directly above it. Any language in each category is generated by a grammar and by an automaton in the category in the same line. Retrieved from "https://en.wikipedia.org/w/index.php?title=Recursively_enumerable_language&oldid=981479467" Categories: Formal languages Theory of computation Mathematics of computing Alan Turing Hidden categories: Articles with short description Short description matches Wikidata Articles lacking in-text citations from January 2013 All articles lacking in-text citations Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages Català Čeština Deutsch Español فارسی 한국어 Hrvatski Italiano 日本語 Norsk bokmål Norsk nynorsk Polski Português Русский Slovenčina Српски / srpski Srpskohrvatski / српскохрватски 中文 Edit links This page was last edited on 2 October 2020, at 15:31 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License;additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement